{"ast":null,"code":"import { useValidation } from './useValidation';\nexport var validateDate = function validateDate(utils, value, _ref) {\n  var disablePast = _ref.disablePast,\n      disableFuture = _ref.disableFuture,\n      minDate = _ref.minDate,\n      maxDate = _ref.maxDate,\n      shouldDisableDate = _ref.shouldDisableDate;\n  var now = utils.date();\n  var date = utils.date(value);\n\n  if (date === null) {\n    return null;\n  }\n\n  switch (true) {\n    case !utils.isValid(value):\n      return 'invalidDate';\n\n    case Boolean(shouldDisableDate && shouldDisableDate(date)):\n      return 'shouldDisableDate';\n\n    case Boolean(disableFuture && utils.isAfterDay(date, now)):\n      return 'disableFuture';\n\n    case Boolean(disablePast && utils.isBeforeDay(date, now)):\n      return 'disablePast';\n\n    case Boolean(minDate && utils.isBeforeDay(date, minDate)):\n      return 'minDate';\n\n    case Boolean(maxDate && utils.isAfterDay(date, maxDate)):\n      return 'maxDate';\n\n    default:\n      return null;\n  }\n};\n\nvar isSameDateError = function isSameDateError(a, b) {\n  return a === b;\n};\n\nexport var useDateValidation = function useDateValidation(props) {\n  return useValidation(props, validateDate, isSameDateError);\n};","map":{"version":3,"names":["useValidation","validateDate","utils","value","disablePast","disableFuture","minDate","maxDate","shouldDisableDate","now","date","isValid","Boolean","isAfterDay","isBeforeDay","isSameDateError","a","b","useDateValidation","props"],"sources":["F:/Do An Tot Nghiep/FE/node_modules/@mui/lab/node_modules/@mui/x-date-pickers/internals/hooks/validation/useDateValidation.js"],"sourcesContent":["import { useValidation } from './useValidation';\nexport const validateDate = (utils, value, {\n  disablePast,\n  disableFuture,\n  minDate,\n  maxDate,\n  shouldDisableDate\n}) => {\n  const now = utils.date();\n  const date = utils.date(value);\n\n  if (date === null) {\n    return null;\n  }\n\n  switch (true) {\n    case !utils.isValid(value):\n      return 'invalidDate';\n\n    case Boolean(shouldDisableDate && shouldDisableDate(date)):\n      return 'shouldDisableDate';\n\n    case Boolean(disableFuture && utils.isAfterDay(date, now)):\n      return 'disableFuture';\n\n    case Boolean(disablePast && utils.isBeforeDay(date, now)):\n      return 'disablePast';\n\n    case Boolean(minDate && utils.isBeforeDay(date, minDate)):\n      return 'minDate';\n\n    case Boolean(maxDate && utils.isAfterDay(date, maxDate)):\n      return 'maxDate';\n\n    default:\n      return null;\n  }\n};\n\nconst isSameDateError = (a, b) => a === b;\n\nexport const useDateValidation = props => useValidation(props, validateDate, isSameDateError);"],"mappings":"AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,KAAR,QAMtB;EAAA,IALJC,WAKI,QALJA,WAKI;EAAA,IAJJC,aAII,QAJJA,aAII;EAAA,IAHJC,OAGI,QAHJA,OAGI;EAAA,IAFJC,OAEI,QAFJA,OAEI;EAAA,IADJC,iBACI,QADJA,iBACI;EACJ,IAAMC,GAAG,GAAGP,KAAK,CAACQ,IAAN,EAAZ;EACA,IAAMA,IAAI,GAAGR,KAAK,CAACQ,IAAN,CAAWP,KAAX,CAAb;;EAEA,IAAIO,IAAI,KAAK,IAAb,EAAmB;IACjB,OAAO,IAAP;EACD;;EAED,QAAQ,IAAR;IACE,KAAK,CAACR,KAAK,CAACS,OAAN,CAAcR,KAAd,CAAN;MACE,OAAO,aAAP;;IAEF,KAAKS,OAAO,CAACJ,iBAAiB,IAAIA,iBAAiB,CAACE,IAAD,CAAvC,CAAZ;MACE,OAAO,mBAAP;;IAEF,KAAKE,OAAO,CAACP,aAAa,IAAIH,KAAK,CAACW,UAAN,CAAiBH,IAAjB,EAAuBD,GAAvB,CAAlB,CAAZ;MACE,OAAO,eAAP;;IAEF,KAAKG,OAAO,CAACR,WAAW,IAAIF,KAAK,CAACY,WAAN,CAAkBJ,IAAlB,EAAwBD,GAAxB,CAAhB,CAAZ;MACE,OAAO,aAAP;;IAEF,KAAKG,OAAO,CAACN,OAAO,IAAIJ,KAAK,CAACY,WAAN,CAAkBJ,IAAlB,EAAwBJ,OAAxB,CAAZ,CAAZ;MACE,OAAO,SAAP;;IAEF,KAAKM,OAAO,CAACL,OAAO,IAAIL,KAAK,CAACW,UAAN,CAAiBH,IAAjB,EAAuBH,OAAvB,CAAZ,CAAZ;MACE,OAAO,SAAP;;IAEF;MACE,OAAO,IAAP;EApBJ;AAsBD,CApCM;;AAsCP,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAIC,CAAJ;EAAA,OAAUD,CAAC,KAAKC,CAAhB;AAAA,CAAxB;;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK;EAAA,OAAInB,aAAa,CAACmB,KAAD,EAAQlB,YAAR,EAAsBc,eAAtB,CAAjB;AAAA,CAA/B"},"metadata":{},"sourceType":"module"}