{"ast":null,"code":"import _objectSpread from \"F:/Do An Tot Nghiep/FE/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"F:/Do An Tot Nghiep/FE/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"F:\\\\Do An Tot Nghiep\\\\FE\\\\src\\\\app\\\\views\\\\material-kit\\\\auto-complete\\\\AutocompleteCombo.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Autocomplete, styled, TextField } from '@mui/material';\nimport { createFilterOptions } from '@mui/material/Autocomplete';\nimport React, { Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar AutoComplete = styled(Autocomplete)(function () {\n  return {\n    width: 300,\n    marginBottom: '16px'\n  };\n});\nvar suggestions = [{\n  label: 'Afghanistan'\n}, {\n  label: 'Aland Islands'\n}, {\n  label: 'Albania'\n}, {\n  label: 'Algeria'\n}, {\n  label: 'American Samoa'\n}, {\n  label: 'Andorra'\n}, {\n  label: 'Angola'\n}, {\n  label: 'Anguilla'\n}, {\n  label: 'Antarctica'\n}, {\n  label: 'Antigua and Barbuda'\n}, {\n  label: 'Argentina'\n}, {\n  label: 'Armenia'\n}, {\n  label: 'Aruba'\n}, {\n  label: 'Australia'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Azerbaijan'\n}, {\n  label: 'Bahamas'\n}, {\n  label: 'Bahrain'\n}, {\n  label: 'Bangladesh'\n}, {\n  label: 'Barbados'\n}, {\n  label: 'Belarus'\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Belize'\n}, {\n  label: 'Benin'\n}, {\n  label: 'Bermuda'\n}, {\n  label: 'Bhutan'\n}, {\n  label: 'Bolivia, Plurinational State of'\n}, {\n  label: 'Bonaire, Sint Eustatius and Saba'\n}, {\n  label: 'Bosnia and Herzegovina'\n}, {\n  label: 'Botswana'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Brunei Darussalam'\n}];\nvar filter = createFilterOptions();\n\nvar AutocompleteCombo = function AutocompleteCombo() {\n  _s();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(_, newValue) {\n    if (newValue && newValue.inputValue) {\n      setValue({\n        label: newValue.inputValue\n      });\n      return;\n    }\n\n    setValue(newValue);\n  };\n\n  var filterOptions = function filterOptions(options, params) {\n    var filtered = filter(options, params);\n\n    if (params.inputValue !== '') {\n      filtered.push({\n        inputValue: params.inputValue,\n        label: \"Add \\\"\".concat(params.inputValue, \"\\\"\")\n      });\n    }\n\n    return filtered;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AutoComplete, {\n      options: suggestions,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.label;\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Combo box\",\n          variant: \"outlined\",\n          fullWidth: true\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n      value: value,\n      options: suggestions,\n      onChange: handleChange,\n      filterOptions: filterOptions,\n      getOptionLabel: function getOptionLabel(option) {\n        // e.g value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n\n        return option.label;\n      },\n      renderOption: function renderOption(option) {\n        return option.label;\n      },\n      style: {\n        width: 300\n      },\n      freeSolo: true,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Free solo with text demo\",\n          variant: \"outlined\",\n          fullWidth: true\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n      options: suggestions,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.label;\n      },\n      getOptionDisabled: function getOptionDisabled(option) {\n        return option === suggestions[0] || option === suggestions[2];\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Disabled option\",\n          variant: \"outlined\",\n          fullWidth: true\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AutocompleteCombo, \"EEjdpY/CSe7/lDQurV9yi1RbKSs=\");\n\n_c = AutocompleteCombo;\nexport default AutocompleteCombo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutocompleteCombo\");","map":{"version":3,"names":["Autocomplete","styled","TextField","createFilterOptions","React","Fragment","AutoComplete","width","marginBottom","suggestions","label","filter","AutocompleteCombo","useState","value","setValue","handleChange","_","newValue","inputValue","filterOptions","options","params","filtered","push","option"],"sources":["F:/Do An Tot Nghiep/FE/src/app/views/material-kit/auto-complete/AutocompleteCombo.jsx"],"sourcesContent":["import { Autocomplete, styled, TextField } from '@mui/material';\r\nimport { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport React, { Fragment } from 'react';\r\n\r\nconst AutoComplete = styled(Autocomplete)(() => ({\r\n  width: 300,\r\n  marginBottom: '16px',\r\n}));\r\n\r\nconst suggestions = [\r\n  { label: 'Afghanistan' },\r\n  { label: 'Aland Islands' },\r\n  { label: 'Albania' },\r\n  { label: 'Algeria' },\r\n  { label: 'American Samoa' },\r\n  { label: 'Andorra' },\r\n  { label: 'Angola' },\r\n  { label: 'Anguilla' },\r\n  { label: 'Antarctica' },\r\n  { label: 'Antigua and Barbuda' },\r\n  { label: 'Argentina' },\r\n  { label: 'Armenia' },\r\n  { label: 'Aruba' },\r\n  { label: 'Australia' },\r\n  { label: 'Austria' },\r\n  { label: 'Azerbaijan' },\r\n  { label: 'Bahamas' },\r\n  { label: 'Bahrain' },\r\n  { label: 'Bangladesh' },\r\n  { label: 'Barbados' },\r\n  { label: 'Belarus' },\r\n  { label: 'Belgium' },\r\n  { label: 'Belize' },\r\n  { label: 'Benin' },\r\n  { label: 'Bermuda' },\r\n  { label: 'Bhutan' },\r\n  { label: 'Bolivia, Plurinational State of' },\r\n  { label: 'Bonaire, Sint Eustatius and Saba' },\r\n  { label: 'Bosnia and Herzegovina' },\r\n  { label: 'Botswana' },\r\n  { label: 'Bouvet Island' },\r\n  { label: 'Brazil' },\r\n  { label: 'British Indian Ocean Territory' },\r\n  { label: 'Brunei Darussalam' },\r\n];\r\n\r\nconst filter = createFilterOptions();\r\n\r\nconst AutocompleteCombo = () => {\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  const handleChange = (_, newValue) => {\r\n    if (newValue && newValue.inputValue) {\r\n      setValue({ label: newValue.inputValue });\r\n      return;\r\n    }\r\n    setValue(newValue);\r\n  };\r\n\r\n  const filterOptions = (options, params) => {\r\n    const filtered = filter(options, params);\r\n    if (params.inputValue !== '') {\r\n      filtered.push({ inputValue: params.inputValue, label: `Add \"${params.inputValue}\"` });\r\n    }\r\n    return filtered;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <AutoComplete\r\n        options={suggestions}\r\n        getOptionLabel={(option) => option.label}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Combo box\" variant=\"outlined\" fullWidth />\r\n        )}\r\n      />\r\n\r\n      <AutoComplete\r\n        value={value}\r\n        options={suggestions}\r\n        onChange={handleChange}\r\n        filterOptions={filterOptions}\r\n        getOptionLabel={(option) => {\r\n          // e.g value selected with enter, right from the input\r\n          if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.label;\r\n        }}\r\n        renderOption={(option) => option.label}\r\n        style={{ width: 300 }}\r\n        freeSolo\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Free solo with text demo\" variant=\"outlined\" fullWidth />\r\n        )}\r\n      />\r\n\r\n      <AutoComplete\r\n        options={suggestions}\r\n        getOptionLabel={(option) => option.label}\r\n        getOptionDisabled={(option) => option === suggestions[0] || option === suggestions[2]}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Disabled option\" variant=\"outlined\" fullWidth />\r\n        )}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AutocompleteCombo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}