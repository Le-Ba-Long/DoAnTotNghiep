{"ast":null,"code":"import _regeneratorRuntime from \"F:/Do An Tot Nghiep/FE/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"F:/Do An Tot Nghiep/FE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"F:/Do An Tot Nghiep/FE/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"F:/Do An Tot Nghiep/FE/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"F:\\\\Do An Tot Nghiep\\\\FE\\\\src\\\\app\\\\contexts\\\\NotificationContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'LOAD_NOTIFICATIONS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          notifications: action.payload\n        });\n      }\n\n    case 'DELETE_NOTIFICATION':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          notifications: action.payload\n        });\n      }\n\n    case 'CLEAR_NOTIFICATIONS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          notifications: action.payload\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nvar NotificationContext = /*#__PURE__*/createContext({\n  notifications: [],\n  deleteNotification: function deleteNotification() {},\n  clearNotifications: function clearNotifications() {},\n  getNotifications: function getNotifications() {},\n  createNotification: function createNotification() {}\n});\nexport var NotificationProvider = function NotificationProvider(_ref) {\n  _s();\n\n  var settings = _ref.settings,\n      children = _ref.children;\n\n  var _useReducer = useReducer(reducer, []),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var deleteNotification = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(notificationID) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post('/api/notification/delete', {\n                id: notificationID\n              });\n\n            case 3:\n              res = _context.sent;\n              dispatch({\n                type: 'DELETE_NOTIFICATION',\n                payload: res.data\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function deleteNotification(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var clearNotifications = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post('/api/notification/delete-all');\n\n            case 3:\n              res = _context2.sent;\n              dispatch({\n                type: 'CLEAR_NOTIFICATIONS',\n                payload: res.data\n              });\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function clearNotifications() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getNotifications = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.get('/api/notification');\n\n            case 3:\n              res = _context3.sent;\n              dispatch({\n                type: 'LOAD_NOTIFICATIONS',\n                payload: res.data\n              });\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error(_context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function getNotifications() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var createNotification = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(notification) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.post('/api/notification/add', {\n                notification: notification\n              });\n\n            case 3:\n              res = _context4.sent;\n              dispatch({\n                type: 'CREATE_NOTIFICATION',\n                payload: res.data\n              });\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error(_context4.t0);\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function createNotification(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getNotifications();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      notifications: state.notifications,\n      deleteNotification: deleteNotification,\n      clearNotifications: clearNotifications,\n      getNotifications: getNotifications,\n      createNotification: createNotification\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(NotificationProvider, \"8u/JqpRC/mF6XFjbMf7O0gRQXow=\");\n\n_c = NotificationProvider;\nexport default NotificationContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useReducer","axios","reducer","state","action","type","notifications","payload","NotificationContext","deleteNotification","clearNotifications","getNotifications","createNotification","NotificationProvider","settings","children","dispatch","notificationID","post","id","res","data","console","error","get","notification"],"sources":["F:/Do An Tot Nghiep/FE/src/app/contexts/NotificationContext.js"],"sourcesContent":["import React, { createContext, useEffect, useReducer } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOAD_NOTIFICATIONS': {\r\n            return {\r\n                ...state,\r\n                notifications: action.payload,\r\n            }\r\n        }\r\n        case 'DELETE_NOTIFICATION': {\r\n            return {\r\n                ...state,\r\n                notifications: action.payload,\r\n            }\r\n        }\r\n        case 'CLEAR_NOTIFICATIONS': {\r\n            return {\r\n                ...state,\r\n                notifications: action.payload,\r\n            }\r\n        }\r\n        default: {\r\n            return { ...state }\r\n        }\r\n    }\r\n}\r\n\r\nconst NotificationContext = createContext({\r\n    notifications: [],\r\n    deleteNotification: () => {},\r\n    clearNotifications: () => {},\r\n    getNotifications: () => {},\r\n    createNotification: () => {},\r\n})\r\n\r\nexport const NotificationProvider = ({ settings, children }) => {\r\n    const [state, dispatch] = useReducer(reducer, [])\r\n\r\n    const deleteNotification = async (notificationID) => {\r\n        try {\r\n            const res = await axios.post('/api/notification/delete', {\r\n                id: notificationID,\r\n            })\r\n            dispatch({\r\n                type: 'DELETE_NOTIFICATION',\r\n                payload: res.data,\r\n            })\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    const clearNotifications = async () => {\r\n        try {\r\n            const res = await axios.post('/api/notification/delete-all')\r\n            dispatch({\r\n                type: 'CLEAR_NOTIFICATIONS',\r\n                payload: res.data,\r\n            })\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    const getNotifications = async () => {\r\n        try {\r\n            const res = await axios.get('/api/notification')\r\n            dispatch({\r\n                type: 'LOAD_NOTIFICATIONS',\r\n                payload: res.data,\r\n            })\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n    const createNotification = async (notification) => {\r\n        try {\r\n            const res = await axios.post('/api/notification/add', {\r\n                notification,\r\n            })\r\n            dispatch({\r\n                type: 'CREATE_NOTIFICATION',\r\n                payload: res.data,\r\n            })\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotifications()\r\n    }, [])\r\n\r\n    return (\r\n        <NotificationContext.Provider\r\n            value={{\r\n                notifications: state.notifications,\r\n                deleteNotification,\r\n                clearNotifications,\r\n                getNotifications,\r\n                createNotification,\r\n            }}\r\n        >\r\n            {children}\r\n        </NotificationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NotificationContext\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}