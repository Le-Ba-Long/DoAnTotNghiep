{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nvar plPLPickers = {\n  // Calendar navigation\n  previousMonth: 'Poprzedni miesiąc',\n  nextMonth: 'Następny miesiąc',\n  // View navigation\n  openPreviousView: 'otwórz poprzedni widok',\n  openNextView: 'otwórz następny widok',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? 'otwarty jest widok roku, przełącz na widok kalendarza' : 'otwarty jest widok kalendarza, przełącz na widok roku';\n  },\n  // inputModeToggleButtonAriaLabel: (isKeyboardInputOpen: boolean, viewType: 'calendar' | 'clock') => isKeyboardInputOpen ? `text input view is open, go to ${viewType} view` : `${viewType} view is open, go to text input view`,\n  // DateRange placeholders\n  start: 'Początek',\n  end: 'Koniec',\n  // Action bar\n  cancelButtonLabel: 'Anuluj',\n  clearButtonLabel: 'Wyczyść',\n  okButtonLabel: 'Zatwierdź',\n  todayButtonLabel: 'Dzisiaj',\n  // Toolbar titles\n  // datePickerDefaultToolbarTitle: 'Select date',\n  // dateTimePickerDefaultToolbarTitle: 'Select date & time',\n  // timePickerDefaultToolbarTitle: 'Select time',\n  // dateRangePickerDefaultToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    return \"Select \".concat(view, \". \").concat(time === null ? 'Nie wybrano czasu' : \"Wybrany czas to \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \" godzin\");\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \" minut\");\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \" sekund\");\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Wybierz dat\\u0119, obecnie wybrana data to \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Wybierz datę';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Wybierz czas, obecnie wybrany czas to \".concat(utils.format(utils.date(rawValue), 'fullTime')) : 'Wybierz czas';\n  },\n  // Table labels\n  timeTableLabel: 'wybierz czas',\n  dateTableLabel: 'wybierz datę'\n};\nexport var plPL = getPickersLocalization(plPLPickers);","map":{"version":3,"names":["getPickersLocalization","plPLPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","clockLabelText","time","adapter","format","hoursClockNumberText","hours","minutesClockNumberText","minutes","secondsClockNumberText","seconds","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","plPL"],"sources":["F:/Do An Tot Nghiep/FE/node_modules/@mui/x-date-pickers/locales/plPL.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst plPLPickers = {\n  // Calendar navigation\n  previousMonth: 'Poprzedni miesiąc',\n  nextMonth: 'Następny miesiąc',\n  // View navigation\n  openPreviousView: 'otwórz poprzedni widok',\n  openNextView: 'otwórz następny widok',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'otwarty jest widok roku, przełącz na widok kalendarza' : 'otwarty jest widok kalendarza, przełącz na widok roku',\n  // inputModeToggleButtonAriaLabel: (isKeyboardInputOpen: boolean, viewType: 'calendar' | 'clock') => isKeyboardInputOpen ? `text input view is open, go to ${viewType} view` : `${viewType} view is open, go to text input view`,\n  // DateRange placeholders\n  start: 'Początek',\n  end: 'Koniec',\n  // Action bar\n  cancelButtonLabel: 'Anuluj',\n  clearButtonLabel: 'Wyczyść',\n  okButtonLabel: 'Zatwierdź',\n  todayButtonLabel: 'Dzisiaj',\n  // Toolbar titles\n  // datePickerDefaultToolbarTitle: 'Select date',\n  // dateTimePickerDefaultToolbarTitle: 'Select date & time',\n  // timePickerDefaultToolbarTitle: 'Select time',\n  // dateRangePickerDefaultToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'Nie wybrano czasu' : `Wybrany czas to ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} godzin`,\n  minutesClockNumberText: minutes => `${minutes} minut`,\n  secondsClockNumberText: seconds => `${seconds} sekund`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Wybierz datę, obecnie wybrana data to ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Wybierz datę',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Wybierz czas, obecnie wybrany czas to ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Wybierz czas',\n  // Table labels\n  timeTableLabel: 'wybierz czas',\n  dateTableLabel: 'wybierz datę'\n};\nexport const plPL = getPickersLocalization(plPLPickers);"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC;AACA,IAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,mBAFG;EAGlBC,SAAS,EAAE,kBAHO;EAIlB;EACAC,gBAAgB,EAAE,wBALA;EAMlBC,YAAY,EAAE,uBANI;EAOlBC,oCAAoC,EAAE,8CAAAC,IAAI;IAAA,OAAIA,IAAI,KAAK,MAAT,GAAkB,uDAAlB,GAA4E,uDAAhF;EAAA,CAPxB;EAQlB;EACA;EACAC,KAAK,EAAE,UAVW;EAWlBC,GAAG,EAAE,QAXa;EAYlB;EACAC,iBAAiB,EAAE,QAbD;EAclBC,gBAAgB,EAAE,SAdA;EAelBC,aAAa,EAAE,WAfG;EAgBlBC,gBAAgB,EAAE,SAhBA;EAiBlB;EACA;EACA;EACA;EACA;EACA;EACAC,cAAc,EAAE,wBAACP,IAAD,EAAOQ,IAAP,EAAaC,OAAb;IAAA,wBAAmCT,IAAnC,eAA4CQ,IAAI,KAAK,IAAT,GAAgB,mBAAhB,6BAAyDC,OAAO,CAACC,MAAR,CAAeF,IAAf,EAAqB,UAArB,CAAzD,CAA5C;EAAA,CAvBE;EAwBlBG,oBAAoB,EAAE,8BAAAC,KAAK;IAAA,iBAAOA,KAAP;EAAA,CAxBT;EAyBlBC,sBAAsB,EAAE,gCAAAC,OAAO;IAAA,iBAAOA,OAAP;EAAA,CAzBb;EA0BlBC,sBAAsB,EAAE,gCAAAC,OAAO;IAAA,iBAAOA,OAAP;EAAA,CA1Bb;EA2BlB;EACAC,sBAAsB,EAAE,gCAACC,QAAD,EAAWC,KAAX;IAAA,OAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,wDAA2FC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA3F,IAA8I,cAAnK;EAAA,CA5BN;EA6BlBI,sBAAsB,EAAE,gCAACJ,QAAD,EAAWC,KAAX;IAAA,OAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,mDAA2FC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA3F,IAA8I,cAAnK;EAAA,CA7BN;EA8BlB;EACAK,cAAc,EAAE,cA/BE;EAgClBC,cAAc,EAAE;AAhCE,CAApB;AAkCA,OAAO,IAAMC,IAAI,GAAGhC,sBAAsB,CAACC,WAAD,CAAnC"},"metadata":{},"sourceType":"module"}