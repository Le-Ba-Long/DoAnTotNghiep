{"ast":null,"code":"import _slicedToArray from \"F:/Do An Tot Nghiep/FE/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"F:\\\\Do An Tot Nghiep\\\\FE\\\\src\\\\app\\\\views\\\\material-kit\\\\menu\\\\SelectedMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport { List, ListItem, ListItemText, Menu, MenuItem } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar MenuRoot = styled(\"div\")(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  };\n});\nvar options = [\"Show some love to Material-UI\", \"Show all notification content\", \"Hide sensitive notification content\", \"Hide all notification content\"];\nexport default function SelectedMenu() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedIndex = _React$useState4[0],\n      setSelectedIndex = _React$useState4[1];\n\n  function handleClickListItem(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMenuItemClick(event, index) {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MenuRoot, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      \"aria-label\": \"Device settings\",\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        \"aria-haspopup\": \"true\",\n        \"aria-controls\": \"lock-menu\",\n        \"aria-label\": \"When device is locked\",\n        onClick: handleClickListItem,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"When device is locked\",\n          secondary: options[selectedIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"lock-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: options.map(function (option, index) {\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: index === 0,\n          selected: index === selectedIndex,\n          onClick: function onClick(event) {\n            return handleMenuItemClick(event, index);\n          },\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectedMenu, \"FISXl8yJ5jG0MaBbs/L2MKn/ZjQ=\");\n\n_c = SelectedMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedMenu\");","map":{"version":3,"names":["List","ListItem","ListItemText","Menu","MenuItem","styled","React","MenuRoot","theme","width","maxWidth","backgroundColor","palette","background","paper","options","SelectedMenu","useState","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","handleClickListItem","event","currentTarget","handleMenuItemClick","index","handleClose","Boolean","map","option"],"sources":["F:/Do An Tot Nghiep/FE/src/app/views/material-kit/menu/SelectedMenu.jsx"],"sourcesContent":["import { List, ListItem, ListItemText, Menu, MenuItem } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport React from \"react\";\r\n\r\nconst MenuRoot = styled(\"div\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  maxWidth: 360,\r\n  backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\",\r\n];\r\n\r\nexport default function SelectedMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  function handleClickListItem(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleMenuItemClick(event, index) {\r\n    setSelectedIndex(index);\r\n    setAnchorEl(null);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <MenuRoot>\r\n      <List component=\"nav\" aria-label=\"Device settings\">\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"When device is locked\"\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText primary=\"When device is locked\" secondary={options[selectedIndex]} />\r\n        </ListItem>\r\n      </List>\r\n\r\n      <Menu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {options.map((option, index) => (\r\n          <MenuItem\r\n            key={option}\r\n            disabled={index === 0}\r\n            selected={index === selectedIndex}\r\n            onClick={(event) => handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"],"mappings":";;;;;AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,YAAzB,EAAuCC,IAAvC,EAA6CC,QAA7C,QAA6D,eAA7D;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,QAAQ,GAAGF,MAAM,CAAC,KAAD,CAAN,CAAc;EAAA,IAAGG,KAAH,QAAGA,KAAH;EAAA,OAAgB;IAC7CC,KAAK,EAAE,MADsC;IAE7CC,QAAQ,EAAE,GAFmC;IAG7CC,eAAe,EAAEH,KAAK,CAACI,OAAN,CAAcC,UAAd,CAAyBC;EAHG,CAAhB;AAAA,CAAd,CAAjB;AAMA,IAAMC,OAAO,GAAG,CACd,+BADc,EAEd,+BAFc,EAGd,qCAHc,EAId,+BAJc,CAAhB;AAOA,eAAe,SAASC,YAAT,GAAwB;EAAA;;EAAA;;EACrC,sBAAgCV,KAAK,CAACW,QAAN,CAAe,IAAf,CAAhC;EAAA;EAAA,IAAOC,QAAP;EAAA,IAAiBC,WAAjB;;EACA,uBAA0Cb,KAAK,CAACW,QAAN,CAAe,CAAf,CAA1C;EAAA;EAAA,IAAOG,aAAP;EAAA,IAAsBC,gBAAtB;;EAEA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;IAClCJ,WAAW,CAACI,KAAK,CAACC,aAAP,CAAX;EACD;;EACD,SAASC,mBAAT,CAA6BF,KAA7B,EAAoCG,KAApC,EAA2C;IACzCL,gBAAgB,CAACK,KAAD,CAAhB;IACAP,WAAW,CAAC,IAAD,CAAX;EACD;;EACD,SAASQ,WAAT,GAAuB;IACrBR,WAAW,CAAC,IAAD,CAAX;EACD;;EAED,oBACE,QAAC,QAAD;IAAA,wBACE,QAAC,IAAD;MAAM,SAAS,EAAC,KAAhB;MAAsB,cAAW,iBAAjC;MAAA,uBACE,QAAC,QAAD;QACE,MAAM,MADR;QAEE,iBAAc,MAFhB;QAGE,iBAAc,WAHhB;QAIE,cAAW,uBAJb;QAKE,OAAO,EAAEG,mBALX;QAAA,uBAOE,QAAC,YAAD;UAAc,OAAO,EAAC,uBAAtB;UAA8C,SAAS,EAAEP,OAAO,CAACK,aAAD;QAAhE;UAAA;UAAA;UAAA;QAAA;MAPF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAaE,QAAC,IAAD;MACE,EAAE,EAAC,WADL;MAEE,QAAQ,EAAEF,QAFZ;MAGE,WAAW,MAHb;MAIE,IAAI,EAAEU,OAAO,CAACV,QAAD,CAJf;MAKE,OAAO,EAAES,WALX;MAAA,UAOGZ,OAAO,CAACc,GAAR,CAAY,UAACC,MAAD,EAASJ,KAAT;QAAA,oBACX,QAAC,QAAD;UAEE,QAAQ,EAAEA,KAAK,KAAK,CAFtB;UAGE,QAAQ,EAAEA,KAAK,KAAKN,aAHtB;UAIE,OAAO,EAAE,iBAACG,KAAD;YAAA,OAAWE,mBAAmB,CAACF,KAAD,EAAQG,KAAR,CAA9B;UAAA,CAJX;UAAA,UAMGI;QANH,GACOA,MADP;UAAA;UAAA;UAAA;QAAA,SADW;MAAA,CAAZ;IAPH;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD;;GAjDuBd,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}