[{"F:\\Do An Tot Nghiep\\FE\\src\\index.jsx":"1","F:\\Do An Tot Nghiep\\FE\\src\\serviceWorker.js":"2","F:\\Do An Tot Nghiep\\FE\\src\\app\\App.jsx":"3","F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\Store.js":"4","F:\\Do An Tot Nghiep\\FE\\src\\app\\contexts\\SettingsContext.js":"5","F:\\Do An Tot Nghiep\\FE\\src\\app\\contexts\\JWTAuthContext.js":"6","F:\\Do An Tot Nghiep\\FE\\src\\app\\routes.jsx":"7","F:\\Do An Tot Nghiep\\FE\\src\\fake-db\\index.js":"8","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\index.js":"9","F:\\Do An Tot Nghiep\\FE\\src\\app\\constant.js":"10","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\MatxLayout.jsx":"11","F:\\Do An Tot Nghiep\\FE\\src\\fake-db\\db\\notification.js":"12","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\SimpleCard.jsx":"13","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxVerticalNav\\MatxVerticalNavExpansionPanel.jsx":"14","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxVerticalNav\\MatxVerticalNav.jsx":"15","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\sessions\\SessionRoutes.js":"16","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\MaterialRoutes.js":"17","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\MatxTheme.jsx":"18","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\EchartTheme.jsx":"19","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\DashboardRoutes.js":"20","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\sessions\\NotFound.jsx":"21","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\index.js":"22","F:\\Do An Tot Nghiep\\FE\\src\\fake-db\\mock.js":"23","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Typography.js":"24","F:\\Do An Tot Nghiep\\FE\\src\\app\\auth\\authRoles.js":"25","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\sessions\\JwtLogin.jsx":"26","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\AppProgress.jsx":"27","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\expansion-panel\\AppExpansionPanel.jsx":"28","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\auto-complete\\AppAutoComplete.jsx":"29","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\slider\\AppSlider.jsx":"30","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\AppDialog.jsx":"31","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\AppSnackbar.jsx":"32","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\radio\\AppRadio.jsx":"33","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\menu\\AppMenu.jsx":"34","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\checkbox\\AppCheckbox.jsx":"35","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\switch\\AppSwitch.jsx":"36","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\tables\\AppTable.jsx":"37","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\icons\\AppIcon.jsx":"38","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\forms\\AppForm.jsx":"39","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\buttons\\AppButton.jsx":"40","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\Analytics.jsx":"41","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\Layout1\\Layout1.jsx":"42","F:\\Do An Tot Nghiep\\FE\\src\\app\\hooks\\useSettings.js":"43","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Loadable.jsx":"44","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\expansion-panel\\SimpleExpansionPanel.jsx":"45","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\expansion-panel\\DetailedExpansionPanel.jsx":"46","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\forms\\SimpleForm.jsx":"47","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\forms\\StepperForm.jsx":"48","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\tables\\PaginationTable.jsx":"49","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\switch\\PlacingSwitchLabel.jsx":"50","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\tables\\SimpleTable.jsx":"51","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\switch\\SijmpleSwitch.jsx":"52","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\switch\\LabelledSwitch.jsx":"53","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\switch\\FormGroupSwitch.jsx":"54","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\checkbox\\SimpleCheckbox.jsx":"55","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\checkbox\\LabelledCheckbox.jsx":"56","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\checkbox\\FormGroupCheckbox.jsx":"57","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\checkbox\\PlacingCheckboxLabel.jsx":"58","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\switch\\CustomizedSwitch.jsx":"59","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\UpgradeCard.jsx":"60","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\StatCards2.jsx":"61","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\TopSellingTable.jsx":"62","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\StatCards.jsx":"63","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\RowCards.jsx":"64","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\Doughnut.jsx":"65","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\Layout1\\Layout1Sidenav.jsx":"66","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\Layout1\\Layout1Topbar.jsx":"67","F:\\Do An Tot Nghiep\\FE\\src\\app\\hooks\\useAuth.js":"68","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLoading.jsx":"69","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Sidenav.jsx":"70","F:\\Do An Tot Nghiep\\FE\\src\\app\\utils\\utils.js":"71","F:\\Do An Tot Nghiep\\FE\\src\\app\\navigations.js":"72","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\ShoppingCart.jsx":"73","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Brand.jsx":"74","F:\\Do An Tot Nghiep\\FE\\src\\app\\utils\\constant.js":"75","F:\\Do An Tot Nghiep\\FE\\src\\app\\contexts\\NotificationContext.js":"76","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\themeColors.js":"77","F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\actions\\EcommerceActions.js":"78","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Footer.jsx":"79","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\Campaigns.jsx":"80","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\menu\\SelectedMenu.jsx":"81","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\menu\\MaxHeightMenu.jsx":"82","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\radio\\PlacingRadioLabel.jsx":"83","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\radio\\StandaloneRadio.jsx":"84","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\radio\\SimpleRadio.jsx":"85","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\SimpleSnackbar.jsx":"86","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\StackedSnackbar.jsx":"87","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\menu\\CustomizedMenu.jsx":"88","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\TransitionSnackbar.jsx":"89","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\menu\\SimpleMenu.jsx":"90","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\PositionedSnackbar.jsx":"91","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\DirectionSnackbar.jsx":"92","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\CustomizedSnackbar.jsx":"93","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\LongLengthSnackbar.jsx":"94","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\ConsecutiveSnackbar.jsx":"95","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\SimpleDialog.jsx":"96","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\FullScreenDialog.jsx":"97","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\SimpleAlerts.jsx":"98","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\OptimalSizeDialog.jsx":"99","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\ResponsiveDialog.jsx":"100","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\DialogTransition.jsx":"101","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\FormDialog.jsx":"102","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\CustomizedDialog.jsx":"103","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\slider\\InputSlider.jsx":"104","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\ConfirmationDialog.jsx":"105","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\slider\\RangeSlider.jsx":"106","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\slider\\VerticalSlider.jsx":"107","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\slider\\ContinuousSlider.jsx":"108","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\auto-complete\\BadgeAutocomplete.jsx":"109","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\auto-complete\\AutocompleteCombo.jsx":"110","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\slider\\DiscreteSlider.jsx":"111","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\auto-complete\\AsyncAutocomplete.jsx":"112","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\expansion-panel\\CustomizedExpansionPanel.jsx":"113","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\expansion-panel\\ControlledAccordion.jsx":"114","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\SidenavTheme\\SidenavTheme.jsx":"115","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxSuspense.jsx":"116","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxSearchBox.jsx":"117","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxProgressBar.jsx":"118","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxSidenav\\MatxSidenav.jsx":"119","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxSidenav\\MatxSidenavContent.jsx":"120","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxSidenav\\MatxSidenavContainer.jsx":"121","F:\\Do An Tot Nghiep\\FE\\src\\fake-db\\db\\ecommerce.js":"122","F:\\Do An Tot Nghiep\\FE\\src\\fake-db\\db\\auth.js":"123","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxMenu.jsx":"124","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\ConfirmationDialog.jsx":"125","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\ChatAvatar.jsx":"126","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\ChatHead.jsx":"127","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Chatbox.jsx":"128","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Breadcrumb.jsx":"129","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\icons\\GoogleIcon.jsx":"130","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\icons\\FacebookIcon.jsx":"131","F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\reducers\\RootReducer.js":"132","F:\\Do An Tot Nghiep\\FE\\src\\axios.js":"133","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Approve\\ApproveRoute.js":"134","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\User\\UserRoute.js":"135","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListRecruitApproved\\ListRecruitApprovedRoute.js":"136","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\CandidateProfileRoute.js":"137","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Recruit\\RecruitRoute.js":"138","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Language\\LanguageRoute.js":"139","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Certificate\\CertificateRoute.js":"140","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Position\\PositionRoute.js":"141","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\settings.js":"142","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Department\\DepartmentRoute.js":"143","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\charts\\ChartsRoute.jsx":"144","F:\\Do An Tot Nghiep\\FE\\src\\app\\auth\\AuthGuard.jsx":"145","F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\reducers\\EcommerceReducer.js":"146","F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\reducers\\NavigationReducer.js":"147","F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\reducers\\NotificationReducer.js":"148","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\initThemes.js":"149","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\Layout1\\Layout1Settings.js":"150","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Approve\\Approve.jsx":"151","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\User\\User.jsx":"152","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\CandidateProfile.jsx":"153","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Recruit\\Recruit.jsx":"154","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Language\\Language.jsx":"155","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListRecruitApproved\\ListRecruitApproved.jsx":"156","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Certificate\\Certificate.jsx":"157","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Department\\Department.jsx":"158","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Position\\Position.jsx":"159","F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\actions\\NotificationActions.js":"160","F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\actions\\NavigationAction.js":"161","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\charts\\echarts\\AppEchart.jsx":"162","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\themeOptions.js":"163","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Approve\\ApproveService.js":"164","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\User\\UserService.js":"165","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\CandidateProfileService.js":"166","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListRecruitApproved\\ListRecruitApprovedService.js":"167","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Recruit\\RecruitService.js":"168","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Language\\LanguageService.js":"169","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Position\\PositionService.js":"170","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Approve\\RecruitView.jsx":"171","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Recruit\\RecruitView.jsx":"172","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\User\\UserDialog.jsx":"173","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\CandidateProfileDialog.jsx":"174","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListRecruitApproved\\ListRecruitApprovedView.jsx":"175","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Language\\LanguageDialog.jsx":"176","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Department\\DepartmentService.js":"177","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Department\\DepartmentDialog.jsx":"178","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Certificate\\CertificateDialog.jsx":"179","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Recruit\\RecruitDialog.jsx":"180","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Certificate\\CertificateService.js":"181","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Position\\PositionDialog.jsx":"182","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\charts\\echarts\\AreaChart.jsx":"183","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\charts\\echarts\\ComparisonChart.jsx":"184","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\charts\\echarts\\Doughnut.jsx":"185","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\charts\\echarts\\LineChart.jsx":"186","F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\components.js":"187","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Approve\\RequestAdditional.jsx":"188","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveCadidate\\ApproveCadidateRoute.js":"189","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveCadidate\\ApproveCandidate.jsx":"190","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveCadidate\\ApproveCandidateService.js":"191","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\CandidateProfileView.jsx":"192","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveCadidate\\CandidateProfileView.jsx":"193","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\RefuseDialog.jsx":"194","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveCadidate\\RefuseDialog.jsx":"195","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\MakeAppointment.jsx":"196","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveEmployee\\ApproveEmployeeRoute.js":"197","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\EmployeeRoute.js":"198","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Contract\\ContractRoute.js":"199","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\TimeKeeping\\TimeKeepingRoute.js":"200","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveEmployee\\ApproveEmployee.jsx":"201","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\Employee.jsx":"202","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\TimeKeeping\\TimeKeeping.jsx":"203","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Contract\\Contract.jsx":"204","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\TimeKeeping\\TimeKeepingService.js":"205","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\EmployeeService.js":"206","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveEmployee\\ApproveEmployeeService.js":"207","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Contract\\ContractService.js":"208","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveEmployee\\EmployeeView.jsx":"209","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\CandidateTable.jsx":"210","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\EmployeeDialog.jsx":"211","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\RequestDialog.jsx":"212","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\TimeKeeping\\TimeKeepingTable.jsx":"213","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\EmployeeView.jsx":"214","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Contract\\ContractDialog.jsx":"215","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveEmployee\\ContractDialog.jsx":"216","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveEmployee\\RequestDialog.jsx":"217","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\RelatedInformation.jsx":"218","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\EmployeeInformation.jsx":"219","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\WorkingPosition.jsx":"220","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Contract\\EmployeeTable.jsx":"221","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\TimeKeeping\\TimeKeepingDialog.jsx":"222","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\PaymentSalary\\PaymentSalaryRoute.js":"223","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\PaymentSalary\\PaymentSalary.jsx":"224","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\PaymentSalary\\PaymentSalaryService.js":"225","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\PaymentSalary\\PaymentSalaryTable.jsx":"226","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Employee\\EmployeeRoute.js":"227","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Employee\\Employee.jsx":"228","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Employee\\EmployeeService.js":"229","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Employee\\EmployeeDialog.jsx":"230","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CommendationAndDiscipline\\CommendationAndDisciplineRoute.js":"231","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CommendationAndDiscipline\\CommendationAndDiscipline.jsx":"232","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CommendationAndDiscipline\\CommendationAndDisciplineService.js":"233","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CommendationAndDiscipline\\CommendationAndDisciplineDialog.jsx":"234","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListCommendationAndDiscipline\\ListCommendationAndDisciplineRoute.js":"235","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\UpdateHappeningRoute.js":"236","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\UpdateHappening.jsx":"237","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListCommendationAndDiscipline\\ListCommendationAndDiscipline.jsx":"238","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListCommendationAndDiscipline\\ListCommendationAndDisciplineService.js":"239","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\UpdateHappeningService.js":"240","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\UpdateHappeningDialog.jsx":"241","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListCommendationAndDiscipline\\CommendationAndDisciplineDialog.jsx":"242","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\UpdateSalary.jsx":"243","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\InformationDialog.jsx":"244","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\PromoteDialog.jsx":"245"},{"size":897,"mtime":1673792346178,"results":"246","hashOfConfig":"247"},{"size":5064,"mtime":1673792346180,"results":"248","hashOfConfig":"247"},{"size":1089,"mtime":1676258389932,"results":"249","hashOfConfig":"247"},{"size":549,"mtime":1673792345980,"results":"250","hashOfConfig":"247"},{"size":912,"mtime":1673792345975,"results":"251","hashOfConfig":"247"},{"size":4914,"mtime":1676220547426,"results":"252","hashOfConfig":"247"},{"size":2870,"mtime":1676220547429,"results":"253","hashOfConfig":"247"},{"size":137,"mtime":1673792346176,"results":"254","hashOfConfig":"247"},{"size":1682,"mtime":1673792345971,"results":"255","hashOfConfig":"247"},{"size":3454,"mtime":1676220581189,"results":"256","hashOfConfig":"247"},{"size":390,"mtime":1673792345947,"results":"257","hashOfConfig":"247"},{"size":1954,"mtime":1673792346175,"results":"258","hashOfConfig":"247"},{"size":648,"mtime":1673792345969,"results":"259","hashOfConfig":"247"},{"size":4377,"mtime":1673792345964,"results":"260","hashOfConfig":"247"},{"size":5379,"mtime":1675442216377,"results":"261","hashOfConfig":"247"},{"size":377,"mtime":1673792346126,"results":"262","hashOfConfig":"247"},{"size":2196,"mtime":1673792346043,"results":"263","hashOfConfig":"247"},{"size":415,"mtime":1673792345955,"results":"264","hashOfConfig":"247"},{"size":1031,"mtime":1673792345955,"results":"265","hashOfConfig":"247"},{"size":347,"mtime":1673792346033,"results":"266","hashOfConfig":"247"},{"size":1045,"mtime":1673792346125,"results":"267","hashOfConfig":"247"},{"size":118,"mtime":1673792345947,"results":"268","hashOfConfig":"247"},{"size":145,"mtime":1673792346177,"results":"269","hashOfConfig":"247"},{"size":4565,"mtime":1673792345969,"results":"270","hashOfConfig":"247"},{"size":437,"mtime":1676255789615,"results":"271","hashOfConfig":"247"},{"size":5282,"mtime":1676220986004,"results":"272","hashOfConfig":"247"},{"size":3087,"mtime":1673792346041,"results":"273","hashOfConfig":"247"},{"size":1452,"mtime":1673792346065,"results":"274","hashOfConfig":"247"},{"size":1191,"mtime":1673792346045,"results":"275","hashOfConfig":"247"},{"size":1437,"mtime":1673792346081,"results":"276","hashOfConfig":"247"},{"size":2070,"mtime":1673792346054,"results":"277","hashOfConfig":"247"},{"size":1996,"mtime":1673792346088,"results":"278","hashOfConfig":"247"},{"size":1162,"mtime":1673792346078,"results":"279","hashOfConfig":"247"},{"size":1258,"mtime":1673792346073,"results":"280","hashOfConfig":"247"},{"size":1368,"mtime":1673792346049,"results":"281","hashOfConfig":"247"},{"size":1493,"mtime":1673792346096,"results":"282","hashOfConfig":"247"},{"size":897,"mtime":1673792346101,"results":"283","hashOfConfig":"247"},{"size":18185,"mtime":1675442216531,"results":"284","hashOfConfig":"247"},{"size":967,"mtime":1673792346070,"results":"285","hashOfConfig":"247"},{"size":5420,"mtime":1673792346048,"results":"286","hashOfConfig":"247"},{"size":1995,"mtime":1673792346033,"results":"287","hashOfConfig":"247"},{"size":4341,"mtime":1673792345944,"results":"288","hashOfConfig":"247"},{"size":183,"mtime":1673792345977,"results":"289","hashOfConfig":"247"},{"size":259,"mtime":1673792345939,"results":"290","hashOfConfig":"247"},{"size":2080,"mtime":1673792346068,"results":"291","hashOfConfig":"247"},{"size":2533,"mtime":1673792346067,"results":"292","hashOfConfig":"247"},{"size":5958,"mtime":1673792346070,"results":"293","hashOfConfig":"247"},{"size":4307,"mtime":1673792346071,"results":"294","hashOfConfig":"247"},{"size":3944,"mtime":1673792346101,"results":"295","hashOfConfig":"247"},{"size":1788,"mtime":1673792346099,"results":"296","hashOfConfig":"247"},{"size":2623,"mtime":1673792346102,"results":"297","hashOfConfig":"247"},{"size":1268,"mtime":1673792346100,"results":"298","hashOfConfig":"247"},{"size":1247,"mtime":1673792346098,"results":"299","hashOfConfig":"247"},{"size":1419,"mtime":1673792346098,"results":"300","hashOfConfig":"247"},{"size":1550,"mtime":1673792346052,"results":"301","hashOfConfig":"247"},{"size":2784,"mtime":1673792346051,"results":"302","hashOfConfig":"247"},{"size":2435,"mtime":1673792346050,"results":"303","hashOfConfig":"247"},{"size":1455,"mtime":1673792346052,"results":"304","hashOfConfig":"247"},{"size":6616,"mtime":1673792346096,"results":"305","hashOfConfig":"247"},{"size":1326,"mtime":1673792346040,"results":"306","hashOfConfig":"247"},{"size":2590,"mtime":1673792346038,"results":"307","hashOfConfig":"247"},{"size":4590,"mtime":1673792346039,"results":"308","hashOfConfig":"247"},{"size":1974,"mtime":1673792346037,"results":"309","hashOfConfig":"247"},{"size":2760,"mtime":1673792346036,"results":"310","hashOfConfig":"247"},{"size":3337,"mtime":1673792346035,"results":"311","hashOfConfig":"247"},{"size":2728,"mtime":1673792345945,"results":"312","hashOfConfig":"247"},{"size":4175,"mtime":1673792345946,"results":"313","hashOfConfig":"247"},{"size":166,"mtime":1673792345976,"results":"314","hashOfConfig":"247"},{"size":724,"mtime":1673792345948,"results":"315","hashOfConfig":"247"},{"size":1928,"mtime":1673792345968,"results":"316","hashOfConfig":"247"},{"size":4642,"mtime":1673792345988,"results":"317","hashOfConfig":"247"},{"size":4368,"mtime":1676227059616,"results":"318","hashOfConfig":"247"},{"size":5926,"mtime":1673792345967,"results":"319","hashOfConfig":"247"},{"size":1013,"mtime":1673792345933,"results":"320","hashOfConfig":"247"},{"size":176,"mtime":1673792345987,"results":"321","hashOfConfig":"247"},{"size":2963,"mtime":1673792345974,"results":"322","hashOfConfig":"247"},{"size":7567,"mtime":1673792345961,"results":"323","hashOfConfig":"247"},{"size":2355,"mtime":1673792345981,"results":"324","hashOfConfig":"247"},{"size":1626,"mtime":1673792345938,"results":"325","hashOfConfig":"247"},{"size":1272,"mtime":1673792346035,"results":"326","hashOfConfig":"247"},{"size":1824,"mtime":1673792346076,"results":"327","hashOfConfig":"247"},{"size":1302,"mtime":1673792346075,"results":"328","hashOfConfig":"247"},{"size":1247,"mtime":1673792346079,"results":"329","hashOfConfig":"247"},{"size":1901,"mtime":1673792346080,"results":"330","hashOfConfig":"247"},{"size":1540,"mtime":1673792346079,"results":"331","hashOfConfig":"247"},{"size":1291,"mtime":1673792346093,"results":"332","hashOfConfig":"247"},{"size":840,"mtime":1673792346094,"results":"333","hashOfConfig":"247"},{"size":2204,"mtime":1673792346075,"results":"334","hashOfConfig":"247"},{"size":1103,"mtime":1673792346095,"results":"335","hashOfConfig":"247"},{"size":892,"mtime":1673792346077,"results":"336","hashOfConfig":"247"},{"size":1471,"mtime":1673792346092,"results":"337","hashOfConfig":"247"},{"size":1369,"mtime":1673792346090,"results":"338","hashOfConfig":"247"},{"size":1949,"mtime":1673792346089,"results":"339","hashOfConfig":"247"},{"size":1070,"mtime":1673792346091,"results":"340","hashOfConfig":"247"},{"size":2017,"mtime":1673792346088,"results":"341","hashOfConfig":"247"},{"size":2670,"mtime":1673792346064,"results":"342","hashOfConfig":"247"},{"size":2101,"mtime":1673792346058,"results":"343","hashOfConfig":"247"},{"size":1593,"mtime":1673792346062,"results":"344","hashOfConfig":"247"},{"size":3336,"mtime":1673792346059,"results":"345","hashOfConfig":"247"},{"size":1777,"mtime":1673792346061,"results":"346","hashOfConfig":"247"},{"size":1835,"mtime":1673792346056,"results":"347","hashOfConfig":"247"},{"size":1697,"mtime":1673792346057,"results":"348","hashOfConfig":"247"},{"size":3011,"mtime":1673792346055,"results":"349","hashOfConfig":"247"},{"size":1517,"mtime":1673792346084,"results":"350","hashOfConfig":"247"},{"size":4101,"mtime":1673792346055,"results":"351","hashOfConfig":"247"},{"size":671,"mtime":1673792346085,"results":"352","hashOfConfig":"247"},{"size":1499,"mtime":1673792346085,"results":"353","hashOfConfig":"247"},{"size":829,"mtime":1673792346082,"results":"354","hashOfConfig":"247"},{"size":6734,"mtime":1673792346047,"results":"355","hashOfConfig":"247"},{"size":3293,"mtime":1673792346046,"results":"356","hashOfConfig":"247"},{"size":2046,"mtime":1673792346083,"results":"357","hashOfConfig":"247"},{"size":1972,"mtime":1673792346045,"results":"358","hashOfConfig":"247"},{"size":3438,"mtime":1673792346066,"results":"359","hashOfConfig":"247"},{"size":3640,"mtime":1673792346066,"results":"360","hashOfConfig":"247"},{"size":426,"mtime":1673792345957,"results":"361","hashOfConfig":"247"},{"size":232,"mtime":1673792345954,"results":"362","hashOfConfig":"247"},{"size":1683,"mtime":1673792345951,"results":"363","hashOfConfig":"247"},{"size":1063,"mtime":1673792345950,"results":"364","hashOfConfig":"247"},{"size":1047,"mtime":1673792345952,"results":"365","hashOfConfig":"247"},{"size":282,"mtime":1673792345953,"results":"366","hashOfConfig":"247"},{"size":296,"mtime":1673792345952,"results":"367","hashOfConfig":"247"},{"size":15443,"mtime":1673792346174,"results":"368","hashOfConfig":"247"},{"size":3167,"mtime":1673792346173,"results":"369","hashOfConfig":"247"},{"size":1683,"mtime":1673792345949,"results":"370","hashOfConfig":"247"},{"size":1242,"mtime":1673792345937,"results":"371","hashOfConfig":"247"},{"size":726,"mtime":1673792345935,"results":"372","hashOfConfig":"247"},{"size":1275,"mtime":1673792345936,"results":"373","hashOfConfig":"247"},{"size":9853,"mtime":1673792345936,"results":"374","hashOfConfig":"247"},{"size":1961,"mtime":1673792345934,"results":"375","hashOfConfig":"247"},{"size":562,"mtime":1673792345971,"results":"376","hashOfConfig":"247"},{"size":487,"mtime":1673792345970,"results":"377","hashOfConfig":"247"},{"size":389,"mtime":1673792345985,"results":"378","hashOfConfig":"247"},{"size":274,"mtime":1673792346172,"results":"379","hashOfConfig":"247"},{"size":340,"mtime":1673792345990,"results":"380","hashOfConfig":"247"},{"size":306,"mtime":1673792346023,"results":"381","hashOfConfig":"247"},{"size":392,"mtime":1673792346009,"results":"382","hashOfConfig":"247"},{"size":372,"mtime":1675442216400,"results":"383","hashOfConfig":"247"},{"size":318,"mtime":1675442216483,"results":"384","hashOfConfig":"247"},{"size":326,"mtime":1675442216480,"results":"385","hashOfConfig":"247"},{"size":351,"mtime":1675442216402,"results":"386","hashOfConfig":"247"},{"size":326,"mtime":1675442216482,"results":"387","hashOfConfig":"247"},{"size":792,"mtime":1673792345948,"results":"388","hashOfConfig":"247"},{"size":345,"mtime":1675442216480,"results":"389","hashOfConfig":"247"},{"size":332,"mtime":1673792346024,"results":"390","hashOfConfig":"247"},{"size":1266,"mtime":1673792345932,"results":"391","hashOfConfig":"247"},{"size":1495,"mtime":1673792345984,"results":"392","hashOfConfig":"247"},{"size":425,"mtime":1673792345984,"results":"393","hashOfConfig":"247"},{"size":674,"mtime":1673792345985,"results":"394","hashOfConfig":"247"},{"size":412,"mtime":1673792345959,"results":"395","hashOfConfig":"247"},{"size":451,"mtime":1673792345944,"results":"396","hashOfConfig":"247"},{"size":6488,"mtime":1676141644186,"results":"397","hashOfConfig":"247"},{"size":5759,"mtime":1676141644354,"results":"398","hashOfConfig":"247"},{"size":7720,"mtime":1675790752181,"results":"399","hashOfConfig":"247"},{"size":9107,"mtime":1676141644331,"results":"400","hashOfConfig":"247"},{"size":6668,"mtime":1675617117145,"results":"401","hashOfConfig":"247"},{"size":6424,"mtime":1676141644256,"results":"402","hashOfConfig":"247"},{"size":6938,"mtime":1675617117096,"results":"403","hashOfConfig":"247"},{"size":6695,"mtime":1675617117126,"results":"404","hashOfConfig":"247"},{"size":6656,"mtime":1675617117147,"results":"405","hashOfConfig":"247"},{"size":1154,"mtime":1673792345982,"results":"406","hashOfConfig":"247"},{"size":805,"mtime":1673792345982,"results":"407","hashOfConfig":"247"},{"size":1835,"mtime":1673792346026,"results":"408","hashOfConfig":"247"},{"size":296,"mtime":1673792345962,"results":"409","hashOfConfig":"247"},{"size":545,"mtime":1673792345992,"results":"410","hashOfConfig":"247"},{"size":568,"mtime":1673792346023,"results":"411","hashOfConfig":"247"},{"size":619,"mtime":1675790752182,"results":"412","hashOfConfig":"247"},{"size":455,"mtime":1673792346010,"results":"413","hashOfConfig":"247"},{"size":455,"mtime":1673792346019,"results":"414","hashOfConfig":"247"},{"size":460,"mtime":1673792346007,"results":"415","hashOfConfig":"247"},{"size":460,"mtime":1673792346016,"results":"416","hashOfConfig":"247"},{"size":8768,"mtime":1676141644190,"results":"417","hashOfConfig":"247"},{"size":4911,"mtime":1675617117191,"results":"418","hashOfConfig":"247"},{"size":10938,"mtime":1676141644382,"results":"419","hashOfConfig":"247"},{"size":12811,"mtime":1675442216398,"results":"420","hashOfConfig":"247"},{"size":4611,"mtime":1673792346011,"results":"421","hashOfConfig":"247"},{"size":5229,"mtime":1673792346005,"results":"422","hashOfConfig":"247"},{"size":470,"mtime":1673792346004,"results":"423","hashOfConfig":"247"},{"size":5250,"mtime":1673792346003,"results":"424","hashOfConfig":"247"},{"size":7958,"mtime":1673792345999,"results":"425","hashOfConfig":"247"},{"size":7958,"mtime":1676141679194,"results":"426","hashOfConfig":"247"},{"size":475,"mtime":1673792346001,"results":"427","hashOfConfig":"247"},{"size":5109,"mtime":1673792346015,"results":"428","hashOfConfig":"247"},{"size":654,"mtime":1673792346027,"results":"429","hashOfConfig":"247"},{"size":1526,"mtime":1673792346028,"results":"430","hashOfConfig":"247"},{"size":1920,"mtime":1673792346030,"results":"431","hashOfConfig":"247"},{"size":1655,"mtime":1673792346031,"results":"432","hashOfConfig":"247"},{"size":2476,"mtime":1673792345958,"results":"433","hashOfConfig":"247"},{"size":1958,"mtime":1675311412889,"results":"434","hashOfConfig":"247"},{"size":402,"mtime":1675442216393,"results":"435","hashOfConfig":"247"},{"size":5729,"mtime":1675617117077,"results":"436","hashOfConfig":"247"},{"size":473,"mtime":1676141644192,"results":"437","hashOfConfig":"247"},{"size":9003,"mtime":1675442216401,"results":"438","hashOfConfig":"247"},{"size":9199,"mtime":1676225559936,"results":"439","hashOfConfig":"247"},{"size":2482,"mtime":1674233254215,"results":"440","hashOfConfig":"247"},{"size":2484,"mtime":1674233254212,"results":"441","hashOfConfig":"247"},{"size":4947,"mtime":1674233254214,"results":"442","hashOfConfig":"247"},{"size":381,"mtime":1675311412893,"results":"443","hashOfConfig":"247"},{"size":352,"mtime":1675442216477,"results":"444","hashOfConfig":"247"},{"size":326,"mtime":1675442216403,"results":"445","hashOfConfig":"247"},{"size":352,"mtime":1675617117195,"results":"446","hashOfConfig":"247"},{"size":5712,"mtime":1675617117078,"results":"447","hashOfConfig":"247"},{"size":10331,"mtime":1676220547463,"results":"448","hashOfConfig":"247"},{"size":5236,"mtime":1675617117192,"results":"449","hashOfConfig":"247"},{"size":5964,"mtime":1676227002034,"results":"450","hashOfConfig":"247"},{"size":646,"mtime":1676141644335,"results":"451","hashOfConfig":"247"},{"size":1085,"mtime":1676141644215,"results":"452","hashOfConfig":"247"},{"size":286,"mtime":1675311412895,"results":"453","hashOfConfig":"247"},{"size":489,"mtime":1675617117114,"results":"454","hashOfConfig":"247"},{"size":13783,"mtime":1676141644196,"results":"455","hashOfConfig":"247"},{"size":5681,"mtime":1675311413068,"results":"456","hashOfConfig":"247"},{"size":12370,"mtime":1676220547464,"results":"457","hashOfConfig":"247"},{"size":2106,"mtime":1675311413175,"results":"458","hashOfConfig":"247"},{"size":11032,"mtime":1676141644340,"results":"459","hashOfConfig":"247"},{"size":12599,"mtime":1676141644216,"results":"460","hashOfConfig":"247"},{"size":27688,"mtime":1676220547458,"results":"461","hashOfConfig":"247"},{"size":26382,"mtime":1675311412929,"results":"462","hashOfConfig":"247"},{"size":2325,"mtime":1675311412941,"results":"463","hashOfConfig":"247"},{"size":9312,"mtime":1675617117124,"results":"464","hashOfConfig":"247"},{"size":8289,"mtime":1675442216477,"results":"465","hashOfConfig":"247"},{"size":3319,"mtime":1675311413185,"results":"466","hashOfConfig":"247"},{"size":6166,"mtime":1675617117120,"results":"467","hashOfConfig":"247"},{"size":8312,"mtime":1676141644335,"results":"468","hashOfConfig":"247"},{"size":366,"mtime":1676141644262,"results":"469","hashOfConfig":"247"},{"size":5230,"mtime":1676141644261,"results":"470","hashOfConfig":"247"},{"size":370,"mtime":1676141644263,"results":"471","hashOfConfig":"247"},{"size":9923,"mtime":1676141644315,"results":"472","hashOfConfig":"247"},{"size":326,"mtime":1676141644253,"results":"473","hashOfConfig":"247"},{"size":6129,"mtime":1676141644251,"results":"474","hashOfConfig":"247"},{"size":189,"mtime":1676141644254,"results":"475","hashOfConfig":"247"},{"size":1365,"mtime":1676141644252,"results":"476","hashOfConfig":"247"},{"size":460,"mtime":1676141644200,"results":"477","hashOfConfig":"247"},{"size":8194,"mtime":1676226237200,"results":"478","hashOfConfig":"247"},{"size":547,"mtime":1676141644202,"results":"479","hashOfConfig":"247"},{"size":18838,"mtime":1676227043214,"results":"480","hashOfConfig":"247"},{"size":484,"mtime":1676257183367,"results":"481","hashOfConfig":"247"},{"size":376,"mtime":1676220547556,"results":"482","hashOfConfig":"247"},{"size":7554,"mtime":1676220547554,"results":"483","hashOfConfig":"247"},{"size":6405,"mtime":1676226196714,"results":"484","hashOfConfig":"247"},{"size":339,"mtime":1676220547499,"results":"485","hashOfConfig":"247"},{"size":780,"mtime":1676220547558,"results":"486","hashOfConfig":"247"},{"size":3019,"mtime":1676220547556,"results":"487","hashOfConfig":"247"},{"size":18271,"mtime":1676225141493,"results":"488","hashOfConfig":"247"},{"size":110,"mtime":1676220547561,"results":"489","hashOfConfig":"247"},{"size":23442,"mtime":1676220547528,"results":"490","hashOfConfig":"247"},{"size":7293,"mtime":1676220547553,"results":"491","hashOfConfig":"247"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},"1pw2rkv",{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"494"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"494"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"711","messages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"723","messages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"725","messages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"727","messages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"737","messages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"739","messages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"743","messages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"749","messages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"751","messages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"753","messages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"755","messages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"769","messages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"773","messages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"789","messages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"791","messages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"795","messages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"494"},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"800","messages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804","usedDeprecatedRules":"494"},{"filePath":"805","messages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"807","messages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809","usedDeprecatedRules":"494"},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"812","messages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"814","usedDeprecatedRules":"494"},{"filePath":"815","messages":"816","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"817","messages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"819","messages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"821","messages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"823","messages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"825","messages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"827","messages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"829","usedDeprecatedRules":"494"},{"filePath":"830","messages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"832","messages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"834","messages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"836","messages":"837","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"838","messages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"494"},{"filePath":"843","messages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"845","messages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"847","usedDeprecatedRules":"494"},{"filePath":"848","messages":"849","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"850","usedDeprecatedRules":"494"},{"filePath":"851","messages":"852","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"853","messages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"494"},{"filePath":"856","messages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"860","usedDeprecatedRules":"494"},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863","usedDeprecatedRules":"494"},{"filePath":"864","messages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"866","messages":"867","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"868","messages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"494"},{"filePath":"871","messages":"872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"873","messages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"875","messages":"876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"877","messages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"879","messages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"881","messages":"882","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"883","usedDeprecatedRules":"494"},{"filePath":"884","messages":"885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"886","messages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"888","usedDeprecatedRules":"494"},{"filePath":"889","messages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"891","messages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893","usedDeprecatedRules":"494"},{"filePath":"894","messages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"896","messages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"898","usedDeprecatedRules":"494"},{"filePath":"899","messages":"900","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"901","usedDeprecatedRules":"494"},{"filePath":"902","messages":"903","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"904","usedDeprecatedRules":"494"},{"filePath":"905","messages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"907","messages":"908","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"909","messages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"911","messages":"912","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"913","messages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"494"},{"filePath":"916","messages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"918","messages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"920","usedDeprecatedRules":"494"},{"filePath":"921","messages":"922","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"923","messages":"924","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"925","messages":"926","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"927","messages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"929","messages":"930","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"931","messages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"494"},{"filePath":"934","messages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"936","messages":"937","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"938","messages":"939","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"940","usedDeprecatedRules":"494"},{"filePath":"941","messages":"942","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"943","usedDeprecatedRules":"494"},{"filePath":"944","messages":"945","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"946","usedDeprecatedRules":"494"},{"filePath":"947","messages":"948","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"949","messages":"950","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"951","usedDeprecatedRules":"952"},{"filePath":"953","messages":"954","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"494"},{"filePath":"956","messages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"958","messages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960","usedDeprecatedRules":"494"},{"filePath":"961","messages":"962","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"963","usedDeprecatedRules":"494"},{"filePath":"964","messages":"965","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"966","usedDeprecatedRules":"494"},{"filePath":"967","messages":"968","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"969","usedDeprecatedRules":"494"},{"filePath":"970","messages":"971","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"972","messages":"973","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"974","usedDeprecatedRules":"494"},{"filePath":"975","messages":"976","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"977","messages":"978","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"979","usedDeprecatedRules":"494"},{"filePath":"980","messages":"981","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"982","messages":"983","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"984","usedDeprecatedRules":"494"},{"filePath":"985","messages":"986","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"987","messages":"988","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"989","usedDeprecatedRules":"494"},{"filePath":"990","messages":"991","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"992","messages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"994","messages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"996","messages":"997","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"998","messages":"999","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1000","messages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1002","messages":"1003","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1004","messages":"1005","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1006","messages":"1007","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1008","messages":"1009","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1010","messages":"1011","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1012","messages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1014","messages":"1015","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1016","messages":"1017","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1018","messages":"1019","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Do An Tot Nghiep\\FE\\src\\index.jsx",[],["1020","1021"],"F:\\Do An Tot Nghiep\\FE\\src\\serviceWorker.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\App.jsx",["1022"],"F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\Store.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\contexts\\SettingsContext.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\contexts\\JWTAuthContext.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\routes.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\fake-db\\index.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\index.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\constant.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\MatxLayout.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\fake-db\\db\\notification.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\SimpleCard.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxVerticalNav\\MatxVerticalNavExpansionPanel.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxVerticalNav\\MatxVerticalNav.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\sessions\\SessionRoutes.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\MaterialRoutes.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\MatxTheme.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\EchartTheme.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\DashboardRoutes.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\sessions\\NotFound.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\index.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\fake-db\\mock.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Typography.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\auth\\authRoles.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\sessions\\JwtLogin.jsx",["1023","1024","1025","1026","1027","1028"],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\AppProgress.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\expansion-panel\\AppExpansionPanel.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\auto-complete\\AppAutoComplete.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\slider\\AppSlider.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\AppDialog.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\AppSnackbar.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\radio\\AppRadio.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\menu\\AppMenu.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\checkbox\\AppCheckbox.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\switch\\AppSwitch.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\tables\\AppTable.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\icons\\AppIcon.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\forms\\AppForm.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\buttons\\AppButton.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\Analytics.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\Layout1\\Layout1.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\hooks\\useSettings.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Loadable.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\expansion-panel\\SimpleExpansionPanel.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\expansion-panel\\DetailedExpansionPanel.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\forms\\SimpleForm.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\forms\\StepperForm.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\tables\\PaginationTable.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\switch\\PlacingSwitchLabel.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\tables\\SimpleTable.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\switch\\SijmpleSwitch.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\switch\\LabelledSwitch.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\switch\\FormGroupSwitch.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\checkbox\\SimpleCheckbox.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\checkbox\\LabelledCheckbox.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\checkbox\\FormGroupCheckbox.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\checkbox\\PlacingCheckboxLabel.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\switch\\CustomizedSwitch.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\UpgradeCard.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\StatCards2.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\TopSellingTable.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\StatCards.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\RowCards.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\Doughnut.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\Layout1\\Layout1Sidenav.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\Layout1\\Layout1Topbar.jsx",["1029","1030","1031","1032","1033"],"import { Avatar, Hidden, Icon, IconButton, MenuItem, useMediaQuery } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport { MatxMenu, MatxSearchBox } from 'app/components';\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors';\r\nimport { NotificationProvider } from 'app/contexts/NotificationContext';\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { topBarHeight } from 'app/utils/constant';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Span } from '../../../components/Typography';\r\nimport ShoppingCart from '../../ShoppingCart';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\n\r\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\r\n  color: theme.palette.text.primary,\r\n}));\r\n\r\nconst TopbarRoot = styled('div')(({ theme }) => ({\r\n  top: 0,\r\n  zIndex: 96,\r\n  transition: 'all 0.3s ease',\r\n  boxShadow: themeShadows[8],\r\n  height: topBarHeight,\r\n}));\r\n\r\nconst TopbarContainer = styled(Box)(({ theme }) => ({\r\n  padding: '8px',\r\n  paddingLeft: 18,\r\n  paddingRight: 20,\r\n  height: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  background: theme.palette.primary.main,\r\n  [theme.breakpoints.down('sm')]: {\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n  },\r\n  [theme.breakpoints.down('xs')]: {\r\n    paddingLeft: 14,\r\n    paddingRight: 16,\r\n  },\r\n}));\r\n\r\nconst UserMenu = styled(Box)(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  cursor: 'pointer',\r\n  borderRadius: 24,\r\n  padding: 4,\r\n  '& span': { margin: '0 8px' },\r\n}));\r\n\r\nconst StyledItem = styled(MenuItem)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  minWidth: 185,\r\n  '& a': {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textDecoration: 'none',\r\n  },\r\n  '& span': { marginRight: '10px', color: theme.palette.text.primary },\r\n}));\r\n\r\nconst IconBox = styled('div')(({ theme }) => ({\r\n  display: 'inherit',\r\n  [theme.breakpoints.down('md')]: { display: 'none !important' },\r\n}));\r\n\r\nconst Layout1Topbar = () => {\r\n  const theme = useTheme();\r\n  const { settings, updateSettings } = useSettings();\r\n  const { logout, user } = useAuth();\r\n  const isMdScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    updateSettings({\r\n      layout1Settings: { leftSidebar: { ...sidebarSettings } },\r\n    });\r\n  };\r\n\r\n  const handleSidebarToggle = () => {\r\n    let { layout1Settings } = settings;\r\n    let mode;\r\n    if (isMdScreen) {\r\n      mode = layout1Settings.leftSidebar.mode === 'close' ? 'mobile' : 'close';\r\n    } else {\r\n      mode = layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full';\r\n    }\r\n    updateSidebarMode({ mode });\r\n  };\r\n\r\n  return (\r\n    <TopbarRoot>\r\n      <TopbarContainer>\r\n        <Box display=\"flex\">\r\n          <StyledIconButton onClick={handleSidebarToggle}>\r\n            <Icon>menu</Icon>\r\n          </StyledIconButton>\r\n        </Box>\r\n\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <MatxMenu\r\n            menuButton={\r\n              <UserMenu>\r\n                <Hidden xsDown>\r\n                  <Span>\r\n                    Xin chào <strong>{user.name || user.fullName}</strong>\r\n                  </Span>\r\n                  <AccountCircleIcon />\r\n                </Hidden>\r\n              </UserMenu>\r\n            }\r\n          >\r\n            <StyledItem>\r\n              <Link to=\"/\">\r\n                <Icon> home </Icon>\r\n                <Span> Trang chủ </Span>\r\n              </Link>\r\n            </StyledItem>\r\n\r\n            <StyledItem>\r\n              <Link to=\"/page-layouts/user-profile\">\r\n                <Icon> person </Icon>\r\n                <Span> Thông tin cá nhân </Span>\r\n              </Link>\r\n            </StyledItem>\r\n\r\n            <StyledItem onClick={logout}>\r\n              <Icon> power_settings_new </Icon>\r\n              <Span> Đăng xuất </Span>\r\n            </StyledItem>\r\n          </MatxMenu>\r\n        </Box>\r\n      </TopbarContainer>\r\n    </TopbarRoot>\r\n  );\r\n};\r\n\r\nexport default React.memo(Layout1Topbar);\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\hooks\\useAuth.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLoading.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Sidenav.jsx",["1034","1035","1036"],"import { styled } from '@mui/system';\r\nimport { MatxVerticalNav } from 'app/components';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { navigations } from 'app/navigations';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Fragment } from 'react';\r\nimport Scrollbar from 'react-perfect-scrollbar';\r\n\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n  paddingLeft: '1rem',\r\n  paddingRight: '1rem',\r\n  position: 'relative',\r\n}));\r\n\r\nconst SideNavMobile = styled('div')(({ theme }) => ({\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  bottom: 0,\r\n  right: 0,\r\n  width: '100vw',\r\n  background: 'rgba(0, 0, 0, 0.54)',\r\n  zIndex: -1,\r\n  [theme.breakpoints.up('lg')]: { display: 'none' },\r\n}));\r\n\r\nconst Sidenav = ({ children }) => {\r\n  const { settings, updateSettings } = useSettings();\r\n  const [nav, setNav] = useState([]);\r\n\r\n  const role = localStorage.getItem('role');\r\n\r\n  useEffect(() => {\r\n    let newArr = [];\r\n    navigations.map((item) => {\r\n      item.role.map((item1) => {\r\n        if (item1 === role) {\r\n          newArr.push(item);\r\n        }\r\n      });\r\n    });\r\n    setNav(newArr);\r\n  }, [navigations]);\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    let activeLayoutSettingsName = settings.activeLayout + 'Settings';\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    updateSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <StyledScrollBar options={{ suppressScrollX: true }}>\r\n        {children}\r\n        <MatxVerticalNav items={nav} />\r\n      </StyledScrollBar>\r\n\r\n      <SideNavMobile onClick={() => updateSidebarMode({ mode: 'close' })} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidenav;\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\utils\\utils.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\navigations.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\ShoppingCart.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Brand.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\utils\\constant.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\contexts\\NotificationContext.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\themeColors.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\actions\\EcommerceActions.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Footer.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\dashboard\\shared\\Campaigns.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\menu\\SelectedMenu.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\menu\\MaxHeightMenu.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\radio\\PlacingRadioLabel.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\radio\\StandaloneRadio.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\radio\\SimpleRadio.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\SimpleSnackbar.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\StackedSnackbar.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\menu\\CustomizedMenu.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\TransitionSnackbar.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\menu\\SimpleMenu.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\PositionedSnackbar.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\DirectionSnackbar.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\CustomizedSnackbar.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\LongLengthSnackbar.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\snackbar\\ConsecutiveSnackbar.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\SimpleDialog.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\FullScreenDialog.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\SimpleAlerts.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\OptimalSizeDialog.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\ResponsiveDialog.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\DialogTransition.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\FormDialog.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\CustomizedDialog.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\slider\\InputSlider.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\dialog\\ConfirmationDialog.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\slider\\RangeSlider.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\slider\\VerticalSlider.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\slider\\ContinuousSlider.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\auto-complete\\BadgeAutocomplete.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\auto-complete\\AutocompleteCombo.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\slider\\DiscreteSlider.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\auto-complete\\AsyncAutocomplete.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\expansion-panel\\CustomizedExpansionPanel.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\material-kit\\expansion-panel\\ControlledAccordion.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\SidenavTheme\\SidenavTheme.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxSuspense.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxSearchBox.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxProgressBar.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxSidenav\\MatxSidenav.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxSidenav\\MatxSidenavContent.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxSidenav\\MatxSidenavContainer.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\fake-db\\db\\ecommerce.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\fake-db\\db\\auth.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxMenu.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\ConfirmationDialog.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\ChatAvatar.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\ChatHead.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Chatbox.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\Breadcrumb.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\icons\\GoogleIcon.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\icons\\FacebookIcon.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\reducers\\RootReducer.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\axios.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Approve\\ApproveRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\User\\UserRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListRecruitApproved\\ListRecruitApprovedRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\CandidateProfileRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Recruit\\RecruitRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Language\\LanguageRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Certificate\\CertificateRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Position\\PositionRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\settings.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Department\\DepartmentRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\charts\\ChartsRoute.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\auth\\AuthGuard.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\reducers\\EcommerceReducer.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\reducers\\NavigationReducer.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\reducers\\NotificationReducer.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\initThemes.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxLayout\\Layout1\\Layout1Settings.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Approve\\Approve.jsx",["1037"],"import React, { useEffect, useState } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport { Breadcrumb } from 'app/components';\r\nimport MaterialTable from 'material-table';\r\nimport { getListRecruit, deleteRecruit } from './ApproveService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { toast } from 'react-toastify';\r\nimport ConfirmationDialog from '../../components/ConfirmationDialog';\r\nimport { checkStatus } from 'app/constant';\r\nimport RecruitView from './RecruitView';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\n\r\nexport default function Approve() {\r\n  const [listCertificate, setListCertificate] = useState([]);\r\n  const [shouldOpenViewDialog, setShouldOpenViewDialog] = useState(false);\r\n  const [shouldOpenConfirmDialog, setShouldOpenConfirmDialog] = useState(false);\r\n  const [item, setItem] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '3%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      field: 'action',\r\n      render: (rowData) => (\r\n        <>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setShouldOpenViewDialog(true);\r\n              setItem(rowData);\r\n            }}\r\n          >\r\n            <RemoveRedEyeIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tên kế hoạch',\r\n      field: 'name',\r\n      render: (rowData) => rowData.titleRecruit,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Số lượng',\r\n      field: 'quantity',\r\n      render: (rowData) => rowData.quantity,\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Các kênh tuyển dụng chính',\r\n      field: 'description',\r\n      render: (rowData) => rowData.recruitmentChannel,\r\n      headerStyle: {\r\n        textAlign: 'center',\r\n      },\r\n      cellStyle: {\r\n        width: '20%',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        maxWidth: 100,\r\n      },\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      field: 'status',\r\n      render: (rowData) => {\r\n        let message = checkStatus(rowData.status).message;\r\n        let color = checkStatus(rowData.status).color;\r\n        return <div className={color}>{message}</div>;\r\n      },\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, []);\r\n\r\n  const updatePageData = () => {\r\n    getListRecruit()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          setListCertificate(res.data.data.filter((item) => item.status === 2));\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n  console.log(listCertificate);\r\n  const handleClose = () => {\r\n    setShouldOpenConfirmDialog(false);\r\n    setShouldOpenViewDialog(false);\r\n    setItem({});\r\n    updatePageData();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteRecruit(item.id).then((res) => {\r\n      if (res.data.statusCode === 200) {\r\n        toast.success('Xóa thành công');\r\n      } else {\r\n        toast.warning(res.data.message);\r\n      }\r\n      handleClose();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box style={{ margin: 20 }}>\r\n        <Breadcrumb\r\n          routeSegments={[{ name: 'Lãnh đạo', path: '/leader' }, { name: 'Danh sách kế hoạch' }]}\r\n        />\r\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              updatePageData();\r\n            }}\r\n          >\r\n            <LoopIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div>\r\n          <MaterialTable\r\n            title=\"Danh sách kế hoạch\"\r\n            columns={columns}\r\n            data={listCertificate}\r\n            options={{\r\n              sorting: false,\r\n              maxBodyHeight: '60vh',\r\n              draggable: false,\r\n              pageSize: 10,\r\n              pageSizeOptions: [10, 20, 50],\r\n              headerStyle: {\r\n                textAlign: 'center',\r\n              },\r\n            }}\r\n            isLoading={loading}\r\n            localization={{\r\n              toolbar: {\r\n                searchTooltip: 'Tìm kiếm',\r\n                searchPlaceholder: 'Tìm kiếm',\r\n              },\r\n              pagination: {\r\n                labelDisplayedRows: '{from}-{to} của {count}',\r\n                labelRowsSelect: 'hàng',\r\n                labelRowsPerPage: 'Số hàng mỗi trang:',\r\n                firstAriaLabel: 'Trang đầu',\r\n                firstTooltip: 'Trang đầu',\r\n                previousAriaLabel: 'Trang trước',\r\n                previousTooltip: 'Trang trước',\r\n                nextAriaLabel: 'Trang sau',\r\n                nextTooltip: 'Trang sau',\r\n                lastAriaLabel: 'Trang cuối',\r\n                lastTooltip: 'Trang cuối',\r\n              },\r\n              body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n            }}\r\n          />\r\n        </div>\r\n      </Box>\r\n      {shouldOpenViewDialog && (\r\n        <RecruitView\r\n          open={shouldOpenViewDialog}\r\n          handleClose={handleClose}\r\n          setItem={setItem}\r\n          item={item}\r\n        />\r\n      )}\r\n      {shouldOpenConfirmDialog && (\r\n        <ConfirmationDialog\r\n          title=\"Xác nhận\"\r\n          text=\"Bạn có muốn xóa kế hoạch này?\"\r\n          open={shouldOpenConfirmDialog}\r\n          onConfirmDialogClose={handleClose}\r\n          onYesClick={handleDelete}\r\n          Yes=\"Đồng ý\"\r\n          No=\"Hủy\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\User\\User.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\CandidateProfile.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Recruit\\Recruit.jsx",["1038"],"import React, { useEffect, useState } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport { Breadcrumb } from 'app/components';\r\nimport MaterialTable from 'material-table';\r\nimport { getListRecruit, deleteRecruit } from './RecruitService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { toast } from 'react-toastify';\r\nimport RecruitDialog from './RecruitDialog';\r\nimport ConfirmationDialog from '../../components/ConfirmationDialog';\r\nimport RecruitView from './RecruitView';\r\nimport { checkStatus } from 'app/constant';\r\nimport Grid from '@mui/material/Grid';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport { trangThaiKeHoanhTD } from 'app/constant';\r\nimport './Recruit.scss';\r\n\r\nexport default function Recruit() {\r\n  const [listRecruit, setListRecruit] = useState([]);\r\n  const [shouldOpenDialog, setShouldOpenDialog] = useState(false);\r\n  const [shouldOpenViewDialog, setShouldOpenViewDialog] = useState(false);\r\n  const [shouldOpenConfirmDialog, setShouldOpenConfirmDialog] = useState(false);\r\n  const [item, setItem] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [status, setStatus] = useState('');\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '3%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      field: 'action',\r\n      render: (rowData) => (\r\n        <>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setShouldOpenViewDialog(true);\r\n              setItem(rowData);\r\n            }}\r\n          >\r\n            <RemoveRedEyeIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"success\"\r\n            onClick={() => {\r\n              setShouldOpenDialog(true);\r\n              setItem(rowData);\r\n            }}\r\n            disabled={rowData?.status === 6 || rowData?.status === 4 || rowData?.status === 5}\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n\r\n          <IconButton\r\n            color=\"error\"\r\n            onClick={() => {\r\n              setShouldOpenConfirmDialog(true);\r\n              setItem(rowData);\r\n            }}\r\n            disabled={\r\n              rowData?.status === 6 ||\r\n              rowData?.status === 4 ||\r\n              rowData?.status === 5 ||\r\n              rowData?.status === 10\r\n            }\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tên kế hoạch',\r\n      field: 'name',\r\n      render: (rowData) => rowData.titleRecruit,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Số lượng',\r\n      field: 'quantity',\r\n      render: (rowData) => rowData.quantity,\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Các kênh tuyển dụng chính',\r\n      field: 'description',\r\n      render: (rowData) => rowData.recruitmentChannel,\r\n      headerStyle: {\r\n        textAlign: 'center',\r\n      },\r\n      cellStyle: {\r\n        width: '20%',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        maxWidth: 100,\r\n      },\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      field: 'status',\r\n      render: (rowData) => {\r\n        let message = checkStatus(rowData.status).message;\r\n        let color = checkStatus(rowData.status).color;\r\n        return <div className={color}>{message}</div>;\r\n      },\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, [status]);\r\n\r\n  const updatePageData = () => {\r\n    getListRecruit()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          status?.value\r\n            ? setListRecruit(res.data.data.filter((item) => item.status === status?.value))\r\n            : setListRecruit(\r\n                res.data.data.filter((item) => item.status !== 3 && item.status !== 2)\r\n              );\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n  console.log(listRecruit);\r\n  const handleClose = () => {\r\n    setShouldOpenDialog(false);\r\n    setShouldOpenConfirmDialog(false);\r\n    setShouldOpenViewDialog(false);\r\n    setItem({});\r\n    updatePageData();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteRecruit(item.id).then((res) => {\r\n      if (res.data.statusCode === 200) {\r\n        toast.success('Xóa thành công');\r\n      } else {\r\n        toast.warning(res.data.message);\r\n      }\r\n      handleClose();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box style={{ margin: 20 }}>\r\n        <Breadcrumb\r\n          routeSegments={[{ name: 'Tuyển dụng', path: '/plan' }, { name: 'Kế hoạch tuyển dụng' }]}\r\n        />\r\n        <Grid container spacing={1} justifyContent=\"space-between\">\r\n          <Grid item xs={9}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"medium\"\r\n              style={{ margin: '20px 0', padding: '5px 20px' }}\r\n              onClick={() => setShouldOpenDialog(true)}\r\n            >\r\n              Thêm\r\n            </Button>\r\n          </Grid>\r\n          <Grid item container xs={3}>\r\n            <Grid item xs={10}>\r\n              <Autocomplete\r\n                options={trangThaiKeHoanhTD}\r\n                getOptionLabel={(option) => option?.name || ''}\r\n                value={status}\r\n                onChange={(event, newValue) => setStatus(newValue)}\r\n                componentsProps={{ paper: { elevation: 8 } }}\r\n                fullWidth\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    label=\"Lọc theo trạng thái\"\r\n                    size=\"small\"\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  updatePageData();\r\n                }}\r\n              >\r\n                <LoopIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <MaterialTable\r\n          title=\"Danh sách kế hoạch\"\r\n          columns={columns}\r\n          data={listRecruit}\r\n          options={{\r\n            sorting: false,\r\n            maxBodyHeight: '60vh',\r\n            pageSize: 10,\r\n            pageSizeOptions: [10, 20, 50],\r\n            draggable: false,\r\n            headerStyle: {\r\n              textAlign: 'center',\r\n            },\r\n          }}\r\n          isLoading={loading}\r\n          localization={{\r\n            toolbar: {\r\n              searchTooltip: 'Tìm kiếm',\r\n              searchPlaceholder: 'Tìm kiếm',\r\n            },\r\n            pagination: {\r\n              labelDisplayedRows: '{from}-{to} của {count}',\r\n              labelRowsSelect: 'hàng',\r\n              labelRowsPerPage: 'Số hàng mỗi trang:',\r\n              firstAriaLabel: 'Trang đầu',\r\n              firstTooltip: 'Trang đầu',\r\n              previousAriaLabel: 'Trang trước',\r\n              previousTooltip: 'Trang trước',\r\n              nextAriaLabel: 'Trang sau',\r\n              nextTooltip: 'Trang sau',\r\n              lastAriaLabel: 'Trang cuối',\r\n              lastTooltip: 'Trang cuối',\r\n            },\r\n            body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n          }}\r\n        />\r\n      </Box>\r\n      {shouldOpenDialog && (\r\n        <RecruitDialog open={shouldOpenDialog} handleClose={handleClose} item={item} />\r\n      )}\r\n      {shouldOpenViewDialog && (\r\n        <RecruitView open={shouldOpenViewDialog} handleClose={handleClose} item={item} />\r\n      )}\r\n      {shouldOpenConfirmDialog && (\r\n        <ConfirmationDialog\r\n          title=\"Xác nhận\"\r\n          text=\"Bạn có muốn xóa kế hoạch này?\"\r\n          open={shouldOpenConfirmDialog}\r\n          onConfirmDialogClose={handleClose}\r\n          onYesClick={handleDelete}\r\n          Yes=\"Đồng ý\"\r\n          No=\"Hủy\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Language\\Language.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListRecruitApproved\\ListRecruitApproved.jsx",["1039","1040","1041","1042","1043","1044","1045"],"import React, { useEffect, useState } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport { Breadcrumb } from 'app/components';\r\nimport MaterialTable from 'material-table';\r\nimport { getListRecruit, deleteRecruit } from './ListRecruitApprovedService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { toast } from 'react-toastify';\r\nimport ConfirmationDialog from '../../components/ConfirmationDialog';\r\nimport ListRecruitApprovedView from './ListRecruitApprovedView';\r\nimport { checkStatus } from 'app/constant';\r\nimport './Recruit.scss';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\n\r\nexport default function ListRecruitApproved() {\r\n  const [listRecruit, setListRecruit] = useState([]);\r\n  const [shouldOpenDialog, setShouldOpenDialog] = useState(false);\r\n  const [shouldOpenViewDialog, setShouldOpenViewDialog] = useState(false);\r\n  const [shouldOpenConfirmDialog, setShouldOpenConfirmDialog] = useState(false);\r\n  const [item, setItem] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '3%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      field: 'action',\r\n      render: (rowData) => (\r\n        <IconButton\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            setShouldOpenViewDialog(true);\r\n            setItem(rowData);\r\n          }}\r\n        >\r\n          <RemoveRedEyeIcon />\r\n        </IconButton>\r\n      ),\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tên kế hoạch',\r\n      field: 'name',\r\n      render: (rowData) => rowData.titleRecruit,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Số lượng',\r\n      field: 'quantity',\r\n      render: (rowData) => rowData.quantity,\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Các kênh tuyển dụng chính',\r\n      field: 'description',\r\n      render: (rowData) => rowData.recruitmentChannel,\r\n      headerStyle: {\r\n        textAlign: 'center',\r\n      },\r\n      cellStyle: {\r\n        width: '20%',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        maxWidth: 100,\r\n      },\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      field: 'status',\r\n      render: (rowData) => {\r\n        let message = checkStatus(rowData.status).message;\r\n        let color = checkStatus(rowData.status).color;\r\n        return <div className={color}>{message}</div>;\r\n      },\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, []);\r\n\r\n  const updatePageData = () => {\r\n    getListRecruit()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          setListRecruit(res.data.data.filter((item) => item.status === 4 || item.status === 5));\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShouldOpenDialog(false);\r\n    setShouldOpenConfirmDialog(false);\r\n    setShouldOpenViewDialog(false);\r\n    setItem({});\r\n    updatePageData();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box style={{ margin: 20 }}>\r\n        <Breadcrumb\r\n          routeSegments={[{ name: 'Tuyển dụng', path: '/plan' }, { name: 'Kế hoạch tuyển dụng' }]}\r\n        />\r\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              updatePageData();\r\n            }}\r\n          >\r\n            <LoopIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div>\r\n          <MaterialTable\r\n            title=\"Danh sách kế hoạch\"\r\n            columns={columns}\r\n            data={listRecruit}\r\n            options={{\r\n              sorting: false,\r\n              maxBodyHeight: '60vh',\r\n              pageSize: 10,\r\n              pageSizeOptions: [10, 20, 50],\r\n              draggable: false,\r\n              headerStyle: {\r\n                textAlign: 'center',\r\n              },\r\n            }}\r\n            isLoading={loading}\r\n            localization={{\r\n              toolbar: {\r\n                searchTooltip: 'Tìm kiếm',\r\n                searchPlaceholder: 'Tìm kiếm',\r\n              },\r\n              pagination: {\r\n                labelDisplayedRows: '{from}-{to} của {count}',\r\n                labelRowsSelect: 'hàng',\r\n                labelRowsPerPage: 'Số hàng mỗi trang:',\r\n                firstAriaLabel: 'Trang đầu',\r\n                firstTooltip: 'Trang đầu',\r\n                previousAriaLabel: 'Trang trước',\r\n                previousTooltip: 'Trang trước',\r\n                nextAriaLabel: 'Trang sau',\r\n                nextTooltip: 'Trang sau',\r\n                lastAriaLabel: 'Trang cuối',\r\n                lastTooltip: 'Trang cuối',\r\n              },\r\n              body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n            }}\r\n          />\r\n        </div>\r\n      </Box>\r\n      {shouldOpenViewDialog && (\r\n        <ListRecruitApprovedView\r\n          open={shouldOpenViewDialog}\r\n          handleClose={handleClose}\r\n          item={item}\r\n        />\r\n      )}\r\n      {/* {shouldOpenConfirmDialog && (\r\n        <ConfirmationDialog\r\n          title=\"Xác nhận\"\r\n          text=\"Bạn có muốn xóa kế hoạch này?\"\r\n          open={shouldOpenConfirmDialog}\r\n          onConfirmDialogClose={handleClose}\r\n          onYesClick={handleDelete}\r\n          Yes=\"Đồng ý\"\r\n          No=\"Hủy\"\r\n        />\r\n      )} */}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Certificate\\Certificate.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Department\\Department.jsx",["1046"],"import React, { useEffect, useState } from 'react';\r\nimport { Box, Button, CircularProgress } from '@mui/material';\r\nimport { Breadcrumb } from 'app/components';\r\nimport MaterialTable from 'material-table';\r\nimport { getListDepartment, deleteDepartment } from './DepartmentService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { toast } from 'react-toastify';\r\nimport DepartmentDialog from './DepartmentDialog';\r\nimport ConfirmationDialog from '../../components/ConfirmationDialog';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\n\r\nexport default function Department() {\r\n  const [listDepartment, setListDepartment] = useState([]);\r\n  const [shouldOpenDialog, setShouldOpenDialog] = useState(false);\r\n  const [shouldOpenConfirmDialog, setShouldOpenConfirmDialog] = useState(false);\r\n  const [readOnly, setReadOnly] = useState(false);\r\n  const [item, setItem] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '3%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      field: 'action',\r\n      render: (rowData) => (\r\n        <>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setShouldOpenDialog(true);\r\n              setItem(rowData);\r\n              setReadOnly(true);\r\n            }}\r\n          >\r\n            <RemoveRedEyeIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"success\"\r\n            onClick={() => {\r\n              setShouldOpenDialog(true);\r\n              setItem(rowData);\r\n            }}\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"error\"\r\n            onClick={() => {\r\n              setShouldOpenConfirmDialog(true);\r\n              setItem(rowData);\r\n            }}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Mã phòng ban',\r\n      field: 'code',\r\n      render: (rowData) => rowData.code,\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tên phòng ban',\r\n      field: 'name',\r\n      render: (rowData) => rowData.name,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Mô tả',\r\n      field: 'description',\r\n      render: (rowData) => rowData.description,\r\n      cellStyle: {\r\n        width: '20%',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        maxWidth: 100,\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, []);\r\n\r\n  const updatePageData = () => {\r\n    getListDepartment()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          setListDepartment(res.data.data);\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShouldOpenDialog(false);\r\n    setShouldOpenConfirmDialog(false);\r\n    setItem({});\r\n    updatePageData();\r\n    setReadOnly(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteDepartment(item.id).then((res) => {\r\n      if (res.data.statusCode === 200) {\r\n        toast.success('Xóa thành công');\r\n      } else {\r\n        toast.warning(res.data.message);\r\n      }\r\n      handleClose();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box style={{ margin: 20 }}>\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: 'Danh sách danh mục', path: '/manage' },\r\n            { name: 'Danh sách phòng ban' },\r\n          ]}\r\n        />\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            style={{ margin: '20px 0', padding: '5px 20px' }}\r\n            onClick={() => setShouldOpenDialog(true)}\r\n          >\r\n            Thêm\r\n          </Button>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              updatePageData();\r\n            }}\r\n          >\r\n            <LoopIcon />\r\n          </IconButton>\r\n        </div>\r\n        <MaterialTable\r\n          title=\"Danh sách phòng ban\"\r\n          columns={columns}\r\n          data={listDepartment}\r\n          options={{\r\n            sorting: false,\r\n            maxBodyHeight: '60vh',\r\n            pageSize: 10,\r\n            pageSizeOptions: [10, 20, 50],\r\n            draggable: false,\r\n            headerStyle: {\r\n              textAlign: 'center',\r\n            },\r\n          }}\r\n          isLoading={loading}\r\n          localization={{\r\n            toolbar: {\r\n              searchTooltip: 'Tìm kiếm',\r\n              searchPlaceholder: 'Tìm kiếm',\r\n            },\r\n            pagination: {\r\n              labelDisplayedRows: '{from}-{to} của {count}',\r\n              labelRowsSelect: 'hàng',\r\n              labelRowsPerPage: 'Số hàng mỗi trang:',\r\n              firstAriaLabel: 'Trang đầu',\r\n              firstTooltip: 'Trang đầu',\r\n              previousAriaLabel: 'Trang trước',\r\n              previousTooltip: 'Trang trước',\r\n              nextAriaLabel: 'Trang sau',\r\n              nextTooltip: 'Trang sau',\r\n              lastAriaLabel: 'Trang cuối',\r\n              lastTooltip: 'Trang cuối',\r\n            },\r\n            body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n          }}\r\n        />\r\n      </Box>\r\n      {shouldOpenDialog && (\r\n        <DepartmentDialog\r\n          open={shouldOpenDialog}\r\n          handleClose={handleClose}\r\n          item={item}\r\n          readOnly={readOnly}\r\n        />\r\n      )}\r\n      {shouldOpenConfirmDialog && (\r\n        <ConfirmationDialog\r\n          title=\"Xác nhận\"\r\n          text=\"Bạn có muốn xóa phòng ban này?\"\r\n          open={shouldOpenConfirmDialog}\r\n          onConfirmDialogClose={handleClose}\r\n          onYesClick={handleDelete}\r\n          Yes=\"Đồng ý\"\r\n          No=\"Hủy\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Position\\Position.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\actions\\NotificationActions.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\redux\\actions\\NavigationAction.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\charts\\echarts\\AppEchart.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\themeOptions.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Approve\\ApproveService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\User\\UserService.js",["1047","1048"],"import axios from 'axios.js';\r\nimport { API } from 'app/constant';\r\n\r\nconst API_PATH = API + '/api';\r\n\r\nexport const getListUser = () => {\r\n  return axios.get(API_PATH + '/users');\r\n};\r\n\r\nexport const getListRole = () => {\r\n  return axios.get(API_PATH + '/roles');\r\n};\r\n\r\nexport const addUser = (obj) => {\r\n  return axios.post(API_PATH + '/auth/signup', obj);\r\n};\r\n\r\nexport const editUser = (obj) => {\r\n  return axios.put(API_PATH + '/users' + '/' + obj.id, obj);\r\n};\r\n\r\nexport const deleteUser = (id) => {\r\n  return axios.delete(API_PATH + '/users' + '/' + id);\r\n};\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\CandidateProfileService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListRecruitApproved\\ListRecruitApprovedService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Recruit\\RecruitService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Language\\LanguageService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Position\\PositionService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Approve\\RecruitView.jsx",["1049"],"import React, { useEffect, useRef } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport { TextField } from '@mui/material';\r\nimport { checkStatus } from 'app/constant';\r\nimport { approveRecruit } from './ApproveService';\r\nimport { toast } from 'react-toastify';\r\nimport ConfirmationDialog from '../../components/ConfirmationDialog';\r\nimport RequestAdditional from './RequestAdditional';\r\n\r\nexport default function RecruitView(props) {\r\n  const { open, handleClose, item, setItem } = props;\r\n  const [shouldOpenConfirmDialog, setShouldOpenConfirmDialog] = React.useState(false);\r\n  const [shouldOpenRefuseDialog, setShouldOpenRefuseDialog] = React.useState(false);\r\n  const [shouldOpenFeedbackDialog, setShouldOpenFeedbackDialog] = React.useState(false);\r\n\r\n  const firstRender = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      if (item.status === 4 || item.status === 6 || item.status === 10) {\r\n        handleAprrove();\r\n      }\r\n    } else {\r\n      firstRender.current = true;\r\n    }\r\n  }, [item.status]);\r\n\r\n  const handleAprrove = () => {\r\n    if (item.status === 4) {\r\n      approveRecruit(item)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Phê duyệt kế hoạch thành công');\r\n            handleClose();\r\n          } else {\r\n            toast.warning(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra'));\r\n    } else if (item.status === 10) {\r\n      approveRecruit(item)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Yêu cầu bổ sung kế hoạch thành công');\r\n            handleClose();\r\n          } else {\r\n            toast.warning(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra'));\r\n    } else if (item.status === 6) {\r\n      approveRecruit(item)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Đã từ chối kế hoạch');\r\n            handleClose();\r\n          } else {\r\n            toast.warning(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra'));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Dialog open={open} fullWidth maxWidth={'md'}>\r\n        <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n          Thông tin kế hoạch\r\n          <Box className=\"icon-close\" onClick={handleClose}>\r\n            <IconButton color=\"error\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent style={{ padding: '0 20px' }}>\r\n          <Grid container spacing={2}>\r\n            <Grid container item xs={12} md={12} justifyContent=\"center\">\r\n              <h2>{item?.titleRecruit}</h2>\r\n            </Grid>\r\n            <Grid container item xs={4} md={4}>\r\n              <Grid item xs={4} md={4} className=\"fw-600\">\r\n                Mã kế hoạch:\r\n              </Grid>\r\n              <Grid item xs={6} md={6}>\r\n                {item?.code}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={4} md={4}>\r\n              <Grid item xs={6} md={6} className=\"fw-600\">\r\n                Số lượng tuyển dụng:\r\n              </Grid>\r\n              <Grid item xs={5} md={5}>\r\n                {item?.quantity}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={4} md={4}>\r\n              <Grid item xs={6} md={6} className=\"fw-600\">\r\n                Trạng thái kế hoạch:\r\n              </Grid>\r\n              <Grid item xs={5} md={5}>\r\n                {checkStatus(item?.status).message}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item spacing={1}>\r\n              <Grid item xs={12} md={12}>\r\n                <span className=\"fz-18 fw-600\">Mô tả công việc</span>\r\n              </Grid>\r\n              <Grid item xs={12} md={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  multiline\r\n                  variant=\"standard\"\r\n                  value={item?.description}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                    disableUnderline: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item spacing={1}>\r\n              <Grid item xs={12} md={12}>\r\n                <span className=\"fz-18 fw-600\">Yêu cầu ứng viên</span>\r\n              </Grid>\r\n              <Grid item xs={12} md={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  multiline\r\n                  variant=\"standard\"\r\n                  value={item?.requireRecruit}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                    disableUnderline: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item spacing={1}>\r\n              <Grid item xs={12} md={12}>\r\n                <span className=\"fz-18 fw-600\">Quyền lợi</span>\r\n              </Grid>\r\n              <Grid item xs={12} md={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  multiline\r\n                  variant=\"standard\"\r\n                  value={item?.benefitsReceived}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                    disableUnderline: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item spacing={1}>\r\n              <Grid item xs={12} md={12}>\r\n                <span className=\"fz-18 fw-600\">Các kênh tuyển dụng</span>\r\n              </Grid>\r\n              <Grid item xs={12} md={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  multiline\r\n                  variant=\"standard\"\r\n                  value={item?.recruitmentChannel}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                    disableUnderline: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setShouldOpenConfirmDialog(true)}\r\n            >\r\n              Phê duyệt\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setShouldOpenFeedbackDialog(true)}\r\n            >\r\n              Yêu cầu bổ sung\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"error\"\r\n              onClick={() => setShouldOpenRefuseDialog(true)}\r\n            >\r\n              Từ chối\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n              Đóng\r\n            </Button>\r\n          </>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {shouldOpenConfirmDialog && (\r\n        <ConfirmationDialog\r\n          title=\"Xác nhận\"\r\n          text=\"Bạn có muốn phê duyệt kế hoạch này?\"\r\n          open={shouldOpenConfirmDialog}\r\n          onConfirmDialogClose={() => setShouldOpenConfirmDialog(false)}\r\n          onYesClick={() => {\r\n            setItem({ ...item, status: 4 });\r\n          }}\r\n          Yes=\"Đồng ý\"\r\n          No=\"Hủy\"\r\n        />\r\n      )}\r\n      {shouldOpenRefuseDialog && (\r\n        <ConfirmationDialog\r\n          title=\"Xác nhận\"\r\n          text=\"Bạn có muốn từ chối phê hoạch kế hoạch này?\"\r\n          open={shouldOpenRefuseDialog}\r\n          onConfirmDialogClose={() => setShouldOpenRefuseDialog(false)}\r\n          onYesClick={() => {\r\n            setItem({ ...item, status: 6 });\r\n          }}\r\n          Yes=\"Đồng ý\"\r\n          No=\"Hủy\"\r\n        />\r\n      )}\r\n      {shouldOpenFeedbackDialog && (\r\n        <RequestAdditional\r\n          open={shouldOpenFeedbackDialog}\r\n          handleClose={() => setShouldOpenFeedbackDialog(false)}\r\n          onSelectYes={() => {\r\n            setItem({ ...item, status: 10 });\r\n          }}\r\n          item={item}\r\n          setItem={setItem}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Recruit\\RecruitView.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\User\\UserDialog.jsx",["1050","1051"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport { addUser, editUser, getListRole } from './UserService';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst addNew = Yup.object({\r\n  userName: Yup.string().required('Vui lòng nhập trường này'),\r\n  fullName: Yup.string().required('Vui lòng nhập trường này'),\r\n  email: Yup.string()\r\n    .matches(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/, 'Đây không phải là email!')\r\n    .required('Vui lòng nhập trường này'),\r\n  roles: Yup.array().nullable().required('Vui lòng chọn vai trò'),\r\n  passWord: Yup.string().required('Vui lòng nhập trường này'),\r\n  confirm_password: Yup.string()\r\n    .oneOf([Yup.ref('passWord')], 'Mật khẩu nhập lại không chính xác')\r\n    .required('Vui lòng nhập lại mật khẩu'),\r\n  // newPassword: Yup.string(),\r\n});\r\n\r\nconst changePass = Yup.object({\r\n  userName: Yup.string().required('Vui lòng nhập trường này'),\r\n  fullName: Yup.string().required('Vui lòng nhập trường này'),\r\n  email: Yup.string()\r\n    .matches(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/, 'Đây không phải là email!')\r\n    .required('Vui lòng nhập trường này'),\r\n  roles: Yup.array().nullable().required('Vui lòng chọn vai trò'),\r\n  newPassword: Yup.string().required('Vui lòng nhập lại mật khẩu'),\r\n});\r\n\r\nconst edit = Yup.object({\r\n  userName: Yup.string().required('Vui lòng nhập trường này'),\r\n  fullName: Yup.string().required('Vui lòng nhập trường này'),\r\n  email: Yup.string()\r\n    .matches(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/, 'Đây không phải là email!')\r\n    .required('Vui lòng nhập trường này'),\r\n  roles: Yup.array().nullable().required('Vui lòng chọn vai trò'),\r\n});\r\n\r\nexport default function UserDialog(props) {\r\n  const { open, handleClose, item } = props;\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [editPassword, setEditPassword] = React.useState(false);\r\n  const [listRole, setListRole] = useState([]);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      userName: item.id ? item?.userName : '',\r\n      fullName: item.id ? item?.fullName : '',\r\n      email: item.id ? item?.email : '',\r\n      roles: item.id ? item?.roles : [],\r\n      passWord: '',\r\n      confirm_password: '',\r\n      newPassword: '',\r\n    },\r\n    enableReinitialize: true,\r\n    validateOnChange: false,\r\n    validateOnBlur: false,\r\n    validationSchema: item?.id && editPassword ? changePass : item?.id ? edit : addNew,\r\n    onSubmit: (values) => {\r\n      values.id = item.id;\r\n      // values.roles = [values.roles];\r\n      handleAdd(values);\r\n    },\r\n  });\r\n  console.log(formik.values);\r\n\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  useEffect(() => {\r\n    getListRole().then((res) => setListRole(res.data));\r\n  }, []);\r\n\r\n  const handleAdd = (values) => {\r\n    if (item.id) {\r\n      editUser(values)\r\n        .then((res) => {\r\n          toast.success('Sửa thông tin người dùng thành công');\r\n          handleClose();\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    } else {\r\n      addUser(values)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Thêm người dùng thành công');\r\n            handleClose();\r\n          } else {\r\n            toast.warning(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        {item.id ? 'Sửa thông tin người dùng' : 'Thêm người dùng'}\r\n        <Box className=\"icon-close\" onClick={handleClose}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <form onSubmit={formik.handleSubmit} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '0 20px' }}>\r\n          <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n            <Grid container item xs={12} md={12} spacing={2}>\r\n              <Grid item xs={4} md={4}>\r\n                <TextField\r\n                  label=\"Tên đăng nhập\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"userName\"\r\n                  value={formik.values.userName}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.userName && formik.touched.userName}\r\n                  helperText={formik.errors.userName}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} md={4}>\r\n                <TextField\r\n                  label=\"Họ và tên\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"fullName\"\r\n                  value={formik.values.fullName}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.fullName && formik.touched.fullName}\r\n                  helperText={formik.errors.fullName}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} md={4}>\r\n                <TextField\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"email\"\r\n                  value={formik.values?.email}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.email && formik.touched.email}\r\n                  helperText={formik.errors.email}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={4} md={4}>\r\n              <Autocomplete\r\n                options={listRole}\r\n                getOptionLabel={(option) => option.roleName}\r\n                value={formik.values?.roles ? formik.values?.roles[0] : null}\r\n                onChange={(event, newValue) => formik.setFieldValue('roles', [newValue])}\r\n                componentsProps={{ paper: { elevation: 8 } }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    label=\"Vai trò\"\r\n                    error={formik.errors.roles && formik.touched.roles}\r\n                    helperText={formik.errors.roles}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n\r\n            {item.id && editPassword ? (\r\n              <Grid item xs={4} md={4}>\r\n                <TextField\r\n                  label=\"Mật khẩu mới\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  name=\"newPassword\"\r\n                  value={formik?.values.newPassword}\r\n                  onChange={formik.handleChange}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <IconButton onClick={handleClickShowPassword}>\r\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                      </IconButton>\r\n                    ),\r\n                  }}\r\n                  error={formik.errors.passWord && formik.touched.passWord}\r\n                  helperText={formik.errors.passWord}\r\n                />\r\n              </Grid>\r\n            ) : (\r\n              !item.id && (\r\n                <>\r\n                  <Grid item xs={4} md={4}>\r\n                    <TextField\r\n                      label=\"Mật khẩu\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      name=\"passWord\"\r\n                      value={formik?.values.passWord}\r\n                      onChange={formik.handleChange}\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <IconButton onClick={handleClickShowPassword}>\r\n                            {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                          </IconButton>\r\n                        ),\r\n                      }}\r\n                      error={formik.errors.passWord && formik.touched.passWord}\r\n                      helperText={formik.errors.passWord}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={4} md={4}>\r\n                    <TextField\r\n                      label=\"Nhập lại mật khẩu\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      name=\"confirm_password\"\r\n                      value={formik?.values.confirm_password}\r\n                      onChange={formik.handleChange}\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <IconButton onClick={handleClickShowPassword}>\r\n                            {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                          </IconButton>\r\n                        ),\r\n                      }}\r\n                      error={formik.errors.confirm_password && formik.touched.confirm_password}\r\n                      helperText={formik.errors.confirm_password}\r\n                    />\r\n                  </Grid>\r\n                </>\r\n              )\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n              Hủy\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              {item.id ? 'Lưu' : 'Thêm'}\r\n            </Button>\r\n            {item.id && (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => setEditPassword(!editPassword)}\r\n              >\r\n                Đổi mật khẩu\r\n              </Button>\r\n            )}\r\n          </>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\CandidateProfileDialog.jsx",["1052","1053"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { addCandidate, editCandidate, getListRecruit } from './CandidateProfileService';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport { uploadImage } from 'app/constant';\r\nimport './Candidate.scss';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nexport default function CandidateProfileDialog(props) {\r\n  const { open, handleClose, item } = props;\r\n\r\n  const [listRecruit, setListRecruit] = useState([]);\r\n  const [file, setFile] = useState(undefined);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      code: item.id ? item?.code : '',\r\n      fullName: item.id ? item?.fullName : '',\r\n      age: item.id ? item?.age : '',\r\n      imageName: item.id ? item?.imageName : '',\r\n      education: item.id ? item?.education : '',\r\n      major: item.id ? item?.major : '',\r\n      dateOfBirth: item.id ? item?.dateOfBirth : null,\r\n      email: item.id ? item?.email : '',\r\n      phone: item.id ? item?.phone : '',\r\n      address: item.id ? item?.address : '',\r\n      recruitDtos: item.id ? item?.recruitDtos : [],\r\n      status: item.id ? item?.status : '',\r\n    },\r\n    enableReinitialize: true,\r\n    validateOnChange: false,\r\n    validateOnBlur: false,\r\n    validationSchema: Yup.object({\r\n      code: Yup.string()\r\n        .matches(/^MaHS[0-9]{4}$/, 'Mã hồ sơ chưa đúng format VD:(MaHS9999)')\r\n        .required('Vui lòng nhập trường này'),\r\n      fullName: Yup.string().required('Vui lòng nhập trường này'),\r\n      age: Yup.number().typeError('Tuổi phải là số!').required('Vui lòng nhập trường này'),\r\n      education: Yup.string().required('Vui lòng nhập trường này'),\r\n      major: Yup.string().required('Vui lòng nhập trường này'),\r\n      dateOfBirth: Yup.date()\r\n        .nullable()\r\n        .typeError('Sai định dạng ngày!')\r\n        .required('Vui lòng nhập trường này'),\r\n      email: Yup.string()\r\n        .matches(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/, 'Đây không phải là email!')\r\n        .required('Vui lòng nhập Email!'),\r\n      phone: Yup.string()\r\n        .matches(/(84|0[3|5|7|8|9])+([0-9]{8})\\b/, 'Số điện thoại không hợp lệ')\r\n        .required('Vui lòng nhập Số điện thoại!'),\r\n      recruitDtos: Yup.array().nullable().required('Vui lòng nhập trường này'),\r\n      address: Yup.string().required('Vui lòng nhập trường này'),\r\n    }),\r\n    onSubmit: (values) => {\r\n      values.id = item?.id;\r\n      values.status = 17;\r\n      handleAdd(values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getListRecruit()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setListRecruit(res.data.data);\r\n        } else {\r\n          toast.warning(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => toast.error('Có lỗi!'));\r\n  }, []);\r\n  console.log(formik.values?.recruitDtos);\r\n  const handleAdd = (values) => {\r\n    if (values.id) {\r\n      editCandidate(values)\r\n        .then((res) => {\r\n          toast.success('Sửa thông tin hồ sơ thành công');\r\n          handleClose();\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    } else {\r\n      addCandidate(values)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Thêm hồ sơ thành công');\r\n            handleClose();\r\n          } else {\r\n            toast.warning(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        {item.id ? 'Sửa hồ sơ' : 'Thêm hồ sơ'}\r\n        <Box className=\"icon-close\" onClick={handleClose}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <form onSubmit={formik.handleSubmit} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '0 20px' }}>\r\n          <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n            <Grid container item xs={12} md={12} spacing={2}>\r\n              <Grid item xs={3} md={3}>\r\n                <TextField\r\n                  label=\"Mã hồ sơ\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"code\"\r\n                  value={formik.values?.code}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.code && formik.touched.code}\r\n                  helperText={formik.errors.code}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3} md={3}>\r\n                <TextField\r\n                  label=\"Họ và Tên\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"fullName\"\r\n                  value={formik.values?.fullName}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.fullName && formik.touched.fullName}\r\n                  helperText={formik.errors.fullName}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2} md={2}>\r\n                <TextField\r\n                  label=\"Tuổi\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"age\"\r\n                  value={formik.values?.age}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.age && formik.touched.age}\r\n                  helperText={formik.errors.age}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} md={4}>\r\n                <TextField\r\n                  label=\"Ảnh ứng viên\"\r\n                  type=\"text\"\r\n                  style={{ width: '82%' }}\r\n                  name=\"imageName\"\r\n                  value={formik.values?.imageName}\r\n                  // InputLabelProps={{ shrink: true }}\r\n                  inputProps={{ accept: 'image/*' }}\r\n                  error={formik.errors.code && formik.touched.code}\r\n                  helperText={formik.errors.code}\r\n                />\r\n                <label for=\"file-upload\" class=\"custom-file-upload\">\r\n                  <AddIcon />\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"file-upload\"\r\n                  name=\"filename\"\r\n                  onChange={(event) => {\r\n                    console.log(event.currentTarget.files[0]);\r\n                    uploadImage(event.currentTarget.files[0]).then((res) => {\r\n                      formik.setFieldValue('image', res?.data?.fileDownloadUri);\r\n                      formik.setFieldValue('imageName', res?.data?.fileName);\r\n                    });\r\n                  }}\r\n                ></input>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} md={12} spacing={2}>\r\n              <Grid item xs={4} md={4}>\r\n                <TextField\r\n                  label=\"Trình độ học vấn\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"education\"\r\n                  value={formik.values?.education}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.education && formik.touched.education}\r\n                  helperText={formik.errors.education}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} md={4}>\r\n                <TextField\r\n                  label=\"Chuyên nghành\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"major\"\r\n                  value={formik.values?.major}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.major && formik.touched.major}\r\n                  helperText={formik.errors.major}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} md={4}>\r\n                <LocalizationProvider dateAdapter={AdapterDayjs} fullWidth>\r\n                  <DatePicker\r\n                    label=\"Ngày sinh\"\r\n                    name=\"dateOfBirth\"\r\n                    inputFormat=\"DD/MM/YYYY\"\r\n                    value={formik.values?.dateOfBirth}\r\n                    onChange={(value) => {\r\n                      if (value) {\r\n                        formik.setFieldValue('dateOfBirth', new Date(value));\r\n                      }\r\n                    }}\r\n                    renderInput={(params) => {\r\n                      return (\r\n                        <TextField\r\n                          {...params}\r\n                          format=\"DD/MM/YYYY\"\r\n                          type=\"date\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          error={formik.errors.dateOfBirth && formik.touched.dateOfBirth}\r\n                          helperText={formik.errors.dateOfBirth}\r\n                        />\r\n                      );\r\n                    }}\r\n                  />\r\n                </LocalizationProvider>\r\n              </Grid>\r\n              <Grid container item xs={12} md={12} spacing={2}>\r\n                <Grid item xs={4} md={4}>\r\n                  <TextField\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    value={formik.values?.email}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.errors.email && formik.touched.email}\r\n                    helperText={formik.errors.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4} md={4}>\r\n                  <TextField\r\n                    label=\"Số điện thoại\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"phone\"\r\n                    value={formik.values?.phone}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.errors.phone && formik.touched.phone}\r\n                    helperText={formik.errors.phone}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4} md={4}>\r\n                  <Autocomplete\r\n                    options={listRecruit}\r\n                    getOptionLabel={(option) => option.titleRecruit}\r\n                    value={formik.values?.recruitDtos[0]}\r\n                    onChange={(event, newValue) => formik.setFieldValue('recruitDtos', [newValue])}\r\n                    componentsProps={{ paper: { elevation: 8 } }}\r\n                    fullWidth\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        label=\"Vị trí ứng tuyển\"\r\n                        error={formik.errors.recruitDtos && formik.touched.recruitDtos}\r\n                        helperText={formik.errors.recruitDtos}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} md={12}>\r\n                <TextField\r\n                  label=\"Địa chỉ\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"address\"\r\n                  value={formik.values?.address}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.address && formik.touched.address}\r\n                  helperText={formik.errors.address}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n            Hủy\r\n          </Button>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            {item.id ? 'Lưu' : 'Thêm'}\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListRecruitApproved\\ListRecruitApprovedView.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Language\\LanguageDialog.jsx",["1054"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport { addLanguage, editLanguage } from './LanguageService';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function LanguageDialog(props) {\r\n  const { open, handleClose, item, readOnly } = props;\r\n  const [language, setLanguage] = useState({});\r\n\r\n  useEffect(() => {\r\n    setLanguage(item);\r\n  }, []);\r\n\r\n  const handleAdd = () => {\r\n    if (language.id) {\r\n      editLanguage(language)\r\n        .then((res) => {\r\n          toast.success('Sửa thông tin chứng chỉ thành công');\r\n          handleClose();\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    } else {\r\n      addLanguage(language)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Thêm chứng chỉ thành công');\r\n            handleClose();\r\n          } else {\r\n            toast.warning(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        {language.id && readOnly\r\n          ? 'Thông tin chứng chỉ'\r\n          : language.id\r\n          ? 'Sửa chứng chỉ'\r\n          : 'Thêm chứng chỉ'}\r\n        <Box className=\"icon-close\" onClick={handleClose}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <ValidatorForm onSubmit={() => handleAdd()} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '0 20px' }}>\r\n          <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n            <Grid container item xs={12} md={12} spacing={2}>\r\n              <Grid item xs={6} md={6}>\r\n                <TextValidator\r\n                  label=\"Mã chứng chỉ\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    readOnly: readOnly,\r\n                  }}\r\n                  value={language?.code}\r\n                  onChange={(event) => setLanguage({ ...language, code: event.target.value })}\r\n                  validators={['required', 'matchRegexp:^MaNN[0-9]{4}$']}\r\n                  errorMessages={[\r\n                    'Vui lòng nhập trường này',\r\n                    'Mã chứng chỉ chưa đúng format VD:(MaNN9999)',\r\n                  ]}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={6}>\r\n                <TextValidator\r\n                  label=\"Tên chứng chỉ\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    readOnly: readOnly,\r\n                  }}\r\n                  value={language?.name}\r\n                  onChange={(event) => setLanguage({ ...language, name: event.target.value })}\r\n                  validators={['required', 'matchRegexp:^[0-9a-zA-Z].{5,100}$']}\r\n                  errorMessages={[\r\n                    'Vui lòng nhập trường này',\r\n                    'Tên chứng chỉ phải lớn hơn 5 kí tự và nhỏ hơn 100 kí tự',\r\n                  ]}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} spacing={2}>\r\n              <TextValidator\r\n                label=\"Mô tả\"\r\n                multiline\r\n                minRows={4}\r\n                maxRows={10}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{\r\n                  readOnly: readOnly,\r\n                }}\r\n                value={language?.description}\r\n                onChange={(event) =>\r\n                  setLanguage({\r\n                    ...language,\r\n                    description: event.target.value,\r\n                  })\r\n                }\r\n                validators={['required']}\r\n                errorMessages={['Vui lòng nhập trường này']}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {readOnly ? (\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n              Đóng\r\n            </Button>\r\n          ) : (\r\n            <>\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n                Hủy\r\n              </Button>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                {language.id ? 'Lưu' : 'Thêm'}\r\n              </Button>\r\n            </>\r\n          )}\r\n        </DialogActions>\r\n      </ValidatorForm>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Department\\DepartmentService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Department\\DepartmentDialog.jsx",["1055"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport { addDepartment, editDepartment } from './DepartmentService';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function DepartmentDialog(props) {\r\n  const { open, handleClose, item, readOnly } = props;\r\n  const [department, setDepartment] = useState({});\r\n\r\n  useEffect(() => {\r\n    setDepartment(item);\r\n  }, []);\r\n\r\n  const handleAdd = () => {\r\n    if (department.id) {\r\n      editDepartment(department)\r\n        .then((res) => {\r\n          toast.success('Sửa thông tin phòng ban thành công');\r\n          handleClose();\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    } else {\r\n      addDepartment(department)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Thêm phòng ban thành công');\r\n            handleClose();\r\n          } else {\r\n            toast.warning(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        {department.id && readOnly\r\n          ? 'Thông tin phòng ban'\r\n          : department.id\r\n          ? 'Sửa phòng ban'\r\n          : 'Thêm phòng ban'}\r\n        <Box className=\"icon-close\" onClick={handleClose}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <ValidatorForm onSubmit={() => handleAdd()} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '0 20px' }}>\r\n          <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n            <Grid container item xs={12} md={12} spacing={2}>\r\n              <Grid item xs={6} md={6}>\r\n                <TextValidator\r\n                  label=\"Mã phòng ban\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    readOnly: readOnly,\r\n                  }}\r\n                  value={department?.code}\r\n                  onChange={(event) => setDepartment({ ...department, code: event.target.value })}\r\n                  validators={['required', 'matchRegexp:^MaPB[0-9]{4}$']}\r\n                  errorMessages={[\r\n                    'Vui lòng nhập trường này',\r\n                    'Mã phòng ban chưa đúng format VD:(MaPB9999)',\r\n                  ]}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={6}>\r\n                <TextValidator\r\n                  label=\"Tên phòng ban\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    readOnly: readOnly,\r\n                  }}\r\n                  value={department?.name}\r\n                  onChange={(event) => setDepartment({ ...department, name: event.target.value })}\r\n                  validators={['required', 'matchRegexp:^[0-9a-zA-Z].{5,100}$']}\r\n                  errorMessages={[\r\n                    'Vui lòng nhập trường này',\r\n                    'Tên phòng ban phải lớn hơn 5 kí tự và nhỏ hơn 100 kí tự',\r\n                  ]}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} spacing={2}>\r\n              <TextValidator\r\n                label=\"Mô tả\"\r\n                multiline\r\n                minRows={4}\r\n                maxRows={10}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{\r\n                  readOnly: readOnly,\r\n                }}\r\n                value={department?.description}\r\n                onChange={(event) =>\r\n                  setDepartment({\r\n                    ...department,\r\n                    description: event.target.value,\r\n                  })\r\n                }\r\n                validators={['required']}\r\n                errorMessages={['Vui lòng nhập trường này']}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {readOnly ? (\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n              Đóng\r\n            </Button>\r\n          ) : (\r\n            <>\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n                Hủy\r\n              </Button>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                {department.id ? 'Lưu' : 'Thêm'}\r\n              </Button>\r\n            </>\r\n          )}\r\n        </DialogActions>\r\n      </ValidatorForm>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Certificate\\CertificateDialog.jsx",["1056"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { addCertificate, editCertificate } from './CertificateService';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function CertificateDialog(props) {\r\n  const { open, handleClose, item, readOnly } = props;\r\n  const [certificate, setCertificate] = useState({});\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      code: item.id ? item?.code : '',\r\n      name: item.id ? item?.name : '',\r\n      majors: item.id ? item?.majors : '',\r\n      grantedBy: item.id ? item?.grantedBy : '',\r\n      issuedDate: item.id ? item?.issuedDate : null,\r\n    },\r\n    enableReinitialize: true,\r\n    validateOnChange: false,\r\n    validateOnBlur: false,\r\n    validationSchema: Yup.object({\r\n      code: Yup.string()\r\n        .matches(/^MaBC[0-9]{4}$/, 'Mã bằng cấp chưa đúng format VD:(MaBC9999)')\r\n        .required('Vui lòng nhập trường này'),\r\n      name: Yup.string()\r\n        .matches(/^[0-9a-zA-Z].{5,100}$/, 'Tên bằng cấp phải lớn hơn 5 kí tự và nhỏ hơn 100 kí tự')\r\n        .required('Vui lòng nhập trường này'),\r\n      majors: Yup.string().required('Vui lòng nhập trường này'),\r\n      grantedBy: Yup.string().required('Vui lòng nhập trường này'),\r\n      issuedDate: Yup.date()\r\n        .nullable()\r\n        .typeError('Sai định dạng ngày!')\r\n        .required('Vui lòng nhập trường này'),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleAdd(values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setCertificate(item);\r\n  }, []);\r\n\r\n  const handleAdd = (values) => {\r\n    if (values.id) {\r\n      editCertificate(values)\r\n        .then((res) => {\r\n          toast.success('Sửa thông tin bằng cấp thành công');\r\n          handleClose();\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    } else {\r\n      addCertificate(values)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Thêm bằng cấp thành công');\r\n            handleClose();\r\n          } else {\r\n            toast.warning(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        {certificate.id && readOnly\r\n          ? 'Thông tin bằng cấp'\r\n          : certificate.id\r\n          ? 'Sửa bằng cấp'\r\n          : 'Thêm bằng cấp'}\r\n        <Box className=\"icon-close\" onClick={handleClose}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <form onSubmit={formik.handleSubmit} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '0 20px' }}>\r\n          <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n            <Grid container item xs={12} md={12} spacing={2}>\r\n              <Grid item xs={4} md={4}>\r\n                <TextField\r\n                  label=\"Mã bằng cấp\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    readOnly: readOnly,\r\n                  }}\r\n                  name=\"code\"\r\n                  value={formik.values?.code}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.code && formik.touched.code}\r\n                  helperText={formik.errors.code}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} md={4}>\r\n                <TextField\r\n                  label=\"Tên bằng cấp\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    readOnly: readOnly,\r\n                  }}\r\n                  name=\"name\"\r\n                  value={formik.values?.name}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.name && formik.touched.name}\r\n                  helperText={formik.errors.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} md={4}>\r\n                <TextField\r\n                  label=\"Chuyên ngành\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    readOnly: readOnly,\r\n                  }}\r\n                  name=\"majors\"\r\n                  value={formik.values?.majors}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.majors && formik.touched.majors}\r\n                  helperText={formik.errors.majors}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} md={12} spacing={2}>\r\n              <Grid item xs={6} md={6}>\r\n                <TextField\r\n                  label=\"Được cấp bởi\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    readOnly: readOnly,\r\n                  }}\r\n                  name=\"grantedBy\"\r\n                  value={formik.values?.grantedBy}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.majors && formik.touched.majors}\r\n                  helperText={formik.errors.majors}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={6}>\r\n                <LocalizationProvider dateAdapter={AdapterDayjs} fullWidth>\r\n                  <DatePicker\r\n                    label=\"Ngày cấp\"\r\n                    name=\"issuedDate\"\r\n                    inputFormat=\"DD/MM/YYYY\"\r\n                    value={formik.values?.issuedDate}\r\n                    onChange={(value) => {\r\n                      if (value) {\r\n                        formik.setFieldValue('issuedDate', new Date(value));\r\n                      }\r\n                    }}\r\n                    renderInput={(params) => {\r\n                      return (\r\n                        <TextField\r\n                          {...params}\r\n                          format=\"DD/MM/YYYY\"\r\n                          type=\"date\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          error={formik.errors.issuedDate && formik.touched.issuedDate}\r\n                          helperText={formik.errors.issuedDate}\r\n                        />\r\n                      );\r\n                    }}\r\n                  />\r\n                </LocalizationProvider>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {readOnly ? (\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n              Đóng\r\n            </Button>\r\n          ) : (\r\n            <>\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n                Hủy\r\n              </Button>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                {certificate.id ? 'Lưu' : 'Thêm'}\r\n              </Button>\r\n            </>\r\n          )}\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Recruit\\RecruitDialog.jsx",["1057"],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Certificate\\CertificateService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Position\\PositionDialog.jsx",["1058"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport { addPosition, editPosition } from './PositionService';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function PositionDialog(props) {\r\n  const { open, handleClose, item, readOnly } = props;\r\n  const [position, setPosition] = useState({});\r\n\r\n  useEffect(() => {\r\n    setPosition(item);\r\n  }, []);\r\n\r\n  const handleAdd = () => {\r\n    if (position.id) {\r\n      editPosition(position)\r\n        .then((res) => {\r\n          toast.success('Sửa thông tin chức vụ thành công');\r\n          handleClose();\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    } else {\r\n      addPosition(position)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Thêm chức vụ thành công');\r\n            handleClose();\r\n          } else {\r\n            toast.warning(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        {position.id && readOnly\r\n          ? 'Thông tin phòng ban'\r\n          : position.id\r\n          ? 'Sửa phòng ban'\r\n          : 'Thêm phòng ban'}\r\n        <Box className=\"icon-close\" onClick={handleClose}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <ValidatorForm onSubmit={() => handleAdd()} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '0 20px' }}>\r\n          <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n            <Grid container item xs={12} md={12} spacing={2}>\r\n              <Grid item xs={6} md={6}>\r\n                <TextValidator\r\n                  label=\"Mã chức vụ\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    readOnly: readOnly,\r\n                  }}\r\n                  value={position?.code}\r\n                  onChange={(event) => setPosition({ ...position, code: event.target.value })}\r\n                  validators={['required', 'matchRegexp:^MaCV[0-9]{4}$']}\r\n                  errorMessages={[\r\n                    'Vui lòng nhập trường này',\r\n                    'Mã chức vụ chưa đúng format VD:(MaCV9999)',\r\n                  ]}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={6}>\r\n                <TextValidator\r\n                  label=\"Tên chức vụ\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    readOnly: readOnly,\r\n                  }}\r\n                  value={position?.name}\r\n                  onChange={(event) => setPosition({ ...position, name: event.target.value })}\r\n                  validators={['required', 'matchRegexp:^[0-9a-zA-Z].{5,100}$']}\r\n                  errorMessages={[\r\n                    'Vui lòng nhập trường này',\r\n                    'Tên chức vụ phải lớn hơn 5 kí tự và nhỏ hơn 100 kí tự',\r\n                  ]}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} spacing={2}>\r\n              <TextValidator\r\n                label=\"Mô tả\"\r\n                multiline\r\n                minRows={4}\r\n                maxRows={10}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{\r\n                  readOnly: readOnly,\r\n                }}\r\n                value={position?.description}\r\n                onChange={(event) => setPosition({ ...position, description: event.target.value })}\r\n                validators={['required']}\r\n                errorMessages={['Vui lòng nhập trường này']}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {readOnly ? (\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n              Đóng\r\n            </Button>\r\n          ) : (\r\n            <>\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n                Hủy\r\n              </Button>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                {position.id ? 'Lưu' : 'Thêm'}\r\n              </Button>\r\n            </>\r\n          )}\r\n        </DialogActions>\r\n      </ValidatorForm>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\charts\\echarts\\AreaChart.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\charts\\echarts\\ComparisonChart.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\charts\\echarts\\Doughnut.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\charts\\echarts\\LineChart.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\components\\MatxTheme\\components.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Approve\\RequestAdditional.jsx",["1059"],"import React, { useEffect } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n\r\nexport default function RequestAdditional(props) {\r\n  const { open, handleClose, item, setItem, onSelectYes } = props;\r\n  const handleRefuse = () => {\r\n    onSelectYes();\r\n    handleClose();\r\n  };\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        Yêu cầu bổ sung\r\n        <Box className=\"icon-close\" onClick={handleClose}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <ValidatorForm onSubmit={() => handleRefuse()} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '20px' }}>\r\n          <TextValidator\r\n            label=\"Nội dung yêu cầu bổ sung\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={item?.feedback}\r\n            onChange={(event) => setItem({ ...item, feedback: event.target.value })}\r\n            validators={['required']}\r\n            errorMessages={['Vui lòng nhập trường này']}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Lưu\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n            Đóng\r\n          </Button>\r\n        </DialogActions>\r\n      </ValidatorForm>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveCadidate\\ApproveCadidateRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveCadidate\\ApproveCandidate.jsx",["1060"],"import React, { useEffect, useState } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport { Breadcrumb } from 'app/components';\r\nimport MaterialTable from 'material-table';\r\nimport { getListCandidate } from './ApproveCandidateService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { toast } from 'react-toastify';\r\nimport { checkStatus } from 'app/constant';\r\nimport CandidateProfileView from './CandidateProfileView';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\n\r\nexport default function ApproveCandidate() {\r\n  const [listCandidate, setListCandidate] = useState([]);\r\n  const [shouldOpenViewDialog, setShouldOpenViewDialog] = useState(false);\r\n  const [item, setItem] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '3%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      field: 'action',\r\n      render: (rowData) => (\r\n        <>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setShouldOpenViewDialog(true);\r\n              setItem(rowData);\r\n            }}\r\n          >\r\n            <RemoveRedEyeIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Mã hồ sơ',\r\n      field: 'code',\r\n      render: (rowData) => rowData?.code,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Họ và tên',\r\n      field: 'fullName',\r\n      render: (rowData) => rowData?.fullName,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Email',\r\n      field: 'email',\r\n      render: (rowData) => rowData?.email,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'SĐT',\r\n      field: 'phone',\r\n      render: (rowData) => rowData?.phone,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      field: 'status',\r\n      render: (rowData) => {\r\n        let message = checkStatus(rowData.status).message;\r\n        let color = checkStatus(rowData.status).color;\r\n        return <div className={color}>{message}</div>;\r\n      },\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, []);\r\n\r\n  const updatePageData = () => {\r\n    getListCandidate()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          setListCandidate(res.data.data.filter((item) => item.status === 18));\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShouldOpenViewDialog(false);\r\n    updatePageData();\r\n    setItem({});\r\n  };\r\n  return (\r\n    <>\r\n      <Box style={{ margin: 20 }}>\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: 'Phê duyệt', path: '/leader' },\r\n            { name: 'Phê duyệt hồ sơ ứng viên' },\r\n          ]}\r\n        />\r\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              updatePageData();\r\n            }}\r\n          >\r\n            <LoopIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div>\r\n          <MaterialTable\r\n            title=\"Danh sách hồ sơ ứng viên\"\r\n            columns={columns}\r\n            data={listCandidate}\r\n            options={{\r\n              sorting: false,\r\n              maxBodyHeight: '60vh',\r\n              draggable: false,\r\n              pageSize: 10,\r\n              pageSizeOptions: [10, 20, 50],\r\n              headerStyle: {\r\n                textAlign: 'center',\r\n              },\r\n            }}\r\n            isLoading={loading}\r\n            localization={{\r\n              toolbar: {\r\n                searchTooltip: 'Tìm kiếm',\r\n                searchPlaceholder: 'Tìm kiếm',\r\n              },\r\n              pagination: {\r\n                labelDisplayedRows: '{from}-{to} của {count}',\r\n                labelRowsSelect: 'hàng',\r\n                labelRowsPerPage: 'Số hàng mỗi trang:',\r\n                firstAriaLabel: 'Trang đầu',\r\n                firstTooltip: 'Trang đầu',\r\n                previousAriaLabel: 'Trang trước',\r\n                previousTooltip: 'Trang trước',\r\n                nextAriaLabel: 'Trang sau',\r\n                nextTooltip: 'Trang sau',\r\n                lastAriaLabel: 'Trang cuối',\r\n                lastTooltip: 'Trang cuối',\r\n              },\r\n              body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n            }}\r\n          />\r\n        </div>\r\n      </Box>\r\n      {shouldOpenViewDialog && (\r\n        <CandidateProfileView\r\n          open={shouldOpenViewDialog}\r\n          handleClose={handleClose}\r\n          item={item}\r\n          setItem={setItem}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveCadidate\\ApproveCandidateService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\CandidateProfileView.jsx",["1061"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport moment from 'moment';\r\nimport MakeAppointment from './MakeAppointment';\r\nimport RefuseDialog from './RefuseDialog';\r\nimport { toast } from 'react-toastify';\r\nimport { editCandidate } from './CandidateProfileService';\r\n\r\nexport default function CandidateProfileView(props) {\r\n  const { open, handleClose, item } = props;\r\n\r\n  const [candidate, setCandidate] = useState({});\r\n  const [shouldOpenMakeApointmentDialog, setShouldOpenMakeApointmentDialog] = useState(false);\r\n  const [shouldOpenRefuseDialog, setShouldOpenRefuseDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCandidate(item);\r\n  }, []);\r\n\r\n  const handleMakeApointment = () => {\r\n    editCandidate(candidate)\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          toast.success('Hẹn lịch phỏng vấn thành công');\r\n          handleClose();\r\n        } else {\r\n          toast.warning('Lỗi xác thực');\r\n        }\r\n      })\r\n      .catch((err) => toast.error('Có lỗi xảy ra'));\r\n  };\r\n\r\n  const handleRefuse = () => {\r\n    editCandidate(candidate)\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          toast.success('Đã từ chối hồ sơ ứng viên này');\r\n          handleClose();\r\n        } else {\r\n          toast.warning(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} fullWidth maxWidth={'md'}>\r\n        <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n          Hồ sơ ứng viên\r\n          <Box className=\"icon-close\" onClick={handleClose}>\r\n            <IconButton color=\"error\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent style={{ margin: '20px', fontSize: 16, overflowX: 'hidden' }}>\r\n          <Grid container>\r\n            <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n              <Grid container item xs={8} md={8} spacing={2} style={{ height: 200 }}>\r\n                <Grid item style={{ fontWeight: 600 }}>\r\n                  Mã hồ sơ:\r\n                </Grid>\r\n                <Grid item xs={8} md={8}>\r\n                  {candidate.code}\r\n                </Grid>\r\n                <Grid item style={{ fontWeight: 600 }}>\r\n                  Họ và tên ứng viên:\r\n                </Grid>\r\n                <Grid item xs={8} md={8}>\r\n                  {candidate.fullName}\r\n                </Grid>\r\n                <Grid item style={{ fontWeight: 600 }}>\r\n                  Tuổi:\r\n                </Grid>\r\n                <Grid item xs={2} md={2}>\r\n                  {candidate.age}\r\n                </Grid>\r\n                <Grid item style={{ fontWeight: 600 }}>\r\n                  Ngày sinh:\r\n                </Grid>\r\n                <Grid item xs={6} md={6}>\r\n                  {moment(candidate.dateOfBirth).format('DD/MM/YYYY')}\r\n                </Grid>\r\n                <Grid item style={{ fontWeight: 600 }}>\r\n                  Số điện thoại:\r\n                </Grid>\r\n                <Grid item xs={9} md={9}>\r\n                  {candidate.phone}\r\n                </Grid>\r\n                <Grid item style={{ fontWeight: 600 }}>\r\n                  Email:\r\n                </Grid>\r\n                <Grid item xs={8} md={8}>\r\n                  {candidate.email}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={4} md={4} style={{ height: 200 }}>\r\n                <Grid item xs={12} style={{ height: '100%' }}>\r\n                  <img\r\n                    src={candidate?.image}\r\n                    alt=\"\"\r\n                    style={{\r\n                      height: '100%',\r\n                      float: 'right',\r\n                      border: '1px solid #ccc',\r\n                      borderRadius: 10,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={8} md={8} spacing={2}>\r\n                <Grid container item xs={12} md={12} spacing={2}>\r\n                  <Grid item style={{ fontWeight: 600 }}>\r\n                    Địa chỉ:\r\n                  </Grid>\r\n                  <Grid item xs={10} md={10}>\r\n                    {candidate.address}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={6} md={6} spacing={2}>\r\n                  <Grid item style={{ fontWeight: 600 }}>\r\n                    Trình độ học vấn:\r\n                  </Grid>\r\n                  <Grid item xs={5} md={5}>\r\n                    {candidate.education}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={10} md={10} spacing={2}>\r\n                  <Grid item style={{ fontWeight: 600 }}>\r\n                    Ngành:\r\n                  </Grid>\r\n                  <Grid item xs={10} md={10}>\r\n                    {candidate.major}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} md={12} spacing={2}>\r\n                  <Grid item style={{ fontWeight: 600 }}>\r\n                    Ứng tuyển vị trí:\r\n                  </Grid>\r\n                  <Grid item xs={8} md={8}>\r\n                    {item?.recruitDtos[0]?.titleRecruit || ''}\r\n                  </Grid>\r\n                </Grid>\r\n                {candidate?.status === 18 ? (\r\n                  <>\r\n                    <Grid container item xs={12} md={12} spacing={2}>\r\n                      <Grid item style={{ fontWeight: 600 }}>\r\n                        Người hẹn:\r\n                      </Grid>\r\n                      <Grid item xs={8} md={8}>\r\n                        {candidate?.interviewer}\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid container item xs={12} md={12} spacing={2}>\r\n                      <Grid item style={{ fontWeight: 600 }}>\r\n                        Thời gian hẹn:\r\n                      </Grid>\r\n                      <Grid item xs={8} md={8}>\r\n                        {moment(candidate?.interviewDate).format('DD/MM/YYYY hh:mm A')}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </>\r\n                ) : candidate?.status === 6 || candidate?.status === 9 ? (\r\n                  <Grid container item xs={12} md={12} spacing={2}>\r\n                    <Grid item style={{ fontWeight: 600 }}>\r\n                      Lý do:\r\n                    </Grid>\r\n                    <Grid item xs={8} md={8}>\r\n                      {candidate?.refusalReason}\r\n                    </Grid>\r\n                  </Grid>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setShouldOpenMakeApointmentDialog(true)}\r\n            disabled={\r\n              candidate?.status === 18 ||\r\n              candidate?.status === 6 ||\r\n              candidate?.status === 8 ||\r\n              candidate?.status === 9\r\n            }\r\n          >\r\n            Hẹn phỏng vấn\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => setShouldOpenRefuseDialog(true)}\r\n            disabled={\r\n              candidate?.status === 18 ||\r\n              candidate?.status === 6 ||\r\n              candidate?.status === 8 ||\r\n              candidate?.status === 9\r\n            }\r\n          >\r\n            Từ chối\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n            Hủy\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {shouldOpenMakeApointmentDialog && (\r\n        <MakeAppointment\r\n          open={shouldOpenMakeApointmentDialog}\r\n          candidate={candidate}\r\n          handleDialogClose={() => setShouldOpenMakeApointmentDialog(false)}\r\n          handleClose={handleClose}\r\n          setCandidate={setCandidate}\r\n          handleMakeApointment={handleMakeApointment}\r\n        />\r\n      )}\r\n      {shouldOpenRefuseDialog && (\r\n        <RefuseDialog\r\n          open={shouldOpenRefuseDialog}\r\n          candidate={candidate}\r\n          handleDialogClose={() => setShouldOpenRefuseDialog(false)}\r\n          setCandidate={setCandidate}\r\n          handleRefuse={handleRefuse}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveCadidate\\CandidateProfileView.jsx",["1062","1063"],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\RefuseDialog.jsx",["1064","1065","1066"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function RefuseDialog(props) {\r\n  const { open, candidate, handleRefuse, handleCloseDialog, setCandidate } = props;\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        Từ chối\r\n        <Box className=\"icon-close\" onClick={handleCloseDialog}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <ValidatorForm onSubmit={() => handleRefuse()} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '0 20px' }}>\r\n          <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n            <Grid item xs={12} md={12}>\r\n              <TextValidator\r\n                label=\"Lý do từ chối\"\r\n                multiline\r\n                minRows={4}\r\n                maxRows={10}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={candidate?.refusalReason}\r\n                onChange={(event) =>\r\n                  setCandidate({ ...candidate, refusalReason: event.target.value })\r\n                }\r\n                validators={['required']}\r\n                errorMessages={['Vui lòng nhập trường này']}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleCloseDialog}>\r\n              Hủy\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setCandidate({ ...candidate, status: 6 })}\r\n            >\r\n              Lưu\r\n            </Button>\r\n          </>\r\n        </DialogActions>\r\n      </ValidatorForm>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveCadidate\\RefuseDialog.jsx",["1067","1068","1069"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function RefuseDialog(props) {\r\n  const { open, candidate, handleRefuse, handleCloseDialog, setCandidate } = props;\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        Từ chối\r\n        <Box className=\"icon-close\" onClick={handleCloseDialog}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <ValidatorForm onSubmit={() => handleRefuse()} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '0 20px' }}>\r\n          <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n            <Grid item xs={12} md={12}>\r\n              <TextValidator\r\n                label=\"Lý do không đạt\"\r\n                multiline\r\n                minRows={4}\r\n                maxRows={10}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={candidate?.refusalReason}\r\n                onChange={(event) =>\r\n                  setCandidate({ ...candidate, refusalReason: event.target.value })\r\n                }\r\n                validators={['required']}\r\n                errorMessages={['Vui lòng nhập trường này']}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleCloseDialog}>\r\n              Hủy\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setCandidate({ ...candidate, status: 6 })}\r\n            >\r\n              Lưu\r\n            </Button>\r\n          </>\r\n        </DialogActions>\r\n      </ValidatorForm>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CandidateProfile\\MakeAppointment.jsx",["1070","1071"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nexport default function MakeAppointment(props) {\r\n  const { open, handleDialogClose, candidate, setCandidate, handleMakeApointment } = props;\r\n\r\n  const firstRender = useRef(false);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      interviewer: candidate.id ? candidate?.interviewer : '',\r\n      interviewDate: candidate.id ? candidate?.interviewDate : null,\r\n    },\r\n    enableReinitialize: true,\r\n    validateOnChange: false,\r\n    validateOnBlur: false,\r\n    validationSchema: Yup.object({\r\n      interviewer: Yup.string()\r\n        .matches(\r\n          /^[0-9a-zA-Z].{5,100}$/,\r\n          'Họ tên người hẹn phải lớn hơn 5 kí tự và nhỏ hơn 100 kí tự'\r\n        )\r\n        .required('Vui lòng nhập trường này'),\r\n      interviewDate: Yup.date()\r\n        .nullable()\r\n        .typeError('Sai định dạng ngày!')\r\n        .required('Vui lòng nhập trường này'),\r\n    }),\r\n    onSubmit: (values) => {\r\n      setCandidate({\r\n        ...candidate,\r\n        interviewDate: values.interviewDate,\r\n        interviewer: values.interviewer,\r\n        status: 18,\r\n      });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      if (candidate.status === 18) {\r\n        handleMakeApointment();\r\n      }\r\n    } else {\r\n      firstRender.current = true;\r\n    }\r\n  }, [candidate]);\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        Hẹn lịch phỏng vấn\r\n        <Box className=\"icon-close\" onClick={handleDialogClose}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <form onSubmit={formik.handleSubmit} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '0 20px' }}>\r\n          <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n            <Grid container item xs={12} md={12} spacing={2}>\r\n              <Grid item xs={6} md={6}>\r\n                <TextField\r\n                  label=\"Họ và tên người hẹn\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"interviewer\"\r\n                  value={formik.values?.interviewer}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.interviewer && formik.touched.interviewer}\r\n                  helperText={formik.errors.interviewer}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={6}>\r\n                <LocalizationProvider dateAdapter={AdapterDayjs} fullWidth>\r\n                  <DateTimePicker\r\n                    label=\"Ngày hẹn\"\r\n                    name=\"interviewDate\"\r\n                    inputFormat={'DD/MM/YYYY hh:mm A'}\r\n                    value={formik.values?.interviewDate || null}\r\n                    onChange={(value) => {\r\n                      if (value) {\r\n                        formik.setFieldValue('interviewDate', new Date(value));\r\n                      }\r\n                    }}\r\n                    renderInput={(params) => {\r\n                      return (\r\n                        <TextField\r\n                          {...params}\r\n                          format={'DD/MM/YYYY hh:mm A'}\r\n                          type=\"date\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          error={formik.errors.interviewDate && formik.touched.interviewDate}\r\n                          helperText={formik.errors.interviewDate}\r\n                        />\r\n                      );\r\n                    }}\r\n                  />\r\n                </LocalizationProvider>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleDialogClose}>\r\n            Hủy\r\n          </Button>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            Thêm lịch hẹn\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveEmployee\\ApproveEmployeeRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\EmployeeRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Contract\\ContractRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\TimeKeeping\\TimeKeepingRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveEmployee\\ApproveEmployee.jsx",["1072"],"import React, { useEffect, useState } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport { Breadcrumb } from 'app/components';\r\nimport MaterialTable from 'material-table';\r\nimport { getListEmployee } from './ApproveEmployeeService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { toast } from 'react-toastify';\r\nimport { checkStatus } from 'app/constant';\r\nimport EmployeeView from './EmployeeView';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\n\r\nexport default function ApproveEmployee() {\r\n  const [listEmployee, setListEmployee] = useState([]);\r\n  const [shouldOpenViewDialog, setShouldOpenViewDialog] = useState(false);\r\n  const [item, setItem] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '3%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      field: 'action',\r\n      render: (rowData) => (\r\n        <>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setShouldOpenViewDialog(true);\r\n              setItem(rowData);\r\n            }}\r\n          >\r\n            <RemoveRedEyeIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Mã hồ sơ',\r\n      field: 'code',\r\n      render: (rowData) => rowData?.code,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Họ và tên',\r\n      field: 'fullName',\r\n      render: (rowData) => rowData?.fullName,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Email',\r\n      field: 'email',\r\n      render: (rowData) => rowData?.email,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'SĐT',\r\n      field: 'phone',\r\n      render: (rowData) => rowData?.phone,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      field: 'status',\r\n      render: (rowData) => {\r\n        let message = checkStatus(rowData.status).message;\r\n        let color = checkStatus(rowData.status).color;\r\n        return <div className={color}>{message}</div>;\r\n      },\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, []);\r\n\r\n  const updatePageData = () => {\r\n    getListEmployee()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          setListEmployee(res.data.data.filter((item) => item.status === 2));\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShouldOpenViewDialog(false);\r\n    updatePageData();\r\n    setItem({});\r\n  };\r\n  return (\r\n    <>\r\n      <Box style={{ margin: 20 }}>\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: 'Phê duyệt', path: '/leader' },\r\n            { name: 'Phê duyệt hồ sơ nhân viên' },\r\n          ]}\r\n        />\r\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              updatePageData();\r\n            }}\r\n          >\r\n            <LoopIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div>\r\n          <MaterialTable\r\n            title=\"Danh sách hồ sơ nhân viên\"\r\n            columns={columns}\r\n            data={listEmployee}\r\n            options={{\r\n              sorting: false,\r\n              maxBodyHeight: '60vh',\r\n              draggable: false,\r\n              pageSize: 10,\r\n              pageSizeOptions: [10, 20, 50],\r\n              headerStyle: {\r\n                textAlign: 'center',\r\n              },\r\n            }}\r\n            isLoading={loading}\r\n            localization={{\r\n              toolbar: {\r\n                searchTooltip: 'Tìm kiếm',\r\n                searchPlaceholder: 'Tìm kiếm',\r\n              },\r\n              pagination: {\r\n                labelDisplayedRows: '{from}-{to} của {count}',\r\n                labelRowsSelect: 'hàng',\r\n                labelRowsPerPage: 'Số hàng mỗi trang:',\r\n                firstAriaLabel: 'Trang đầu',\r\n                firstTooltip: 'Trang đầu',\r\n                previousAriaLabel: 'Trang trước',\r\n                previousTooltip: 'Trang trước',\r\n                nextAriaLabel: 'Trang sau',\r\n                nextTooltip: 'Trang sau',\r\n                lastAriaLabel: 'Trang cuối',\r\n                lastTooltip: 'Trang cuối',\r\n              },\r\n              body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n            }}\r\n          />\r\n        </div>\r\n        {shouldOpenViewDialog && (\r\n          <EmployeeView\r\n            open={shouldOpenViewDialog}\r\n            item={item}\r\n            handleClose={handleClose}\r\n            setItem={setItem}\r\n          />\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\Employee.jsx",["1073"],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\TimeKeeping\\TimeKeeping.jsx",["1074"],"import React, { useEffect, useState } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport { Breadcrumb } from 'app/components';\r\nimport MaterialTable from 'material-table';\r\nimport { getListEmployee } from './TimeKeepingService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { toast } from 'react-toastify';\r\nimport TimeKeepingTable from './TimeKeepingTable';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\n\r\nexport default function Employee() {\r\n  const [listEmployee, setListEmployee] = useState([]);\r\n  const [shouldOpenTimeKeepingTable, setShouldOpenTimeKeepingTable] = useState(false);\r\n  const [item, setItem] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '3%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      field: 'action',\r\n      render: (rowData) => (\r\n        <>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setShouldOpenTimeKeepingTable(true);\r\n              setItem(rowData);\r\n            }}\r\n          >\r\n            <RemoveRedEyeIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Mã nhân viên',\r\n      field: 'code',\r\n      render: (rowData) => rowData?.code,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Họ và tên',\r\n      field: 'name',\r\n      render: (rowData) => rowData?.fullName,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Email',\r\n      field: 'email',\r\n      render: (rowData) => rowData?.email,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Số điện thoại',\r\n      field: 'phone',\r\n      render: (rowData) => rowData?.phone,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, []);\r\n\r\n  const updatePageData = () => {\r\n    getListEmployee()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          setListEmployee(res.data.data.filter((item) => item.status === 12 || item.status === 14));\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShouldOpenTimeKeepingTable(false);\r\n    setItem({});\r\n    updatePageData();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box style={{ margin: 20 }}>\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: 'Danh sách danh mục', path: '/manage' },\r\n            { name: 'Danh sách chấm công nhân viên' },\r\n          ]}\r\n        />\r\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              updatePageData();\r\n            }}\r\n          >\r\n            <LoopIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div>\r\n          <MaterialTable\r\n            title=\"Danh sách nhân viên\"\r\n            columns={columns}\r\n            data={listEmployee}\r\n            options={{\r\n              sorting: false,\r\n              maxBodyHeight: '60vh',\r\n              pageSize: 10,\r\n              pageSizeOptions: [10, 20, 50],\r\n              draggable: false,\r\n              headerStyle: {\r\n                textAlign: 'center',\r\n              },\r\n            }}\r\n            isLoading={loading}\r\n            localization={{\r\n              toolbar: {\r\n                searchTooltip: 'Tìm kiếm',\r\n                searchPlaceholder: 'Tìm kiếm',\r\n              },\r\n              pagination: {\r\n                labelDisplayedRows: '{from}-{to} của {count}',\r\n                labelRowsSelect: 'hàng',\r\n                labelRowsPerPage: 'Số hàng mỗi trang:',\r\n                firstAriaLabel: 'Trang đầu',\r\n                firstTooltip: 'Trang đầu',\r\n                previousAriaLabel: 'Trang trước',\r\n                previousTooltip: 'Trang trước',\r\n                nextAriaLabel: 'Trang sau',\r\n                nextTooltip: 'Trang sau',\r\n                lastAriaLabel: 'Trang cuối',\r\n                lastTooltip: 'Trang cuối',\r\n              },\r\n              body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n            }}\r\n          />\r\n        </div>\r\n      </Box>\r\n      {shouldOpenTimeKeepingTable && (\r\n        <TimeKeepingTable open={shouldOpenTimeKeepingTable} item={item} handleClose={handleClose} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Contract\\Contract.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\TimeKeeping\\TimeKeepingService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\EmployeeService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveEmployee\\ApproveEmployeeService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Contract\\ContractService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveEmployee\\EmployeeView.jsx",["1075"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport moment from 'moment';\r\nimport { editEmployee } from './ApproveEmployeeService';\r\nimport ConfirmationDialog from '../../components/ConfirmationDialog';\r\nimport RequestDialog from './RequestDialog';\r\nimport './EmployeeView.scss';\r\n// import ContractDialog from './ContractDialog';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function EmployeeView(props) {\r\n  const { open, handleClose, item, setItem } = props;\r\n  // const [shouldOpenContractDialog, setShouldOpenContractDialog] = useState(false);\r\n  const [shouldOpenConfirmDialog, setShouldOpenConfirmDialog] = useState(false);\r\n  const [shouldOpenRequestDialog, setShouldOpenRequestDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (item.status === 3) {\r\n      editEmployee(item)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Duyệt hồ sơ thành công');\r\n            handleClose();\r\n          } else {\r\n            toast.warning('Lỗi xác thực');\r\n            handleClose();\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra'));\r\n    } else if (item.status === 10) {\r\n      editEmployee(item)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Yêu cầu chỉnh sửa hồ sơ thành công');\r\n            handleClose();\r\n          } else {\r\n            toast.warning('Lỗi xác thực');\r\n            handleClose();\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra'));\r\n    }\r\n  }, [item.status]);\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} fullWidth maxWidth={'md'}>\r\n        <DialogTitle>\r\n          <Box className=\"icon-close\" onClick={handleClose}>\r\n            <IconButton color=\"error\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent style={{ padding: '30px 20px 30px' }}>\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            style={{ fontFamily: '\"Times New Roman\", Times, serif', fontSize: '18px' }}\r\n          >\r\n            <Grid\r\n              item\r\n              container\r\n              xs={12}\r\n              style={{ fontSize: '30px', marginBottom: 40 }}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              Hồ sơ nhân viên\r\n            </Grid>\r\n            <Grid item container xs={8} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Mã nhân viên:\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {item?.code}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Họ và Tên:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.fullName}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Giới tính:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.sex}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Ngày sinh:\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {moment(item?.dateOfBirth).format('DD/MM/YYYY')}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Email:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.email}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  SĐT:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.phone}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              xs={3}\r\n              spacing={1}\r\n              justifyContent=\"flex-end\"\r\n              style={{ marginRight: 60, marginBottom: 20 }}\r\n            >\r\n              {item?.image ? (\r\n                <img\r\n                  src={item?.image}\r\n                  alt=\"\"\r\n                  style={{ height: '150px', border: '1px solid #000' }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"https://icons.veryicon.com/png/o/internet--web/55-common-web-icons/person-4.png\"\r\n                  alt=\"\"\r\n                  style={{ height: '150px', border: '1px solid #000' }}\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item className=\"fw-600 mr-10\">\r\n                Địa chỉ:\r\n              </Grid>\r\n              <Grid item xs={7}>\r\n                {item?.address}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Trình độ học vấn:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.education}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Chuyên ngành:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.major}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Số CCCD:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.numberIdentityCard}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Ngày cấp:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {moment(item?.issuedDateIdentityCard).format('DD/MM/YYYY')}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Nơi cấp:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.placeOfGrantIdentityCard}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={4}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Dân tộc:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.nation}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={4}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Tôn giáo:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.religion}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Số bảo hiểm y tế:\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {item?.numberMedicalInsurance}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Ngày cấp:\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {item?.issuedDateMedicalInsurance\r\n                    ? moment(item?.issuedDateMedicalInsurance).format('DD/MM/YYYY')\r\n                    : ''}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Nơi cấp:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.placeOfIssueMedicalInsurance}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Số bảo hiểm xã hội:\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {item?.numberSocialInsurance}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Ngày cấp:\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {item?.issuedDateSocialInsurance\r\n                    ? moment(item?.issuedDateSocialInsurance).format('DD/MM/YYYY')\r\n                    : ''}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Nơi cấp:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.placeOfIssueSocialInsurance}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Phòng ban:\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  {item?.department?.name}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Vị trí công việc:\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {item?.positions[0]?.name}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Bằng cấp:\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {item?.certificate?.name}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Danh sách chứng chỉ:\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <table style={{ width: '85%' }} className=\"table\">\r\n                    <tr className=\"tr\">\r\n                      <th style={{ textAlign: 'left', width: '5%' }}>STT</th>\r\n                      <th style={{ textAlign: 'left', width: '20%' }}>Tên chứng chỉ</th>\r\n                      <th style={{ textAlign: 'left', width: '20%' }}>Mô tả</th>\r\n                    </tr>\r\n                    {item?.languages.map((item, index) => (\r\n                      <>\r\n                        <tr className=\"tr\">\r\n                          <td>{index + 1}</td>\r\n                          <td>{item?.name}</td>\r\n                          <td>{item?.description}</td>\r\n                        </tr>\r\n                      </>\r\n                    ))}\r\n                  </table>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n            Hủy\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setShouldOpenRequestDialog(true)}\r\n          >\r\n            Yêu cầu chỉnh sửa\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setShouldOpenConfirmDialog(true)}\r\n          >\r\n            Phê duyệt\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* {shouldOpenContractDialog && (\r\n        <ContractDialog\r\n          open={shouldOpenContractDialog}\r\n          item={item}\r\n          setItem={setItem}\r\n          handleCloseDialog={() => setShouldOpenContractDialog(false)}\r\n        />\r\n      )} */}\r\n      {shouldOpenConfirmDialog && (\r\n        <ConfirmationDialog\r\n          title=\"Xác nhận\"\r\n          text=\"Bạn có muốn phê duyệt hồ sơ nhân viên này?\"\r\n          open={shouldOpenConfirmDialog}\r\n          onConfirmDialogClose={handleClose}\r\n          onYesClick={() => setItem({ ...item, status: 3 })}\r\n          Yes=\"Đồng ý\"\r\n          No=\"Hủy\"\r\n        />\r\n      )}\r\n      {shouldOpenRequestDialog && (\r\n        <RequestDialog\r\n          open={shouldOpenRequestDialog}\r\n          handleCloseDialog={() => setShouldOpenRequestDialog(false)}\r\n          item={item}\r\n          setItem={setItem}\r\n          handleRequest={() => setItem({ ...item, status: 10 })}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\CandidateTable.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\EmployeeDialog.jsx",["1076","1077","1078","1079","1080","1081"],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\RequestDialog.jsx",["1082","1083","1084"],"import React, { useEffect } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n\r\nexport default function RequestDialog(props) {\r\n  const { open, item, handleRequest, handleCloseDialog, setItem } = props;\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        Yêu cầu chỉnh sửa\r\n        <Box className=\"icon-close\" onClick={handleCloseDialog}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <ValidatorForm onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '0 20px' }}>\r\n          <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n            <Grid item xs={12} md={12}>\r\n              <TextValidator\r\n                label=\"Nội dung yêu cầu\"\r\n                multiline\r\n                minRows={4}\r\n                maxRows={10}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={item?.additionalRequestContent}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                validators={['required']}\r\n                errorMessages={['Vui lòng nhập trường này']}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleCloseDialog}>\r\n              Đóng\r\n            </Button>\r\n          </>\r\n        </DialogActions>\r\n      </ValidatorForm>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\TimeKeeping\\TimeKeepingTable.jsx",["1085","1086","1087"],"import React, { useEffect, useState } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport { Breadcrumb } from 'app/components';\r\nimport MaterialTable from 'material-table';\r\nimport { getListTimeKeeping } from './TimeKeepingService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { toast } from 'react-toastify';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { months } from 'app/constant';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport ConfirmationDialog from '../../components/ConfirmationDialog';\r\nimport { deleteListTimeKeeping } from './TimeKeepingService';\r\nimport TimeKeepingDialog from './TimeKeepingDialog';\r\n\r\nexport default function TimeKeepingTable(props) {\r\n  const { open, handleClose, item } = props;\r\n  const [listTimeKeeping, setListTimeKeeping] = useState([]);\r\n  const [timeKeeping, setTimeKeeping] = useState({});\r\n  const [shouldOpenDialog, setShouldOpenDialog] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [month, setMonth] = useState('');\r\n  const [year, setYear] = useState('');\r\n  const [shouldOpenConfirmDialog, setShouldOpenConfirmDialog] = useState(false);\r\n\r\n  console.log(item);\r\n\r\n  useEffect(() => {\r\n    setTimeKeeping({ ...timeKeeping, employee: item });\r\n  }, [shouldOpenDialog]);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '2%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '2%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      field: 'action',\r\n      render: (rowData) => (\r\n        <>\r\n          <IconButton\r\n            color=\"success\"\r\n            onClick={() => {\r\n              setTimeKeeping(rowData);\r\n              setShouldOpenDialog(true);\r\n            }}\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"error\"\r\n            onClick={() => {\r\n              setTimeKeeping(rowData);\r\n              setShouldOpenConfirmDialog(true);\r\n            }}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Mã chấm công',\r\n      field: 'code',\r\n      render: (rowData) => rowData?.code,\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Năm',\r\n      field: 'year',\r\n      render: (rowData) => rowData?.year,\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tháng',\r\n      field: 'month',\r\n      render: (rowData) => rowData?.month,\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Số ngày đi làm',\r\n      field: 'numberWorkDay',\r\n      render: (rowData) => rowData?.numberWorkDay,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Số ngày nghỉ (có phép)',\r\n      field: 'numberDayOff',\r\n      render: (rowData) => rowData?.numberDayOff,\r\n      cellStyle: {\r\n        width: '8%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '8%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Số ngày nghỉ (không phép)',\r\n      field: 'numberDayUnexcusedLeave',\r\n      render: (rowData) => rowData?.numberDayUnexcusedLeave,\r\n      cellStyle: {\r\n        width: '8%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '8%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Số giờ làm thêm',\r\n      field: 'numberOvertimeHours',\r\n      render: (rowData) => rowData?.numberOvertimeHours,\r\n      cellStyle: {\r\n        width: '6%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '6%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, []);\r\n\r\n  const updatePageData = () => {\r\n    let searchObject = {};\r\n    searchObject.pageIndex = 1;\r\n    searchObject.pageSize = 1000;\r\n    searchObject.employeeId = item?.id;\r\n    if (month) {\r\n      searchObject.month = month?.value;\r\n    }\r\n\r\n    if (year) {\r\n      searchObject.year = Number(year);\r\n    }\r\n\r\n    getListTimeKeeping(searchObject)\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          setListTimeKeeping(res.data?.data?.content);\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteListTimeKeeping(timeKeeping?.id)\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          toast.success('Xóa bản ghi chấm công thành công');\r\n          setTimeKeeping({});\r\n          updatePageData();\r\n        } else {\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n        setShouldOpenConfirmDialog(false);\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setShouldOpenConfirmDialog(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} fullWidth maxWidth={'lg'}>\r\n        <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n          Danh sách chấm công của nhân viên {item?.fullName}\r\n          <Box className=\"icon-close\" onClick={handleClose}>\r\n            <IconButton color=\"error\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box style={{ margin: 20 }}>\r\n            <Grid container spacing={1} style={{ margin: '20px 0' }}>\r\n              <Grid item xs={7}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"medium\"\r\n                  style={{ padding: '5px 20px' }}\r\n                  onClick={() => setShouldOpenDialog(true)}\r\n                >\r\n                  Thêm\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Autocomplete\r\n                  options={months}\r\n                  getOptionLabel={(option) => option?.name || ''}\r\n                  value={month}\r\n                  onChange={(event, newValue) => setMonth(newValue)}\r\n                  componentsProps={{ paper: { elevation: 8 } }}\r\n                  fullWidth\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      label=\"Tháng\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <TextField\r\n                  label=\"Năm\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"address\"\r\n                  value={year}\r\n                  onChange={(event) => setYear(event.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"medium\"\r\n                  style={{ padding: '5px 20px' }}\r\n                  onClick={updatePageData}\r\n                >\r\n                  Lọc\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <MaterialTable\r\n              title=\"Danh sách chấm công\"\r\n              columns={columns}\r\n              data={listTimeKeeping}\r\n              options={{\r\n                sorting: false,\r\n                maxBodyHeight: '40vh',\r\n                pageSize: 10,\r\n                pageSizeOptions: [10, 20, 50],\r\n                draggable: false,\r\n                headerStyle: {\r\n                  textAlign: 'center',\r\n                },\r\n              }}\r\n              isLoading={loading}\r\n              localization={{\r\n                toolbar: {\r\n                  searchTooltip: 'Tìm kiếm',\r\n                  searchPlaceholder: 'Tìm kiếm',\r\n                },\r\n                pagination: {\r\n                  labelDisplayedRows: '{from}-{to} của {count}',\r\n                  labelRowsSelect: 'hàng',\r\n                  labelRowsPerPage: 'Số hàng mỗi trang:',\r\n                  firstAriaLabel: 'Trang đầu',\r\n                  firstTooltip: 'Trang đầu',\r\n                  previousAriaLabel: 'Trang trước',\r\n                  previousTooltip: 'Trang trước',\r\n                  nextAriaLabel: 'Trang sau',\r\n                  nextTooltip: 'Trang sau',\r\n                  lastAriaLabel: 'Trang cuối',\r\n                  lastTooltip: 'Trang cuối',\r\n                },\r\n                body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n              }}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n            Đóng\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {shouldOpenConfirmDialog && (\r\n        <ConfirmationDialog\r\n          title=\"Xác nhận\"\r\n          text=\"Bạn có muốn xóa kế hoạch này?\"\r\n          open={shouldOpenConfirmDialog}\r\n          onConfirmDialogClose={() => setShouldOpenConfirmDialog(false)}\r\n          onYesClick={handleDelete}\r\n          Yes=\"Đồng ý\"\r\n          No=\"Hủy\"\r\n        />\r\n      )}\r\n      {shouldOpenDialog && (\r\n        <TimeKeepingDialog\r\n          open={shouldOpenDialog}\r\n          hanldeCloseDialog={() => {\r\n            setShouldOpenDialog(false);\r\n            setTimeKeeping({});\r\n          }}\r\n          handleClose={handleClose}\r\n          timeKeeping={timeKeeping}\r\n          setTimeKeeping={setTimeKeeping}\r\n          item={item}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\EmployeeView.jsx",["1088"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport moment from 'moment';\r\nimport { editEmployee } from './EmployeeService';\r\nimport ConfirmationDialog from '../../components/ConfirmationDialog';\r\nimport './EmployeeView.scss';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function EmployeeView(props) {\r\n  const { open, handleClose, item, setItem } = props;\r\n  const [shouldOpenConfirmDialog, setShouldOpenConfirmDialog] = useState(false);\r\n\r\n  console.log(item);\r\n\r\n  useEffect(() => {\r\n    if (item.status === 2) {\r\n      editEmployee(item)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Hồ sơ đã được trình lên lãnh đạo');\r\n            handleClose();\r\n          } else {\r\n            toast.warning('Lỗi xác thực');\r\n            handleClose();\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra'));\r\n    }\r\n  }, [item.status]);\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} fullWidth maxWidth={'md'}>\r\n        <DialogTitle>\r\n          <Box className=\"icon-close\" onClick={handleClose}>\r\n            <IconButton color=\"error\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent style={{ padding: '30px 20px 30px' }}>\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            style={{ fontFamily: '\"Times New Roman\", Times, serif', fontSize: '18px' }}\r\n          >\r\n            <Grid\r\n              item\r\n              container\r\n              xs={12}\r\n              style={{ fontSize: '30px', marginBottom: 40 }}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              Hồ sơ nhân viên\r\n            </Grid>\r\n            <Grid item container xs={8} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Mã nhân viên:\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {item?.code}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Họ và Tên:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.fullName}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Giới tính:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.sex}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Ngày sinh:\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {moment(item?.dateOfBirth).format('DD/MM/YYYY')}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Email:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.email}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  SĐT:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.phone}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              xs={3}\r\n              spacing={1}\r\n              justifyContent=\"flex-end\"\r\n              style={{ marginRight: 60, marginBottom: 20 }}\r\n            >\r\n              {item?.image ? (\r\n                <img\r\n                  src={item?.image}\r\n                  alt=\"\"\r\n                  style={{ height: '150px', border: '1px solid #000' }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"https://icons.veryicon.com/png/o/internet--web/55-common-web-icons/person-4.png\"\r\n                  alt=\"\"\r\n                  style={{ height: '150px', border: '1px solid #000' }}\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item className=\"fw-600 mr-10\">\r\n                Địa chỉ:\r\n              </Grid>\r\n              <Grid item xs={7}>\r\n                {item?.address}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Trình độ học vấn:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.education}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Chuyên ngành:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.major}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Số CCCD:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.numberIdentityCard}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Ngày cấp:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {moment(item?.issuedDateIdentityCard).format('DD/MM/YYYY')}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Nơi cấp:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.placeOfGrantIdentityCard}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={4}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Dân tộc:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.nation}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={4}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Tôn giáo:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.religion}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Số bảo hiểm y tế:\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {item?.numberMedicalInsurance}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Ngày cấp:\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {item?.issuedDateMedicalInsurance\r\n                    ? moment(item?.issuedDateMedicalInsurance).format('DD/MM/YYYY')\r\n                    : ''}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Nơi cấp:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.placeOfIssueMedicalInsurance}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Số bảo hiểm xã hội:\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {item?.numberSocialInsurance}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={6}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Ngày cấp:\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {item?.issuedDateSocialInsurance\r\n                    ? moment(item?.issuedDateSocialInsurance).format('DD/MM/YYYY')\r\n                    : ''}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Nơi cấp:\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  {item?.placeOfIssueSocialInsurance}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1}>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Phòng ban:\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  {item?.department?.name}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Vị trí công việc:\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {item?.positions[0]?.name}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Bằng cấp:\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {item?.certificate?.name}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12}>\r\n                <Grid item className=\"fw-600 mr-10\">\r\n                  Danh sách chứng chỉ:\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <table style={{ width: '85%' }} className=\"table\">\r\n                    <tr className=\"tr\">\r\n                      <th style={{ textAlign: 'left', width: '5%' }}>STT</th>\r\n                      <th style={{ textAlign: 'left', width: '20%' }}>Tên chứng chỉ</th>\r\n                      <th style={{ textAlign: 'left', width: '20%' }}>Mô tả</th>\r\n                    </tr>\r\n                    {item?.languages.map((item, index) => (\r\n                      <>\r\n                        <tr className=\"tr\">\r\n                          <td>{index + 1}</td>\r\n                          <td>{item?.name}</td>\r\n                          <td>{item?.description}</td>\r\n                        </tr>\r\n                      </>\r\n                    ))}\r\n                  </table>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n            Hủy\r\n          </Button>\r\n          {item?.status === 12 || item?.status === 2 || item?.status === 3 ? (\r\n            ''\r\n          ) : (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setShouldOpenConfirmDialog(true)}\r\n              disabled={item?.status === 12 || item?.status === 2 || item?.status === 3}\r\n            >\r\n              Trình lãnh đạo\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n      {shouldOpenConfirmDialog && (\r\n        <ConfirmationDialog\r\n          title=\"Xác nhận\"\r\n          text=\"Bạn có muốn trình lãnh đạo hồ sơ này?\"\r\n          open={shouldOpenConfirmDialog}\r\n          onConfirmDialogClose={() => setShouldOpenConfirmDialog(false)}\r\n          onYesClick={() => setItem({ ...item, status: 2 })}\r\n          Yes=\"Đồng ý\"\r\n          No=\"Hủy\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Contract\\ContractDialog.jsx",["1089","1090"],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveEmployee\\ContractDialog.jsx",["1091","1092"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport moment from 'moment';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './EmployeeView.scss';\r\nimport { TextField } from '@mui/material';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n\r\nexport default function ContractDialog(props) {\r\n  const { open, item, handleApprove, handleCloseDialog, setItem } = props;\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      nameLeader: '',\r\n      postionLeader: '',\r\n      signingDate: null,\r\n      contractEffect: null,\r\n      basicSalary: '',\r\n      hourlyRate: '',\r\n    },\r\n    enableReinitialize: true,\r\n    validateOnChange: false,\r\n    validateOnBlur: false,\r\n    validationSchema: Yup.object({\r\n      code: Yup.string()\r\n        .matches(/^MaHĐ[0-9]{4}$/, 'Mã hợp đồng chưa đúng format VD:(MaHĐ9999)')\r\n        .required('Vui lòng nhập trường này'),\r\n      nameLeader: Yup.string().required('Vui lòng nhập trường này'),\r\n      postionLeader: Yup.string().required('Vui lòng nhập trường này'),\r\n      signingDate: Yup.date()\r\n        .nullable()\r\n        .typeError('Sai định dạng ngày!')\r\n        .required('Vui lòng nhập trường này'),\r\n      contractEffect: Yup.date()\r\n        .nullable()\r\n        .typeError('Sai định dạng ngày!')\r\n        .required('Vui lòng nhập trường này'),\r\n      basicSalary: Yup.number()\r\n        .typeError('Số lương phải là số!')\r\n        .required('Vui lòng nhập trường này'),\r\n      hourlyRate: Yup.number()\r\n        .typeError('Số lương phải là số!')\r\n        .required('Vui lòng nhập trường này'),\r\n    }),\r\n    onSubmit: (values) => {\r\n      values.employee = item;\r\n      values.status = 4;\r\n      values.coefficientSalary = 1.5;\r\n      setItem({ ...item, contract: values, status: 12 });\r\n      handleApprove();\r\n    },\r\n  });\r\n\r\n  const handlePrint = () => {\r\n    var oldstr = document.body.innerHTML;\r\n    document.body.innerHTML = document.getElementById('contract').innerHTML;\r\n    window.print();\r\n    window.location.reload();\r\n    document.body.innerHTML = oldstr;\r\n  };\r\n\r\n  console.log(formik.values?.contractEffect - formik.values?.signingDate);\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        <Box className=\"icon-close\" onClick={handleCloseDialog}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <form onSubmit={formik.handleSubmit} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '0 20px' }} id=\"contract\">\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            style={{ fontFamily: '\"Times New Roman\", Times, serif', fontSize: '18px' }}\r\n          >\r\n            <Grid item container xs={12}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={12}\r\n                style={{ fontSize: '25px', textTransform: \"uppercase'\", fontWeight: 'bold' }}\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n              >\r\n                Cộng hòa xã hội chủ nghĩa Việt Nam\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={12}\r\n                style={{ fontSize: '22px' }}\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n              >\r\n                Độc lập - Tự do - Hạnh phúc\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={12}\r\n                style={{ fontSize: '22px', fontWeight: 'bold' }}\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n              >\r\n                *****\r\n              </Grid>\r\n              <Grid item container xs={10} spacing={1} className=\"pd-60\">\r\n                <Grid item className=\"mr-10\">\r\n                  Mã hợp đồng:\r\n                </Grid>\r\n                <Grid item xs={3} md={3}>\r\n                  <TextField\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    name=\"code\"\r\n                    value={formik.values?.code}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.errors.code && formik.touched.code}\r\n                    helperText={formik.errors.code}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={12}\r\n                style={{\r\n                  fontSize: '30px',\r\n                  textTransform: 'uppercase',\r\n                  fontWeight: 'bold',\r\n                }}\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n              >\r\n                {' '}\r\n                Hợp đồng lao động\r\n              </Grid>\r\n              <Grid item container xs={2}></Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={8}\r\n                style={{\r\n                  marginBottom: 20,\r\n                  textAlign: 'center',\r\n                }}\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n              >\r\n                (Ban hành theo Thông tư số 21/2003/TT-BLĐTBXH ngày 22/9/2003 của Bộ Lao động –\r\n                Thương binh và Xã hội)\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={12} className=\"pd-60\" spacing={1} alignItems=\"center\">\r\n              <Grid item xs={12} md={12}>\r\n                Chúng tôi, một bên là:\r\n              </Grid>\r\n              <Grid item container xs={12} md={12}>\r\n                <Grid item className=\"mr-10\" style={{ padding: '2px 0' }}>\r\n                  Ông/Bà:\r\n                </Grid>\r\n                <Grid item xs={6} md={6}>\r\n                  <TextField\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    className=\"name\"\r\n                    name=\"nameLeader\"\r\n                    value={formik.values?.nameLeader}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.errors.nameLeader && formik.touched.nameLeader}\r\n                    helperText={formik.errors.nameLeader}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12} md={12}>\r\n                <Grid item className=\"mr-10\">\r\n                  Chức vụ:\r\n                </Grid>\r\n                <Grid item xs={6} md={6}>\r\n                  <TextField\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    name=\"postionLeader\"\r\n                    value={formik.values?.postionLeader}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.errors.postionLeader && formik.touched.postionLeader}\r\n                    helperText={formik.errors.postionLeader}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12} md={12}>\r\n                <Grid item className=\"mr-10\">\r\n                  Đại diện cho công ty:\r\n                </Grid>\r\n                <Grid item xs={6} md={6} style={{ textTransform: 'uppercase' }}>\r\n                  Công ty TNHH Oceantech\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12} md={12}>\r\n                <Grid item className=\"mr-10\">\r\n                  Địa chỉ công ty:\r\n                </Grid>\r\n                <Grid item xs={9} md={9}>\r\n                  Số 467 Nguyễn Trãi, Thanh Xuân Nam, Thanh Xuân, Hà Nội\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} md={12}>\r\n                Và một bên là:\r\n              </Grid>\r\n              <Grid item container xs={12} md={12}>\r\n                <Grid item className=\"mr-10\">\r\n                  Ông/Bà:\r\n                </Grid>\r\n                <Grid item xs={6} md={6} style={{ textTransform: 'uppercase', fontWeight: 'bold' }}>\r\n                  {item?.fullName}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12} md={12}>\r\n                <Grid item className=\"mr-10\">\r\n                  Số CCCD:\r\n                </Grid>\r\n                <Grid item xs={2} md={2} style={{ textTransform: 'uppercase', fontWeight: 'bold' }}>\r\n                  {item?.numberIdentityCard}\r\n                </Grid>\r\n                <Grid item className=\"mr-10\">\r\n                  Ngày cấp:\r\n                </Grid>\r\n                <Grid item xs={2} md={2}>\r\n                  {moment(item?.issuedDateIdentityCard).format('DD/MM/YYYY')}\r\n                </Grid>\r\n                <Grid item className=\"mr-10\">\r\n                  Nơi cấp:\r\n                </Grid>\r\n                <Grid item xs={3} md={3}>\r\n                  {item?.placeOfGrantIdentityCard}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12} md={12}>\r\n                <Grid item className=\"mr-10\">\r\n                  Địa chỉ:\r\n                </Grid>\r\n                <Grid item xs={10} md={10}>\r\n                  {item?.address}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12} md={12}>\r\n                Thỏa thuận ký kết hợp đồng lao động và cam kết làm đúng những điều khoản sau đây:\r\n              </Grid>\r\n              <Grid item container xs={12} md={12}>\r\n                <Grid item className=\"mr-10\">\r\n                  <ul className=\"dashed\">\r\n                    <span style={{ fontWeight: 'bold' }}>\r\n                      Điều 1: Thời hạn và công việc hợp đồng\r\n                    </span>\r\n                    <li>\r\n                      <span className=\"mr-10\">Bắt đầu từ</span>\r\n                      <LocalizationProvider dateAdapter={AdapterDayjs} fullWidth>\r\n                        <DatePicker\r\n                          name=\"signingDate\"\r\n                          inputFormat=\"DD/MM/YYYY\"\r\n                          value={formik.values?.signingDate || null}\r\n                          onChange={(value) => {\r\n                            if (value) {\r\n                              formik.setFieldValue('signingDate', new Date(value));\r\n                            }\r\n                          }}\r\n                          renderInput={(params) => {\r\n                            return (\r\n                              <TextField\r\n                                {...params}\r\n                                format=\"DD/MM/YYYY\"\r\n                                type=\"date\"\r\n                                variant=\"standard\"\r\n                                error={formik.errors.signingDate && formik.touched.signingDate}\r\n                                helperText={formik.errors.signingDate}\r\n                              />\r\n                            );\r\n                          }}\r\n                        />\r\n                      </LocalizationProvider>\r\n                      <span className=\"ml-10  mr-10\">đến hết</span>\r\n                      <LocalizationProvider dateAdapter={AdapterDayjs} fullWidth>\r\n                        <DatePicker\r\n                          name=\"contractEffect\"\r\n                          inputFormat=\"DD/MM/YYYY\"\r\n                          value={formik.values?.contractEffect || null}\r\n                          onChange={(value) => {\r\n                            if (value) {\r\n                              formik.setFieldValue('contractEffect', new Date(value));\r\n                            }\r\n                          }}\r\n                          renderInput={(params) => {\r\n                            return (\r\n                              <TextField\r\n                                {...params}\r\n                                format=\"DD/MM/YYYY\"\r\n                                type=\"date\"\r\n                                variant=\"standard\"\r\n                                error={\r\n                                  formik.errors.contractEffect && formik.touched.contractEffect\r\n                                }\r\n                                helperText={formik.errors.contractEffect}\r\n                              />\r\n                            );\r\n                          }}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </li>\r\n                    <li>Địa điểm làm việc tại Công ty TNHH Oceantech</li>\r\n                    <li>\r\n                      <span className=\"mr-10\">Chức vụ:</span>\r\n                      {item?.positions[0]?.name}\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"mr-10\">Phòng ban:</span>\r\n                      {item?.department?.name}\r\n                    </li>\r\n                  </ul>\r\n                </Grid>\r\n                <Grid item className=\"mr-10\" style={{ marginBottom: 20 }}>\r\n                  <ul className=\"dashed\">\r\n                    <span style={{ fontWeight: 'bold' }}>Điều 2: Chế độ làm việc</span>\r\n                    <li>\r\n                      Thời giờ làm việc 08 giờ/ngày, 44 giờ/tuần. Sẵn sàng làm thêm giờ vào ngày\r\n                      nghỉ tuỳ công việc.\r\n                    </li>\r\n                    <li>\r\n                      Được cấp phát những dụng cụ làm việc gồm: Tùy theo yêu cầu công việc, người\r\n                      lao động được cấp phát dụng cụ cần thiết.\r\n                    </li>\r\n                    <li>\r\n                      Sau khi kí hợp đồng, người lao động sẽ thử việc với mức lương 80% mức lương cơ\r\n                      bản\r\n                    </li>\r\n                  </ul>\r\n                </Grid>\r\n                <Grid item className=\"mr-10\">\r\n                  <ol className=\"number\">\r\n                    <span style={{ fontWeight: 'bold' }}>\r\n                      Điều 3: Nghĩa vụ và quyền lợi của người lao động\r\n                    </span>\r\n                    <li style={{ fontWeight: 'bold' }}>\r\n                      <span> Quyền lợi</span>\r\n                    </li>\r\n                    <ul className=\"dashed\">\r\n                      <li>Phương tiện đi lại làm việc : Tự túc.</li>\r\n                      <li>\r\n                        <span className=\"mr-10\"> Mức lương cơ bản:</span>\r\n                        <TextField\r\n                          variant=\"standard\"\r\n                          name=\"basicSalary\"\r\n                          value={\r\n                            formik.values?.basicSalary\r\n                              ? formik.values?.basicSalary.replace(\r\n                                  /\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g,\r\n                                  ','\r\n                                )\r\n                              : ''\r\n                          }\r\n                          onChange={(event) => {\r\n                            formik.setFieldValue(\r\n                              'basicSalary',\r\n                              event.target.value.replace(/,/g, '')\r\n                            );\r\n                          }}\r\n                          InputProps={{\r\n                            maxLength: 10,\r\n                            endAdornment: <InputAdornment position=\"end\">VND</InputAdornment>,\r\n                          }}\r\n                          error={formik.errors.basicSalary && formik.touched.basicSalary}\r\n                          helperText={formik.errors.basicSalary}\r\n                        />\r\n                      </li>\r\n                      <li>\r\n                        <span className=\"mr-10\">Số tiền tính cho 1h làm thêm:</span>\r\n                        <TextField\r\n                          variant=\"standard\"\r\n                          name=\"hourlyRate\"\r\n                          value={\r\n                            formik.values?.hourlyRate\r\n                              ? formik.values?.hourlyRate.replace(\r\n                                  /\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g,\r\n                                  ','\r\n                                )\r\n                              : ''\r\n                          }\r\n                          onChange={(event) => {\r\n                            formik.setFieldValue(\r\n                              'hourlyRate',\r\n                              event.target.value.replace(/,/g, '')\r\n                            );\r\n                          }}\r\n                          InputProps={{\r\n                            maxLength: 10,\r\n                            endAdornment: <InputAdornment position=\"end\">VND</InputAdornment>,\r\n                          }}\r\n                          error={formik.errors.hourlyRate && formik.touched.hourlyRate}\r\n                          helperText={formik.errors.hourlyRate}\r\n                        />\r\n                      </li>\r\n                      <li>Hình thức trả lương : Tiền mặt hoặc chuyển khoản.</li>\r\n                      <li>Được trả lương : 01 lần vào ngày 01 đến 05 hàng tháng.</li>\r\n                      <li>Tiền thưởng : Theo quy chế của Công ty.</li>\r\n                      <li>Chế độ nâng lương : Theo quy chế của Công ty.</li>\r\n                      <li>\r\n                        Chế độ nghỉ ngơi (nghỉ hàng tuần, phép năm, lễ tết...): Theo chế độ quy định\r\n                        của Nhà nước và quy chế của Công ty.\r\n                      </li>\r\n                      <li>\r\n                        Bảo hiểm xã hội, bảo hiểm y tế, bảo hiểm thất nghiệp: Theo quy định của Nhà\r\n                        nước;\r\n                      </li>\r\n                      <li>\r\n                        Chế độ đào tạo: Theo quy chế của Công ty. Trong trường hợp nhân viên được cử\r\n                        đi đào tạo thì nhân viên đó phải hoàn thành khoá học đúng thời hạn, phải cam\r\n                        kết sẽ phục vụ lâu dài cho Công ty sau khi kết thúc khoá học và được hưởng\r\n                        nguyên lương trong thời gian học, các quyền lợi khác như người đi làm. Nếu\r\n                        sau khi kết thúc khóa đào tạo mà nhân viên không tiếp tục hợp tác với Công\r\n                        ty thì nhân viên phải hoàn trả lại phí đào tạo và các khoản chế độ đã được\r\n                        nhận trong thời gian đào tạo.\r\n                      </li>\r\n                      <li>Những thỏa thuận khác: Theo quy chế của Công ty.</li>\r\n                    </ul>\r\n                    <li style={{ fontWeight: 'bold' }}>\r\n                      <span> Nghĩa vụ:</span>\r\n                    </li>\r\n                    <ul className=\"dashed\">\r\n                      <li>Hoàn thành những công việc đã cam kết trong hợp đồng lao động.</li>\r\n                      <li>\r\n                        Chấp hành lệnh điều hành sản xuất - kinh doanh, nội quy kỷ luật lao động, an\r\n                        toàn lao động ...\r\n                      </li>\r\n                      <li>Bồi thường vi phạm và vật chất: theo quy định của Công ty.</li>\r\n                    </ul>\r\n                  </ol>\r\n                </Grid>\r\n                <Grid item className=\"mr-10\">\r\n                  <ol className=\"number\">\r\n                    <span style={{ fontWeight: 'bold' }}>\r\n                      Điều 4: Nghĩa vụ và quyền hạn của người sử dụng lao động\r\n                    </span>\r\n                    <li style={{ fontWeight: 'bold' }}>\r\n                      <span> Nghĩa vụ:</span>\r\n                    </li>\r\n                    <ul className=\"dashed\">\r\n                      <li>\r\n                        Bảo đảm việc làm và thực hiện đầy đủ những điều đã cam kết trong hợp đồng\r\n                        lao động.\r\n                      </li>\r\n                      <li>\r\n                        Thanh toán đầy đủ, đúng thời hạn các chế độ và quyền lợi cho người lao động\r\n                        theo hợp đồng lao động, thỏa ước lao động tập thể (nếu có).\r\n                      </li>\r\n                    </ul>\r\n                    <li style={{ fontWeight: 'bold' }}>\r\n                      <span> Quyền hạn:</span>\r\n                    </li>\r\n                    <ul className=\"dashed\">\r\n                      <li>\r\n                        Điều hành người lao động hoàn thành công việc theo hợp đồng (bố trí, điều\r\n                        chuyển, tạm ngừng việc).\r\n                      </li>\r\n                      <li>\r\n                        Tạm hoãn, chấm dứt hợp đồng lao động, kỷ luật người lao động theo quy định\r\n                        của pháp luật, thỏa ước lao động tập thể (nếu có) và nội quy lao động của\r\n                        doanh nghiệp.\r\n                      </li>\r\n                    </ul>\r\n                  </ol>\r\n                </Grid>\r\n                <Grid item className=\"mr-10\">\r\n                  <ul className=\"dashed\">\r\n                    <span style={{ fontWeight: 'bold' }}>Điều 5: Điều khoản thi hành</span>\r\n                    <li>\r\n                      Những vấn đề về lao động không ghi trong hợp đồng lao động này thì áp dụng qui\r\n                      định của thỏa ước tập thể, trường hợp chưa có thỏa ước tập thể thì áp dụng quy\r\n                      định của pháp luật lao động.\r\n                    </li>\r\n                    <li>\r\n                      Hợp đồng lao động được làm thành 02 bản có giá trị ngang nhau, mỗi bên giữ 01\r\n                      bản và có hiệu lực từ{' '}\r\n                      {formik.values?.signingDate\r\n                        ? moment(formik.values?.signingDate).format('DD/MM/YYYY')\r\n                        : '.../.../...'}\r\n                      . Khi hai bên ký kết phụ lục hợp đồng lao động thì nội dung của phụ lục hợp\r\n                      đồng lao động cũng có giá trị như các nội dung của bản hợp đồng lao động này.\r\n                    </li>\r\n                  </ul>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              xs={12}\r\n              className=\"pd-60\"\r\n              spacing={1}\r\n              alignItems=\"center\"\r\n              style={{ marginBottom: 20 }}\r\n            >\r\n              <Grid item xs={7}></Grid>\r\n              <Grid item xs={5}>\r\n                Hà Nội, ngày {new Date().getDate()} tháng {new Date().getMonth() + 1} năm{' '}\r\n                {new Date().getFullYear()}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              xs={12}\r\n              className=\"pd-60\"\r\n              spacing={0.5}\r\n              alignItems=\"center\"\r\n              style={{ marginBottom: 100 }}\r\n            >\r\n              <Grid item xs={2}></Grid>\r\n              <Grid item xs={4} style={{ fontWeight: 'bold' }}>\r\n                Người lao động\r\n              </Grid>\r\n              <Grid item xs={2}></Grid>\r\n              <Grid item xs={4} style={{ fontWeight: 'bold' }}>\r\n                Người sử dụng lao động\r\n              </Grid>\r\n              <Grid item xs={2}></Grid>\r\n              <Grid item xs={4} style={{ fontStyle: 'italic' }}>\r\n                (Ký, ghi rõ họ tên)\r\n              </Grid>\r\n              <Grid item xs={1}></Grid>\r\n              <Grid item xs={5} style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                (Ký, ghi rõ họ tên, đóng dấu)\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              xs={12}\r\n              className=\"pd-60\"\r\n              spacing={0.5}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              style={{ marginBottom: 20 }}\r\n            >\r\n              <Grid item xs={2}></Grid>\r\n              <Grid item xs={4} style={{ fontWeight: 'bold' }}>\r\n                {item?.fullName}\r\n              </Grid>\r\n              <Grid item xs={2}></Grid>\r\n              <Grid item xs={4} style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                {formik.values?.nameLeader}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleCloseDialog}>\r\n              Hủy\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handlePrint}>\r\n              In\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Phê duyệt\r\n            </Button>\r\n          </>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n",["1093","1094"],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ApproveEmployee\\RequestDialog.jsx",["1095","1096"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n\r\nexport default function RequestDialog(props) {\r\n  const { open, item, handleRequest, handleCloseDialog, setItem } = props;\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        Yêu cầu chỉnh sửa\r\n        <Box className=\"icon-close\" onClick={handleCloseDialog}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <ValidatorForm onSubmit={() => handleRequest()} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '0 20px' }}>\r\n          <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n            <Grid item xs={12} md={12}>\r\n              <TextValidator\r\n                label=\"Nội dung yêu cầu\"\r\n                multiline\r\n                minRows={4}\r\n                maxRows={10}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={item?.additionalRequestContent}\r\n                onChange={(event) =>\r\n                  setItem({ ...item, additionalRequestContent: event.target.value })\r\n                }\r\n                validators={['required']}\r\n                errorMessages={['Vui lòng nhập trường này']}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleCloseDialog}>\r\n              Hủy\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Lưu\r\n            </Button>\r\n          </>\r\n        </DialogActions>\r\n      </ValidatorForm>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\RelatedInformation.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\EmployeeInformation.jsx",["1097","1098"],"import React, { useState, useEffect } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { MenuItem } from '@mui/material';\r\nimport { sex } from 'app/constant';\r\n\r\nexport default function EmployeeInformation(props) {\r\n  const { formik } = props;\r\n  return (\r\n    <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n      <Grid container item xs={12} md={12} spacing={2}>\r\n        <Grid item xs={3} md={3}>\r\n          <TextField\r\n            label=\"Mã nhân viên\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            name=\"code\"\r\n            value={formik.values?.code}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.code && formik.touched.code}\r\n            helperText={formik.errors.code}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3} md={3}>\r\n          <TextField\r\n            label=\"Họ và Tên\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            name=\"fullName\"\r\n            value={formik.values?.fullName}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.fullName && formik.touched.fullName}\r\n            helperText={formik.errors.fullName}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3} md={3}>\r\n          <LocalizationProvider dateAdapter={AdapterDayjs} fullWidth>\r\n            <DatePicker\r\n              label=\"Ngày sinh\"\r\n              name=\"dateOfBirth\"\r\n              inputFormat=\"DD/MM/YYYY\"\r\n              value={formik.values?.dateOfBirth}\r\n              onChange={(value) => {\r\n                if (value) {\r\n                  formik.setFieldValue('dateOfBirth', new Date(value));\r\n                }\r\n              }}\r\n              renderInput={(params) => {\r\n                return (\r\n                  <TextField\r\n                    {...params}\r\n                    format=\"DD/MM/YYYY\"\r\n                    type=\"date\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    error={formik.errors.dateOfBirth && formik.touched.dateOfBirth}\r\n                    helperText={formik.errors.dateOfBirth}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n          </LocalizationProvider>\r\n        </Grid>\r\n        <Grid item xs={3} md={3}>\r\n          <TextField\r\n            label=\"Giới tính\"\r\n            variant=\"outlined\"\r\n            select\r\n            fullWidth\r\n            name=\"sex\"\r\n            value={formik.values?.sex}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.sex && formik.touched.sex}\r\n            helperText={formik.errors.sex}\r\n          >\r\n            {sex.map((item) => (\r\n              <MenuItem value={item.name}>{item.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item xs={12} md={12} spacing={2}>\r\n        <Grid item xs={3} md={3}>\r\n          <TextField\r\n            label=\"Số điện thoại\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            name=\"phone\"\r\n            value={formik.values?.phone}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.phone && formik.touched.phone}\r\n            helperText={formik.errors.phone}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3} md={3}>\r\n          <TextField\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            name=\"email\"\r\n            value={formik.values?.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.email && formik.touched.email}\r\n            helperText={formik.errors.email}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3} md={3}>\r\n          <TextField\r\n            label=\"Trình độ học vấn\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            name=\"education\"\r\n            value={formik.values?.education}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.education && formik.touched.education}\r\n            helperText={formik.errors.education}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3} md={3}>\r\n          <TextField\r\n            label=\"Chuyên ngành\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            name=\"major\"\r\n            value={formik.values?.major}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.major && formik.touched.major}\r\n            helperText={formik.errors.major}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item xs={12} md={12} spacing={2}>\r\n        <Grid item xs={4} md={4}>\r\n          <TextField\r\n            label=\"Số CCCD\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            name=\"numberIdentityCard\"\r\n            value={formik.values?.numberIdentityCard}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.numberIdentityCard && formik.touched.numberIdentityCard}\r\n            helperText={formik.errors.numberIdentityCard}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4} md={4}>\r\n          <LocalizationProvider dateAdapter={AdapterDayjs} fullWidth>\r\n            <DatePicker\r\n              label=\"Ngày cấp\"\r\n              name=\"issuedDateIdentityCard\"\r\n              inputFormat=\"DD/MM/YYYY\"\r\n              value={formik.values?.issuedDateIdentityCard || null}\r\n              onChange={(value) => {\r\n                if (value) {\r\n                  formik.setFieldValue('issuedDateIdentityCard', new Date(value));\r\n                }\r\n              }}\r\n              renderInput={(params) => {\r\n                return (\r\n                  <TextField\r\n                    {...params}\r\n                    format=\"DD/MM/YYYY\"\r\n                    type=\"date\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    error={\r\n                      formik.errors.issuedDateIdentityCard && formik.touched.issuedDateIdentityCard\r\n                    }\r\n                    helperText={formik.errors.issuedDateIdentityCard}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n          </LocalizationProvider>\r\n        </Grid>\r\n        <Grid item xs={4} md={4}>\r\n          <TextField\r\n            label=\"Nơi cấp\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            name=\"placeOfGrantIdentityCard\"\r\n            value={formik.values?.placeOfGrantIdentityCard}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.errors.placeOfGrantIdentityCard && formik.touched.placeOfGrantIdentityCard\r\n            }\r\n            helperText={formik.errors.placeOfGrantIdentityCard}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item xs={12} md={12} spacing={2}>\r\n        <Grid item xs={2} md={2}>\r\n          <TextField\r\n            label=\"Dân tộc\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            name=\"nation\"\r\n            value={formik.values?.nation}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.nation && formik.touched.nation}\r\n            helperText={formik.errors.nation}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2} md={2}>\r\n          <TextField\r\n            label=\"Tôn giáo\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            name=\"religion\"\r\n            value={formik.values?.religion}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.religion && formik.touched.religion}\r\n            helperText={formik.errors.religion}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8} md={8}>\r\n          <TextField\r\n            label=\"Địa chỉ\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline\r\n            maxRows={2}\r\n            name=\"address\"\r\n            value={formik.values?.address}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.address && formik.touched.address}\r\n            helperText={formik.errors.address}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CreateEmployee\\WorkingPosition.jsx",["1099","1100","1101","1102","1103","1104","1105","1106"],"import React, { useState, useEffect } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport Box from '@mui/material/Box';\r\nimport moment from 'moment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport { getListDepartment, getListPosition } from './EmployeeService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\nconst filterOptions = createFilterOptions({\r\n  matchFrom: 'start',\r\n  stringify: (option) => option.name,\r\n});\r\n\r\nexport default function WorkingPosition(props) {\r\n  const { formik } = props;\r\n  const [listDepartment, setListDepartment] = useState([]);\r\n  const [listPosition, setListPosition] = useState([]);\r\n  useEffect(() => {\r\n    getListDepartment()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setListDepartment(res.data.data);\r\n        } else {\r\n          toast.warning('Lỗi xác thực');\r\n        }\r\n      })\r\n      .catch((err) => toast.error('Có lỗi xảy ra'));\r\n    getListPosition()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setListPosition(res.data.data);\r\n        } else {\r\n          toast.warning('Lỗi xác thực');\r\n        }\r\n      })\r\n      .catch((err) => toast.error('Có lỗi xảy ra'));\r\n  }, []);\r\n  return (\r\n    <Grid container spacing={2} style={{ marginTop: 5, minHeight: '20vh' }}>\r\n      <Grid item xs={6} md={6}>\r\n        <Autocomplete\r\n          fullWidth\r\n          options={listDepartment}\r\n          getOptionLabel={(option) => option.name}\r\n          value={formik.values?.department}\r\n          onChange={(event, value) => formik.setFieldValue('department', value)}\r\n          filterOptions={filterOptions}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Phòng ban\"\r\n              placeholder=\"Phòng ban\"\r\n              error={formik.errors.department && formik.touched.department}\r\n              helperText={formik.errors.department}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6} md={6}>\r\n        <Autocomplete\r\n          fullWidth\r\n          options={listPosition}\r\n          getOptionLabel={(option) => option.name}\r\n          value={formik.values?.positions ? formik.values?.positions[0] : null}\r\n          onChange={(event, value) => formik.setFieldValue('positions', [value])}\r\n          filterOptions={filterOptions}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Chức vụ\"\r\n              placeholder=\"Chức vụ\"\r\n              error={formik.errors.positions && formik.touched.positions}\r\n              helperText={formik.errors.positions}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Contract\\EmployeeTable.jsx",["1107"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { checkStatus } from 'app/constant';\r\nimport MaterialTable from 'material-table';\r\nimport { getEmployeeWithoutContract, editEmployee } from './ContractService';\r\nimport { toast } from 'react-toastify';\r\nimport ContractDialog from './ContractDialog';\r\n\r\nexport default function EmployeeTable(props) {\r\n  const { open, handleClose } = props;\r\n  const [listEmployee, setListEmployee] = useState([]);\r\n  const [shouldOpenContractDialog, setShouldOpenContractDialog] = useState();\r\n  const [item, setItem] = useState({});\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '3%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      field: 'action',\r\n      render: (rowData) => (\r\n        <>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setItem(rowData);\r\n              setShouldOpenContractDialog(true);\r\n            }}\r\n          >\r\n            <RemoveRedEyeIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Mã hồ sơ',\r\n      field: 'code',\r\n      render: (rowData) => rowData?.code,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Họ và tên',\r\n      field: 'fullName',\r\n      render: (rowData) => rowData?.fullName,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Email',\r\n      field: 'email',\r\n      render: (rowData) => rowData?.email,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'SĐT',\r\n      field: 'phone',\r\n      render: (rowData) => rowData?.phone,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      field: 'status',\r\n      render: (rowData) => {\r\n        let message = checkStatus(rowData.status).message;\r\n        let color = checkStatus(rowData.status).color;\r\n        return <div className={color}>{message}</div>;\r\n      },\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    updatePageData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (item?.status === 12) {\r\n      editEmployee(item)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Tạo hợp đồng nhân viên thành công');\r\n            handleClose();\r\n          } else {\r\n            toast.warning(res.data?.message);\r\n            handleClose();\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra'));\r\n    }\r\n  }, [item?.status]);\r\n\r\n  const updatePageData = () => {\r\n    getEmployeeWithoutContract()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setListEmployee(res.data.data);\r\n        } else {\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} fullWidth maxWidth={'lg'}>\r\n        <DialogTitle>\r\n          <Box className=\"icon-close\" onClick={handleClose}>\r\n            <IconButton color=\"error\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent style={{ padding: '30px 20px 0' }}>\r\n          <MaterialTable\r\n            title=\"Danh sách hồ sơ ứng viên\"\r\n            columns={columns}\r\n            data={listEmployee}\r\n            options={{\r\n              sorting: false,\r\n              draggable: false,\r\n              maxBodyHeight: '40vh',\r\n              pageSize: 10,\r\n              pageSizeOptions: [10, 20, 50],\r\n              headerStyle: {\r\n                textAlign: 'center',\r\n              },\r\n            }}\r\n            localization={{\r\n              toolbar: {\r\n                searchTooltip: 'Tìm kiếm',\r\n                searchPlaceholder: 'Tìm kiếm',\r\n              },\r\n              pagination: {\r\n                labelDisplayedRows: '{from}-{to} của {count}',\r\n                labelRowsSelect: 'hàng',\r\n                labelRowsPerPage: 'Số hàng mỗi trang:',\r\n                firstAriaLabel: 'Trang đầu',\r\n                firstTooltip: 'Trang đầu',\r\n                previousAriaLabel: 'Trang trước',\r\n                previousTooltip: 'Trang trước',\r\n                nextAriaLabel: 'Trang sau',\r\n                nextTooltip: 'Trang sau',\r\n                lastAriaLabel: 'Trang cuối',\r\n                lastTooltip: 'Trang cuối',\r\n              },\r\n              body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n            Hủy\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {shouldOpenContractDialog && (\r\n        <ContractDialog\r\n          open={shouldOpenContractDialog}\r\n          handleCloseDialog={() => setShouldOpenContractDialog(false)}\r\n          handleClose={handleClose}\r\n          item={item}\r\n          setItem={setItem}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\TimeKeeping\\TimeKeepingDialog.jsx",["1108","1109","1110"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport { addTimeKeeping, editTimeKeeping } from './TimeKeepingService';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { toast } from 'react-toastify';\r\nimport { months } from 'app/constant';\r\n\r\nexport default function TimeKeepingDialog(props) {\r\n  const { open, handleClose, timeKeeping, setTimeKeeping, hanldeCloseDialog, item } = props;\r\n  console.log(timeKeeping);\r\n  const [monthObject, setMonthObject] = useState(null);\r\n\r\n  ValidatorForm.addValidationRule('isOptionSelected', (value) => {\r\n    return value ? true : 'Vui lòng chọn trường này';\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (timeKeeping?.month) {\r\n      setMonthObject({ name: `Tháng ${timeKeeping?.month}`, value: timeKeeping?.month });\r\n    }\r\n    // setTimeKeeping({ ...timeKeeping, employee: item });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeKeeping({ ...timeKeeping, month: monthObject?.value });\r\n  }, [monthObject]);\r\n\r\n  const handleAdd = () => {\r\n    if (timeKeeping?.id) {\r\n      editTimeKeeping(timeKeeping)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Sửa bản ghi chấm công ');\r\n            handleClose();\r\n          } else {\r\n            toast.warning(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    } else {\r\n      addTimeKeeping(timeKeeping)\r\n        .then((res) => {\r\n          if (res.data.statusCode === 200) {\r\n            toast.success('Thêm bản ghi chấm công ');\r\n            handleClose();\r\n          } else {\r\n            toast.warning(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        {timeKeeping?.id ? 'Sửa bản ghi chấm công' : 'Thêm bản ghi chấm công'}\r\n        <Box className=\"icon-close\" onClick={hanldeCloseDialog}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <ValidatorForm onSubmit={() => handleAdd()} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '0 20px' }}>\r\n          <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n            <Grid container item xs={12} md={12} spacing={2}>\r\n              <Grid item xs={3} md={3}>\r\n                <TextValidator\r\n                  label=\"Mã chấm công\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={timeKeeping?.code}\r\n                  onChange={(event) => setTimeKeeping({ ...timeKeeping, code: event.target.value })}\r\n                  validators={['required', 'matchRegexp:^MaCC[0-9]{4}$']}\r\n                  errorMessages={[\r\n                    'Vui lòng nhập trường này',\r\n                    'Mã kế hoạch chưa đúng format VD:(MaCC9999)',\r\n                  ]}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3} md={3}>\r\n                <TextValidator\r\n                  label=\"Năm\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  value={timeKeeping?.year}\r\n                  onChange={(event) => setTimeKeeping({ ...timeKeeping, year: event.target.value })}\r\n                  validators={['required']}\r\n                  errorMessages={['Vui lòng nhập trường này']}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3} md={3}>\r\n                <Autocomplete\r\n                  fullWidth\r\n                  options={months}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={monthObject}\r\n                  onChange={(event, value) => setMonthObject(value)}\r\n                  renderInput={(params) => (\r\n                    <TextValidator\r\n                      {...params}\r\n                      label=\"Tháng\"\r\n                      placeholder=\"Tháng\"\r\n                      validators={['isOptionSelected']}\r\n                      errorMessages={['Vui lòng chọn trường này']}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>{' '}\r\n              <Grid item xs={3} md={3}>\r\n                <TextValidator\r\n                  label=\"Số ngày đi làm\"\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={timeKeeping?.numberWorkDay}\r\n                  onChange={(event) =>\r\n                    setTimeKeeping({ ...timeKeeping, numberWorkDay: event.target.value })\r\n                  }\r\n                  validators={['required', 'maxNumber:23']}\r\n                  errorMessages={[\r\n                    'Vui lòng nhập trường này',\r\n                    'Số ngày nhập không được quá số ngày quy định đi làm',\r\n                  ]}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3} md={3}>\r\n                <TextValidator\r\n                  label=\"Số ngày nghỉ (có phép)\"\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={timeKeeping?.numberDayOff}\r\n                  onChange={(event) =>\r\n                    setTimeKeeping({ ...timeKeeping, numberDayOff: event.target.value })\r\n                  }\r\n                  validators={['required', 'maxNumber:3']}\r\n                  errorMessages={[\r\n                    'Vui lòng nhập trường này',\r\n                    'Số ngày nhập không được quá số ngày quy định',\r\n                  ]}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3} md={3}>\r\n                <TextValidator\r\n                  label=\"Số ngày nghỉ (không phép)\"\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={timeKeeping?.numberDayUnexcusedLeave}\r\n                  onChange={(event) =>\r\n                    setTimeKeeping({ ...timeKeeping, numberDayUnexcusedLeave: event.target.value })\r\n                  }\r\n                  validators={['required', 'maxNumber:2']}\r\n                  errorMessages={[\r\n                    'Vui lòng nhập trường này',\r\n                    'Số ngày nhập không được quá số ngày quy định',\r\n                  ]}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3} md={3}>\r\n                <TextValidator\r\n                  label=\"Số giờ làm thêm\"\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={timeKeeping?.numberOvertimeHours}\r\n                  onChange={(event) =>\r\n                    setTimeKeeping({ ...timeKeeping, numberOvertimeHours: event.target.value })\r\n                  }\r\n                  validators={['required']}\r\n                  errorMessages={['Vui lòng nhập trường này']}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={hanldeCloseDialog}>\r\n              Hủy\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setTimeKeeping({ ...timeKeeping, status: 2 })}\r\n            >\r\n              {timeKeeping?.id ? 'Sửa' : 'Thêm'}\r\n            </Button>\r\n          </>\r\n        </DialogActions>\r\n      </ValidatorForm>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\PaymentSalary\\PaymentSalaryRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\PaymentSalary\\PaymentSalary.jsx",["1111"],"import React, { useEffect, useState } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport { Breadcrumb } from 'app/components';\r\nimport MaterialTable from 'material-table';\r\nimport { getListEmployee } from './PaymentSalaryService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { toast } from 'react-toastify';\r\nimport PaymentSalaryTable from './PaymentSalaryTable';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\n\r\nexport default function PaymentSalary() {\r\n  const [listEmployee, setListEmployee] = useState([]);\r\n  const [shouldOpenPaymentSalaryTable, setShouldOpenPaymentSalaryTable] = useState(false);\r\n  const [item, setItem] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '3%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      field: 'action',\r\n      render: (rowData) => (\r\n        <>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setShouldOpenPaymentSalaryTable(true);\r\n              setItem(rowData);\r\n            }}\r\n          >\r\n            <RemoveRedEyeIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Mã nhân viên',\r\n      field: 'code',\r\n      render: (rowData) => rowData?.code,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Họ và tên',\r\n      field: 'name',\r\n      render: (rowData) => rowData?.fullName,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Email',\r\n      field: 'email',\r\n      render: (rowData) => rowData?.email,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Số điện thoại',\r\n      field: 'phone',\r\n      render: (rowData) => rowData?.phone,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, []);\r\n\r\n  const updatePageData = () => {\r\n    getListEmployee()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          setListEmployee(res.data.data.filter((item) => item.status === 12 || item.status === 14));\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShouldOpenPaymentSalaryTable(false);\r\n    setItem({});\r\n    updatePageData();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box style={{ margin: 20 }}>\r\n        <Breadcrumb\r\n          routeSegments={[{ name: 'Quản lý', path: '/manage' }, { name: 'Tính lương' }]}\r\n        />\r\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              updatePageData();\r\n            }}\r\n          >\r\n            <LoopIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div>\r\n          <MaterialTable\r\n            title=\"Danh sách nhân viên\"\r\n            columns={columns}\r\n            data={listEmployee}\r\n            options={{\r\n              sorting: false,\r\n              maxBodyHeight: '60vh',\r\n              pageSize: 10,\r\n              pageSizeOptions: [10, 20, 50],\r\n              draggable: false,\r\n              headerStyle: {\r\n                textAlign: 'center',\r\n              },\r\n            }}\r\n            isLoading={loading}\r\n            localization={{\r\n              toolbar: {\r\n                searchTooltip: 'Tìm kiếm',\r\n                searchPlaceholder: 'Tìm kiếm',\r\n              },\r\n              pagination: {\r\n                labelDisplayedRows: '{from}-{to} của {count}',\r\n                labelRowsSelect: 'hàng',\r\n                labelRowsPerPage: 'Số hàng mỗi trang:',\r\n                firstAriaLabel: 'Trang đầu',\r\n                firstTooltip: 'Trang đầu',\r\n                previousAriaLabel: 'Trang trước',\r\n                previousTooltip: 'Trang trước',\r\n                nextAriaLabel: 'Trang sau',\r\n                nextTooltip: 'Trang sau',\r\n                lastAriaLabel: 'Trang cuối',\r\n                lastTooltip: 'Trang cuối',\r\n              },\r\n              body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n            }}\r\n          />\r\n        </div>\r\n      </Box>\r\n      {shouldOpenPaymentSalaryTable && (\r\n        <PaymentSalaryTable\r\n          open={shouldOpenPaymentSalaryTable}\r\n          item={item}\r\n          handleClose={handleClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\PaymentSalary\\PaymentSalaryService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\PaymentSalary\\PaymentSalaryTable.jsx",["1112","1113","1114","1115","1116"],"import React, { useEffect, useState } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport MaterialTable from 'material-table';\r\nimport { getListSalary } from './PaymentSalaryService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { toast } from 'react-toastify';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { months } from 'app/constant';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { Span } from 'app/components/Typography';\r\n\r\nexport default function PaymentSalary(props) {\r\n  const { open, handleClose, item } = props;\r\n  const [listPaymentSalary, setListPaymentSalary] = useState([]);\r\n  const [shouldOpenDialog, setShouldOpenDialog] = useState(false);\r\n  // const [paymentSalary, setPaymentSalary] = useState({});\r\n  const [month, setMonth] = useState('');\r\n  const [year, setYear] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Mã chấm công',\r\n      field: 'code',\r\n      render: (rowData) => rowData?.timeKeeping?.code,\r\n      cellStyle: {\r\n        width: '7%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '7%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Năm',\r\n      field: 'year',\r\n      render: (rowData) => rowData?.year,\r\n      cellStyle: {\r\n        width: '4%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '4%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tháng',\r\n      field: 'month',\r\n      render: (rowData) => rowData?.month,\r\n      cellStyle: {\r\n        width: '4%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '4%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tiền chuyên cần',\r\n      field: 'fullTimeSalary',\r\n      render: (rowData) =>\r\n        rowData?.fullTimeSalary.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ','),\r\n      cellStyle: {\r\n        width: '8%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '8%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tiền trợ cấp',\r\n      field: 'numberDayOff',\r\n      render: (rowData) =>\r\n        rowData?.transportationAndLunchAllowance\r\n          .toString()\r\n          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ','),\r\n      cellStyle: {\r\n        width: '8%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '8%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tiền BHXH(8%)',\r\n      field: 'socialInsuranceCosts',\r\n      render: (rowData) =>\r\n        Math.round(rowData?.socialInsuranceCosts)\r\n          .toString()\r\n          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ','),\r\n      cellStyle: {\r\n        width: '11%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '11%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tiền BHYT(1.5%)',\r\n      field: 'healthInsurancePremium',\r\n      render: (rowData) =>\r\n        Math.round(rowData?.healthInsurancePremium)\r\n          .toString()\r\n          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ','),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tiền thuế TNCN',\r\n      field: 'personalIncomeTax',\r\n      render: (rowData) =>\r\n        Math.round(rowData?.personalIncomeTax)\r\n          .toString()\r\n          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ','),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Giá trị gia tăng(TNCN)',\r\n      field: 'valueAddedWithEachSalary',\r\n      render: (rowData) => <span>{rowData?.valueAddedWithEachSalary * 100}%</span>,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Lương thực lĩnh',\r\n      field: 'netWage',\r\n      render: (rowData) =>\r\n        Math.round(rowData?.netWage)\r\n          .toString()\r\n          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ','),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, []);\r\n\r\n  const updatePageData = () => {\r\n    let searchObject = {};\r\n    searchObject.pageIndex = 1;\r\n    searchObject.pageSize = 1000;\r\n    searchObject.employeeId = item?.id;\r\n    if (month) {\r\n      searchObject.month = month?.value;\r\n    }\r\n\r\n    if (year) {\r\n      searchObject.year = Number(year);\r\n    }\r\n    getListSalary(searchObject)\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          setListPaymentSalary(res.data.data.content);\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} fullWidth maxWidth={'xl'}>\r\n        <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n          Danh sách lương của nhân viên {item?.fullName}\r\n          <Box className=\"icon-close\" onClick={handleClose}>\r\n            <IconButton color=\"error\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box style={{ margin: 20 }}>\r\n            <Grid container spacing={1} style={{ margin: '20px 0' }}>\r\n              <Grid item xs={7}></Grid>\r\n              <Grid item xs={2}>\r\n                <Autocomplete\r\n                  options={months}\r\n                  getOptionLabel={(option) => option?.name || ''}\r\n                  value={month}\r\n                  onChange={(event, newValue) => setMonth(newValue)}\r\n                  componentsProps={{ paper: { elevation: 8 } }}\r\n                  fullWidth\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      label=\"Tháng\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <TextField\r\n                  label=\"Năm\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"address\"\r\n                  value={year}\r\n                  onChange={(event) => setYear(event.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"medium\"\r\n                  style={{ padding: '5px 20px' }}\r\n                  onClick={updatePageData}\r\n                >\r\n                  Lọc\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <div style={{ width: '100%' }}>\r\n              <MaterialTable\r\n                title=\"Danh sách lương\"\r\n                columns={columns}\r\n                data={listPaymentSalary}\r\n                options={{\r\n                  sorting: false,\r\n                  maxBodyHeight: '40vh',\r\n                  pageSize: 10,\r\n                  pageSizeOptions: [10, 20, 50],\r\n                  draggable: false,\r\n                  headerStyle: {\r\n                    textAlign: 'center',\r\n                  },\r\n                }}\r\n                isLoading={loading}\r\n                localization={{\r\n                  toolbar: {\r\n                    searchTooltip: 'Tìm kiếm',\r\n                    searchPlaceholder: 'Tìm kiếm',\r\n                  },\r\n                  pagination: {\r\n                    labelDisplayedRows: '{from}-{to} của {count}',\r\n                    labelRowsSelect: 'hàng',\r\n                    labelRowsPerPage: 'Số hàng mỗi trang:',\r\n                    firstAriaLabel: 'Trang đầu',\r\n                    firstTooltip: 'Trang đầu',\r\n                    previousAriaLabel: 'Trang trước',\r\n                    previousTooltip: 'Trang trước',\r\n                    nextAriaLabel: 'Trang sau',\r\n                    nextTooltip: 'Trang sau',\r\n                    lastAriaLabel: 'Trang cuối',\r\n                    lastTooltip: 'Trang cuối',\r\n                  },\r\n                  body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n                }}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n            Đóng\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Employee\\EmployeeRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Employee\\Employee.jsx",["1117","1118","1119","1120","1121"],"import React, { useEffect, useState } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport { Breadcrumb } from 'app/components';\r\nimport MaterialTable from 'material-table';\r\nimport { getListEmployee } from './EmployeeService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { toast } from 'react-toastify';\r\nimport { checkStatus } from 'app/constant';\r\n// import ConfirmationDialog from '../../components/ConfirmationDialog';\r\nimport EmployeeDialog from './EmployeeDialog';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\n\r\nexport default function Employee() {\r\n  const [listEmployee, setListEmployee] = useState([]);\r\n  const [shouldOpenConfirmDialog, setShouldOpenConfirmDialog] = useState(false);\r\n  const [shouldOpenCandidateTable, setShouldOpenCandidateTable] = useState(false);\r\n  const [item, setItem] = useState({});\r\n  const [shouldOpenDialog, setShouldOpenDialog] = useState(false);\r\n  const [shouldOpenViewDialog, setShouldOpenViewDialog] = useState(false);\r\n  const [shouldOpenRequestDialog, setShouldOpenRequestDialog] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '3%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      field: 'action',\r\n      render: (rowData) => (\r\n        <>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setShouldOpenDialog(true);\r\n              setItem(rowData);\r\n            }}\r\n          >\r\n            <RemoveRedEyeIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Mã hồ sơ',\r\n      field: 'code',\r\n      render: (rowData) => rowData?.code,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Họ và tên',\r\n      field: 'fullName',\r\n      render: (rowData) => rowData?.fullName,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Email',\r\n      field: 'email',\r\n      render: (rowData) => rowData?.email,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'SĐT',\r\n      field: 'phone',\r\n      render: (rowData) => rowData?.phone,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      field: 'status',\r\n      render: (rowData) => {\r\n        let message = checkStatus(rowData.status).message;\r\n        let color = checkStatus(rowData.status).color;\r\n        return <div className={color}>{message}</div>;\r\n      },\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, []);\r\n\r\n  const updatePageData = () => {\r\n    getListEmployee()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          setListEmployee(res.data.data.filter((item) => item.status === 3));\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShouldOpenConfirmDialog(false);\r\n    setShouldOpenCandidateTable(false);\r\n    setShouldOpenDialog(false);\r\n    setShouldOpenViewDialog(false);\r\n    setShouldOpenRequestDialog(false);\r\n    updatePageData();\r\n    setItem({});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box style={{ margin: 20 }}>\r\n        <Breadcrumb\r\n          routeSegments={[{ name: 'Quản lý ', path: '/manage' }, { name: 'Cập nhật diễn biến' }]}\r\n        />\r\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              updatePageData();\r\n            }}\r\n          >\r\n            <LoopIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div style={{ marginTop: 10 }}>\r\n          <MaterialTable\r\n            title=\"Danh sách hồ sơ nhân viên\"\r\n            columns={columns}\r\n            data={listEmployee}\r\n            options={{\r\n              sorting: false,\r\n              draggable: false,\r\n              maxBodyHeight: '60vh',\r\n              pageSize: 10,\r\n              pageSizeOptions: [10, 20, 50],\r\n              headerStyle: {\r\n                textAlign: 'center',\r\n              },\r\n            }}\r\n            isLoading={loading}\r\n            localization={{\r\n              toolbar: {\r\n                searchTooltip: 'Tìm kiếm',\r\n                searchPlaceholder: 'Tìm kiếm',\r\n              },\r\n              pagination: {\r\n                labelDisplayedRows: '{from}-{to} của {count}',\r\n                labelRowsSelect: 'hàng',\r\n                labelRowsPerPage: 'Số hàng mỗi trang:',\r\n                firstAriaLabel: 'Trang đầu',\r\n                firstTooltip: 'Trang đầu',\r\n                previousAriaLabel: 'Trang trước',\r\n                previousTooltip: 'Trang trước',\r\n                nextAriaLabel: 'Trang sau',\r\n                nextTooltip: 'Trang sau',\r\n                lastAriaLabel: 'Trang cuối',\r\n                lastTooltip: 'Trang cuối',\r\n              },\r\n              body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n            }}\r\n          />\r\n        </div>\r\n      </Box>\r\n      {shouldOpenDialog && (\r\n        <EmployeeDialog open={shouldOpenDialog} handleClose={handleClose} item={item} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Employee\\EmployeeService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\Employee\\EmployeeDialog.jsx",["1122","1123","1124","1125","1126"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { Collapse, Typography } from '@material-ui/core';\r\n\r\nexport default function EmployeeDialog(props) {\r\n  const { open, handleClose, handleCloseDialog, item } = props;\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'lg'}>\r\n      <DialogTitle>\r\n        Thông tin nhân viên\r\n        <Box className=\"icon-close\" onClick={handleClose}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Collapse in={true}>\r\n          <Typography>\r\n            This is some content that can be shown or hidden by clicking the button above.\r\n          </Typography>\r\n        </Collapse>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n          Hủy\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CommendationAndDiscipline\\CommendationAndDisciplineRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CommendationAndDiscipline\\CommendationAndDiscipline.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CommendationAndDiscipline\\CommendationAndDisciplineService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\CommendationAndDiscipline\\CommendationAndDisciplineDialog.jsx",["1127"],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListCommendationAndDiscipline\\ListCommendationAndDisciplineRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\UpdateHappeningRoute.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\UpdateHappening.jsx",["1128","1129","1130","1131","1132","1133"],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListCommendationAndDiscipline\\ListCommendationAndDiscipline.jsx",["1134","1135","1136","1137","1138"],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListCommendationAndDiscipline\\ListCommendationAndDisciplineService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\UpdateHappeningService.js",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\UpdateHappeningDialog.jsx",["1139","1140","1141","1142","1143","1144"],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\ListCommendationAndDiscipline\\CommendationAndDisciplineDialog.jsx",["1145"],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\UpdateSalary.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\InformationDialog.jsx",[],"F:\\Do An Tot Nghiep\\FE\\src\\app\\views\\UpdateHappening\\PromoteDialog.jsx",["1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157"],{"ruleId":"1158","replacedBy":"1159"},{"ruleId":"1160","replacedBy":"1161"},{"ruleId":"1162","severity":1,"message":"1163","line":9,"column":26,"nodeType":"1164","messageId":"1165","endLine":9,"endColumn":31},{"ruleId":"1162","severity":1,"message":"1166","line":2,"column":10,"nodeType":"1164","messageId":"1165","endLine":2,"endColumn":14},{"ruleId":"1162","severity":1,"message":"1167","line":2,"column":16,"nodeType":"1164","messageId":"1165","endLine":2,"endColumn":24},{"ruleId":"1162","severity":1,"message":"1168","line":6,"column":10,"nodeType":"1164","messageId":"1165","endLine":6,"endColumn":19},{"ruleId":"1162","severity":1,"message":"1169","line":10,"column":10,"nodeType":"1164","messageId":"1165","endLine":10,"endColumn":17},{"ruleId":"1162","severity":1,"message":"1170","line":53,"column":9,"nodeType":"1164","messageId":"1165","endLine":53,"endColumn":14},{"ruleId":"1162","severity":1,"message":"1171","line":62,"column":13,"nodeType":"1164","messageId":"1165","endLine":62,"endColumn":16},{"ruleId":"1162","severity":1,"message":"1172","line":1,"column":10,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":16},{"ruleId":"1162","severity":1,"message":"1173","line":3,"column":20,"nodeType":"1164","messageId":"1165","endLine":3,"endColumn":33},{"ruleId":"1162","severity":1,"message":"1174","line":5,"column":10,"nodeType":"1164","messageId":"1165","endLine":5,"endColumn":30},{"ruleId":"1162","severity":1,"message":"1175","line":12,"column":8,"nodeType":"1164","messageId":"1165","endLine":12,"endColumn":20},{"ruleId":"1162","severity":1,"message":"1176","line":68,"column":7,"nodeType":"1164","messageId":"1165","endLine":68,"endColumn":14},{"ruleId":"1177","severity":1,"message":"1178","line":36,"column":28,"nodeType":"1179","messageId":"1180","endLine":36,"endColumn":30},{"ruleId":"1177","severity":1,"message":"1178","line":37,"column":29,"nodeType":"1179","messageId":"1180","endLine":37,"endColumn":31},{"ruleId":"1181","severity":1,"message":"1182","line":44,"column":6,"nodeType":"1183","endLine":44,"endColumn":19,"suggestions":"1184"},{"ruleId":"1162","severity":1,"message":"1185","line":2,"column":15,"nodeType":"1164","messageId":"1165","endLine":2,"endColumn":21},{"ruleId":"1181","severity":1,"message":"1186","line":150,"column":6,"nodeType":"1183","endLine":150,"endColumn":14,"suggestions":"1187"},{"ruleId":"1162","severity":1,"message":"1185","line":2,"column":15,"nodeType":"1164","messageId":"1165","endLine":2,"endColumn":21},{"ruleId":"1162","severity":1,"message":"1188","line":5,"column":26,"nodeType":"1164","messageId":"1165","endLine":5,"endColumn":39},{"ruleId":"1162","severity":1,"message":"1189","line":7,"column":8,"nodeType":"1164","messageId":"1165","endLine":7,"endColumn":18},{"ruleId":"1162","severity":1,"message":"1190","line":8,"column":8,"nodeType":"1164","messageId":"1165","endLine":8,"endColumn":16},{"ruleId":"1162","severity":1,"message":"1191","line":11,"column":8,"nodeType":"1164","messageId":"1165","endLine":11,"endColumn":26},{"ruleId":"1162","severity":1,"message":"1192","line":19,"column":10,"nodeType":"1164","messageId":"1165","endLine":19,"endColumn":26},{"ruleId":"1162","severity":1,"message":"1193","line":21,"column":10,"nodeType":"1164","messageId":"1165","endLine":21,"endColumn":33},{"ruleId":"1162","severity":1,"message":"1194","line":2,"column":23,"nodeType":"1164","messageId":"1165","endLine":2,"endColumn":39},{"ruleId":"1195","severity":1,"message":"1196","line":19,"column":40,"nodeType":"1197","messageId":"1198","endLine":19,"endColumn":41},{"ruleId":"1195","severity":1,"message":"1196","line":23,"column":43,"nodeType":"1197","messageId":"1198","endLine":23,"endColumn":44},{"ruleId":"1181","severity":1,"message":"1199","line":34,"column":6,"nodeType":"1183","endLine":34,"endColumn":19,"suggestions":"1200"},{"ruleId":"1162","severity":1,"message":"1201","line":14,"column":10,"nodeType":"1164","messageId":"1165","endLine":14,"endColumn":23},{"ruleId":"1162","severity":1,"message":"1202","line":14,"column":25,"nodeType":"1164","messageId":"1165","endLine":14,"endColumn":38},{"ruleId":"1162","severity":1,"message":"1203","line":28,"column":10,"nodeType":"1164","messageId":"1165","endLine":28,"endColumn":14},{"ruleId":"1162","severity":1,"message":"1204","line":28,"column":16,"nodeType":"1164","messageId":"1165","endLine":28,"endColumn":23},{"ruleId":"1181","severity":1,"message":"1205","line":21,"column":6,"nodeType":"1183","endLine":21,"endColumn":8,"suggestions":"1206"},{"ruleId":"1181","severity":1,"message":"1205","line":21,"column":6,"nodeType":"1183","endLine":21,"endColumn":8,"suggestions":"1207"},{"ruleId":"1181","severity":1,"message":"1205","line":56,"column":6,"nodeType":"1183","endLine":56,"endColumn":8,"suggestions":"1208"},{"ruleId":"1181","severity":1,"message":"1205","line":21,"column":6,"nodeType":"1183","endLine":21,"endColumn":8,"suggestions":"1209"},{"ruleId":"1181","severity":1,"message":"1205","line":21,"column":6,"nodeType":"1183","endLine":21,"endColumn":8,"suggestions":"1210"},{"ruleId":"1162","severity":1,"message":"1211","line":1,"column":17,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":26},{"ruleId":"1162","severity":1,"message":"1185","line":2,"column":15,"nodeType":"1164","messageId":"1165","endLine":2,"endColumn":21},{"ruleId":"1181","severity":1,"message":"1205","line":26,"column":6,"nodeType":"1183","endLine":26,"endColumn":8,"suggestions":"1212"},{"ruleId":"1181","severity":1,"message":"1205","line":26,"column":6,"nodeType":"1183","endLine":26,"endColumn":8,"suggestions":"1213"},{"ruleId":"1181","severity":1,"message":"1214","line":52,"column":6,"nodeType":"1183","endLine":52,"endColumn":25,"suggestions":"1215"},{"ruleId":"1162","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":25},{"ruleId":"1162","severity":1,"message":"1211","line":1,"column":27,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":36},{"ruleId":"1162","severity":1,"message":"1163","line":12,"column":10,"nodeType":"1164","messageId":"1165","endLine":12,"endColumn":15},{"ruleId":"1162","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":25},{"ruleId":"1162","severity":1,"message":"1211","line":1,"column":27,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":36},{"ruleId":"1162","severity":1,"message":"1163","line":12,"column":10,"nodeType":"1164","messageId":"1165","endLine":12,"endColumn":15},{"ruleId":"1162","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":25},{"ruleId":"1181","severity":1,"message":"1217","line":60,"column":6,"nodeType":"1183","endLine":60,"endColumn":17,"suggestions":"1218"},{"ruleId":"1162","severity":1,"message":"1185","line":2,"column":15,"nodeType":"1164","messageId":"1165","endLine":2,"endColumn":21},{"ruleId":"1181","severity":1,"message":"1186","line":159,"column":6,"nodeType":"1183","endLine":159,"endColumn":14,"suggestions":"1219"},{"ruleId":"1162","severity":1,"message":"1185","line":2,"column":15,"nodeType":"1164","messageId":"1165","endLine":2,"endColumn":21},{"ruleId":"1181","severity":1,"message":"1220","line":51,"column":6,"nodeType":"1183","endLine":51,"endColumn":19,"suggestions":"1221"},{"ruleId":"1162","severity":1,"message":"1222","line":7,"column":8,"nodeType":"1164","messageId":"1165","endLine":7,"endColumn":21},{"ruleId":"1162","severity":1,"message":"1223","line":8,"column":8,"nodeType":"1164","messageId":"1165","endLine":8,"endColumn":19},{"ruleId":"1162","severity":1,"message":"1191","line":19,"column":8,"nodeType":"1164","messageId":"1165","endLine":19,"endColumn":26},{"ruleId":"1181","severity":1,"message":"1224","line":229,"column":6,"nodeType":"1183","endLine":229,"endColumn":23,"suggestions":"1225"},{"ruleId":"1181","severity":1,"message":"1226","line":237,"column":6,"nodeType":"1183","endLine":237,"endColumn":14,"suggestions":"1227"},{"ruleId":"1181","severity":1,"message":"1228","line":243,"column":6,"nodeType":"1183","endLine":243,"endColumn":21,"suggestions":"1229"},{"ruleId":"1162","severity":1,"message":"1211","line":1,"column":17,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":26},{"ruleId":"1162","severity":1,"message":"1230","line":14,"column":23,"nodeType":"1164","messageId":"1165","endLine":14,"endColumn":36},{"ruleId":"1162","severity":1,"message":"1231","line":14,"column":57,"nodeType":"1164","messageId":"1165","endLine":14,"endColumn":64},{"ruleId":"1162","severity":1,"message":"1232","line":3,"column":10,"nodeType":"1164","messageId":"1165","endLine":3,"endColumn":20},{"ruleId":"1181","severity":1,"message":"1233","line":37,"column":6,"nodeType":"1183","endLine":37,"endColumn":24,"suggestions":"1234"},{"ruleId":"1181","severity":1,"message":"1186","line":179,"column":6,"nodeType":"1183","endLine":179,"endColumn":8,"suggestions":"1235"},{"ruleId":"1181","severity":1,"message":"1220","line":37,"column":6,"nodeType":"1183","endLine":37,"endColumn":19,"suggestions":"1236"},{"ruleId":"1162","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":25},{"ruleId":"1162","severity":1,"message":"1211","line":1,"column":27,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":36},{"ruleId":"1162","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":25},{"ruleId":"1162","severity":1,"message":"1211","line":1,"column":27,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":36},{"ruleId":"1158","replacedBy":"1237"},{"ruleId":"1160","replacedBy":"1238"},{"ruleId":"1162","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":25},{"ruleId":"1162","severity":1,"message":"1211","line":1,"column":27,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":36},{"ruleId":"1162","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":25},{"ruleId":"1162","severity":1,"message":"1211","line":1,"column":27,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":36},{"ruleId":"1162","severity":1,"message":"1239","line":4,"column":10,"nodeType":"1164","messageId":"1165","endLine":4,"endColumn":20},{"ruleId":"1162","severity":1,"message":"1240","line":5,"column":10,"nodeType":"1164","messageId":"1165","endLine":5,"endColumn":30},{"ruleId":"1162","severity":1,"message":"1241","line":6,"column":10,"nodeType":"1164","messageId":"1165","endLine":6,"endColumn":22},{"ruleId":"1162","severity":1,"message":"1242","line":8,"column":8,"nodeType":"1164","messageId":"1165","endLine":8,"endColumn":11},{"ruleId":"1162","severity":1,"message":"1243","line":9,"column":8,"nodeType":"1164","messageId":"1165","endLine":9,"endColumn":14},{"ruleId":"1162","severity":1,"message":"1167","line":10,"column":8,"nodeType":"1164","messageId":"1165","endLine":10,"endColumn":16},{"ruleId":"1162","severity":1,"message":"1244","line":16,"column":7,"nodeType":"1164","messageId":"1165","endLine":16,"endColumn":11},{"ruleId":"1162","severity":1,"message":"1245","line":17,"column":7,"nodeType":"1164","messageId":"1165","endLine":17,"endColumn":18},{"ruleId":"1181","severity":1,"message":"1220","line":135,"column":6,"nodeType":"1183","endLine":135,"endColumn":20,"suggestions":"1246"},{"ruleId":"1162","severity":1,"message":"1247","line":18,"column":78,"nodeType":"1164","messageId":"1165","endLine":18,"endColumn":82},{"ruleId":"1181","severity":1,"message":"1248","line":31,"column":6,"nodeType":"1183","endLine":31,"endColumn":8,"suggestions":"1249"},{"ruleId":"1181","severity":1,"message":"1250","line":35,"column":6,"nodeType":"1183","endLine":35,"endColumn":19,"suggestions":"1251"},{"ruleId":"1162","severity":1,"message":"1185","line":2,"column":15,"nodeType":"1164","messageId":"1165","endLine":2,"endColumn":21},{"ruleId":"1162","severity":1,"message":"1252","line":16,"column":8,"nodeType":"1164","messageId":"1165","endLine":16,"endColumn":24},{"ruleId":"1162","severity":1,"message":"1253","line":17,"column":10,"nodeType":"1164","messageId":"1165","endLine":17,"endColumn":14},{"ruleId":"1162","severity":1,"message":"1192","line":22,"column":10,"nodeType":"1164","messageId":"1165","endLine":22,"endColumn":26},{"ruleId":"1162","severity":1,"message":"1254","line":22,"column":28,"nodeType":"1164","messageId":"1165","endLine":22,"endColumn":47},{"ruleId":"1181","severity":1,"message":"1186","line":193,"column":6,"nodeType":"1183","endLine":193,"endColumn":8,"suggestions":"1255"},{"ruleId":"1162","severity":1,"message":"1185","line":2,"column":15,"nodeType":"1164","messageId":"1165","endLine":2,"endColumn":21},{"ruleId":"1162","severity":1,"message":"1193","line":16,"column":10,"nodeType":"1164","messageId":"1165","endLine":16,"endColumn":33},{"ruleId":"1162","severity":1,"message":"1256","line":17,"column":10,"nodeType":"1164","messageId":"1165","endLine":17,"endColumn":34},{"ruleId":"1162","severity":1,"message":"1257","line":20,"column":10,"nodeType":"1164","messageId":"1165","endLine":20,"endColumn":30},{"ruleId":"1162","severity":1,"message":"1258","line":21,"column":10,"nodeType":"1164","messageId":"1165","endLine":21,"endColumn":33},{"ruleId":"1162","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":25},{"ruleId":"1162","severity":1,"message":"1211","line":1,"column":27,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":36},{"ruleId":"1162","severity":1,"message":"1259","line":1,"column":38,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":44},{"ruleId":"1162","severity":1,"message":"1260","line":13,"column":30,"nodeType":"1164","messageId":"1165","endLine":13,"endColumn":47},{"ruleId":"1162","severity":1,"message":"1247","line":13,"column":49,"nodeType":"1164","messageId":"1165","endLine":13,"endColumn":53},{"ruleId":"1181","severity":1,"message":"1226","line":65,"column":6,"nodeType":"1183","endLine":65,"endColumn":15,"suggestions":"1261"},{"ruleId":"1162","severity":1,"message":"1185","line":2,"column":15,"nodeType":"1164","messageId":"1165","endLine":2,"endColumn":21},{"ruleId":"1162","severity":1,"message":"1193","line":18,"column":10,"nodeType":"1164","messageId":"1165","endLine":18,"endColumn":33},{"ruleId":"1162","severity":1,"message":"1256","line":19,"column":10,"nodeType":"1164","messageId":"1165","endLine":19,"endColumn":34},{"ruleId":"1162","severity":1,"message":"1257","line":22,"column":10,"nodeType":"1164","messageId":"1165","endLine":22,"endColumn":30},{"ruleId":"1162","severity":1,"message":"1258","line":23,"column":10,"nodeType":"1164","messageId":"1165","endLine":23,"endColumn":33},{"ruleId":"1181","severity":1,"message":"1186","line":124,"column":6,"nodeType":"1183","endLine":124,"endColumn":14,"suggestions":"1262"},{"ruleId":"1162","severity":1,"message":"1185","line":2,"column":15,"nodeType":"1164","messageId":"1165","endLine":2,"endColumn":21},{"ruleId":"1162","severity":1,"message":"1189","line":7,"column":8,"nodeType":"1164","messageId":"1165","endLine":7,"endColumn":18},{"ruleId":"1162","severity":1,"message":"1190","line":8,"column":8,"nodeType":"1164","messageId":"1165","endLine":8,"endColumn":16},{"ruleId":"1162","severity":1,"message":"1191","line":13,"column":8,"nodeType":"1164","messageId":"1165","endLine":13,"endColumn":26},{"ruleId":"1162","severity":1,"message":"1193","line":19,"column":10,"nodeType":"1164","messageId":"1165","endLine":19,"endColumn":33},{"ruleId":"1162","severity":1,"message":"1211","line":1,"column":27,"nodeType":"1164","messageId":"1165","endLine":1,"endColumn":36},{"ruleId":"1162","severity":1,"message":"1263","line":10,"column":8,"nodeType":"1164","messageId":"1165","endLine":10,"endColumn":12},{"ruleId":"1162","severity":1,"message":"1264","line":11,"column":8,"nodeType":"1164","messageId":"1165","endLine":11,"endColumn":20},{"ruleId":"1162","severity":1,"message":"1201","line":12,"column":10,"nodeType":"1164","messageId":"1165","endLine":12,"endColumn":23},{"ruleId":"1162","severity":1,"message":"1202","line":12,"column":25,"nodeType":"1164","messageId":"1165","endLine":12,"endColumn":38},{"ruleId":"1162","severity":1,"message":"1163","line":13,"column":10,"nodeType":"1164","messageId":"1165","endLine":13,"endColumn":15},{"ruleId":"1181","severity":1,"message":"1226","line":62,"column":6,"nodeType":"1183","endLine":62,"endColumn":15,"suggestions":"1265"},{"ruleId":"1162","severity":1,"message":"1239","line":6,"column":10,"nodeType":"1164","messageId":"1165","endLine":6,"endColumn":20},{"ruleId":"1162","severity":1,"message":"1240","line":7,"column":10,"nodeType":"1164","messageId":"1165","endLine":7,"endColumn":30},{"ruleId":"1162","severity":1,"message":"1241","line":8,"column":10,"nodeType":"1164","messageId":"1165","endLine":8,"endColumn":22},{"ruleId":"1162","severity":1,"message":"1266","line":9,"column":10,"nodeType":"1164","messageId":"1165","endLine":9,"endColumn":18},{"ruleId":"1162","severity":1,"message":"1267","line":10,"column":10,"nodeType":"1164","messageId":"1165","endLine":10,"endColumn":13},{"ruleId":"1162","severity":1,"message":"1243","line":12,"column":8,"nodeType":"1164","messageId":"1165","endLine":12,"endColumn":14},{"ruleId":"1162","severity":1,"message":"1167","line":13,"column":8,"nodeType":"1164","messageId":"1165","endLine":13,"endColumn":16},{"ruleId":"1162","severity":1,"message":"1242","line":16,"column":8,"nodeType":"1164","messageId":"1165","endLine":16,"endColumn":11},{"ruleId":"1162","severity":1,"message":"1244","line":21,"column":7,"nodeType":"1164","messageId":"1165","endLine":21,"endColumn":11},{"ruleId":"1162","severity":1,"message":"1245","line":22,"column":7,"nodeType":"1164","messageId":"1165","endLine":22,"endColumn":18},{"ruleId":"1181","severity":1,"message":"1268","line":59,"column":6,"nodeType":"1183","endLine":59,"endColumn":8,"suggestions":"1269"},{"ruleId":"1181","severity":1,"message":"1270","line":65,"column":6,"nodeType":"1183","endLine":65,"endColumn":12,"suggestions":"1271"},"no-native-reassign",["1272"],"no-negated-in-lhs",["1273"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Checkbox' is defined but never used.","'Paragraph' is defined but never used.","'NavLink' is defined but never used.","'theme' is assigned a value but never used.","'res' is assigned a value but never used.","'Avatar' is defined but never used.","'MatxSearchBox' is defined but never used.","'NotificationProvider' is defined but never used.","'ShoppingCart' is defined but never used.","'IconBox' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'role'. Either include it or remove the dependency array. Outer scope values like 'navigations' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["1274"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'updatePageData'. Either include it or remove the dependency array.",["1275"],"'deleteRecruit' is defined but never used.","'DeleteIcon' is defined but never used.","'EditIcon' is defined but never used.","'ConfirmationDialog' is defined but never used.","'shouldOpenDialog' is assigned a value but never used.","'shouldOpenConfirmDialog' is assigned a value but never used.","'CircularProgress' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'handleAprrove'. Either include it or remove the dependency array.",["1276"],"'ValidatorForm' is defined but never used.","'TextValidator' is defined but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["1277"],["1278"],["1279"],["1280"],["1281"],"'useEffect' is defined but never used.",["1282"],["1283"],"React Hook useEffect has missing dependencies: 'candidate' and 'handleClose'. Either include them or remove the dependency array.",["1284"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'handleMakeApointment'. Either include it or remove the dependency array.",["1285"],["1286"],"React Hook useEffect has missing dependencies: 'handleClose' and 'item'. Either include them or remove the dependency array.",["1287"],"'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","React Hook useEffect has missing dependencies: 'employee' and 'handleClose'. Either include them or remove the dependency array.",["1288"],"React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.",["1289"],"React Hook useEffect has a missing dependency: 'employee'. Either include it or remove the dependency array. You can also do a functional update 'setEmployee(e => ...)' if you only need 'employee' in the 'setEmployee' call.",["1290"],"'handleRequest' is assigned a value but never used.","'setItem' is assigned a value but never used.","'Breadcrumb' is defined but never used.","React Hook useEffect has missing dependencies: 'item' and 'timeKeeping'. Either include them or remove the dependency array. You can also do a functional update 'setTimeKeeping(t => ...)' if you only need 'timeKeeping' in the 'setTimeKeeping' call.",["1291"],["1292"],["1293"],["1272"],["1273"],"'DatePicker' is defined but never used.","'LocalizationProvider' is defined but never used.","'AdapterDayjs' is defined but never used.","'Box' is defined but never used.","'moment' is defined but never used.","'icon' is assigned a value but never used.","'checkedIcon' is assigned a value but never used.",["1294"],"'item' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'timeKeeping?.month'. Either include it or remove the dependency array.",["1295"],"React Hook useEffect has missing dependencies: 'setTimeKeeping' and 'timeKeeping'. Either include them or remove the dependency array.",["1296"],"'RemoveRedEyeIcon' is defined but never used.","'Span' is defined but never used.","'setShouldOpenDialog' is assigned a value but never used.",["1297"],"'shouldOpenCandidateTable' is assigned a value but never used.","'shouldOpenViewDialog' is assigned a value but never used.","'shouldOpenRequestDialog' is assigned a value but never used.","'useRef' is defined but never used.","'handleCloseDialog' is assigned a value but never used.",["1298"],["1299"],"'Grid' is defined but never used.","'Autocomplete' is defined but never used.",["1300"],"'MenuItem' is defined but never used.","'sex' is defined but never used.","React Hook useEffect has a missing dependency: 'item?.status'. Either include it or remove the dependency array.",["1301"],"React Hook useEffect has missing dependencies: 'formik' and 'item?.status'. Either include them or remove the dependency array.",["1302"],"no-global-assign","no-unsafe-negation",{"desc":"1303","fix":"1304"},{"desc":"1305","fix":"1306"},{"desc":"1307","fix":"1308"},{"desc":"1309","fix":"1310"},{"desc":"1309","fix":"1311"},{"desc":"1309","fix":"1312"},{"desc":"1309","fix":"1313"},{"desc":"1309","fix":"1314"},{"desc":"1309","fix":"1315"},{"desc":"1309","fix":"1316"},{"desc":"1317","fix":"1318"},{"desc":"1319","fix":"1320"},{"desc":"1305","fix":"1321"},{"desc":"1322","fix":"1323"},{"desc":"1324","fix":"1325"},{"desc":"1326","fix":"1327"},{"desc":"1328","fix":"1329"},{"desc":"1330","fix":"1331"},{"desc":"1332","fix":"1333"},{"desc":"1322","fix":"1334"},{"desc":"1335","fix":"1336"},{"desc":"1337","fix":"1338"},{"desc":"1339","fix":"1340"},{"desc":"1332","fix":"1341"},{"desc":"1342","fix":"1343"},{"desc":"1305","fix":"1344"},{"desc":"1342","fix":"1345"},{"desc":"1346","fix":"1347"},{"desc":"1348","fix":"1349"},"Update the dependencies array to be: [role]",{"range":"1350","text":"1351"},"Update the dependencies array to be: [status, updatePageData]",{"range":"1352","text":"1353"},"Update the dependencies array to be: [handleAprrove, item.status]",{"range":"1354","text":"1355"},"Update the dependencies array to be: [item]",{"range":"1356","text":"1357"},{"range":"1358","text":"1357"},{"range":"1359","text":"1357"},{"range":"1360","text":"1357"},{"range":"1361","text":"1357"},{"range":"1362","text":"1357"},{"range":"1363","text":"1357"},"Update the dependencies array to be: [candidate, candidate?.status, handleClose]",{"range":"1364","text":"1365"},"Update the dependencies array to be: [candidate, handleMakeApointment]",{"range":"1366","text":"1367"},{"range":"1368","text":"1353"},"Update the dependencies array to be: [handleClose, item, item.status]",{"range":"1369","text":"1370"},"Update the dependencies array to be: [employee, employee.status, handleClose]",{"range":"1371","text":"1372"},"Update the dependencies array to be: [formik, method]",{"range":"1373","text":"1374"},"Update the dependencies array to be: [employee, formik.values]",{"range":"1375","text":"1376"},"Update the dependencies array to be: [item, shouldOpenDialog, timeKeeping]",{"range":"1377","text":"1378"},"Update the dependencies array to be: [updatePageData]",{"range":"1379","text":"1380"},{"range":"1381","text":"1370"},"Update the dependencies array to be: [handleClose, item, item?.status]",{"range":"1382","text":"1383"},"Update the dependencies array to be: [timeKeeping?.month]",{"range":"1384","text":"1385"},"Update the dependencies array to be: [monthObject, setTimeKeeping, timeKeeping]",{"range":"1386","text":"1387"},{"range":"1388","text":"1380"},"Update the dependencies array to be: [formik, typeObj]",{"range":"1389","text":"1390"},{"range":"1391","text":"1353"},{"range":"1392","text":"1390"},"Update the dependencies array to be: [item?.status]",{"range":"1393","text":"1394"},"Update the dependencies array to be: [formik, item?.status, type]",{"range":"1395","text":"1396"},[1150,1163],"[role]",[4332,4340],"[status, updatePageData]",[1428,1441],"[handleAprrove, item.status]",[888,890],"[item]",[902,904],[2234,2236],[871,873],[888,890],[1103,1105],[1110,1112],[1889,1908],"[candidate, candidate?.status, handleClose]",[2096,2107],"[candidate, handleMakeApointment]",[4696,4704],[1997,2010],"[handleClose, item, item.status]",[9434,9451],"[employee, employee.status, handleClose]",[9611,9619],"[formik, method]",[9751,9766],"[employee, formik.values]",[1697,1715],"[item, shouldOpenDialog, timeKeeping]",[4856,4858],"[updatePageData]",[1355,1368],[3578,3592],"[handleClose, item, item?.status]",[1368,1370],"[timeKeeping?.month]",[1470,1483],"[monthObject, setTimeKeeping, timeKeeping]",[5254,5256],[2706,2715],"[formik, typeObj]",[3477,3485],[2672,2681],[2140,2142],"[item?.status]",[2265,2271],"[formik, item?.status, type]"]