{"version":3,"sources":["app/views/PaymentSalary/PaymentSalaryService.js","app/views/PaymentSalary/PaymentSalaryTable.jsx","app/views/PaymentSalary/PaymentSalary.jsx","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/Loop.js"],"names":["API_PATH","API","API_PATH2","PaymentSalary","props","open","handleClose","item","useState","listPaymentSalary","setListPaymentSalary","month","setMonth","year","setYear","loading","setLoading","columns","title","field","render","rowData","tableData","id","cellStyle","width","textAlign","headerStyle","timeKeeping","code","fullTimeSalary","toString","replace","transportationAndLunchAllowance","Math","round","socialInsuranceCosts","healthInsurancePremium","personalIncomeTax","valueAddedWithEachSalary","netWage","useEffect","updatePageData","searchObject","employeeId","value","Number","axios","post","getListSalary","then","res","data","statusCode","content","toast","warning","catch","err","error","Dialog","fullWidth","maxWidth","DialogTitle","style","marginBlockEnd","padding","fullName","Box","className","onClick","IconButton","color","DialogContent","margin","Grid","container","spacing","xs","Autocomplete","options","months","getOptionLabel","option","name","onChange","event","newValue","componentsProps","paper","elevation","renderInput","params","TextField","variant","label","size","type","target","Button","sorting","maxBodyHeight","pageSize","pageSizeOptions","draggable","backgroundColor","colorTable","HEADER","TEXTHEADER","rowStyle","ROW","TEXTROW","isLoading","localization","toolbar","searchTooltip","searchPlaceholder","pagination","labelDisplayedRows","labelRowsSelect","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","body","emptyDataSourceMessage","DialogActions","listEmployee","setListEmployee","shouldOpenPaymentSalaryTable","setShouldOpenPaymentSalaryTable","setItem","email","phone","get","filter","status","routeSegments","path","display","justifyContent","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/34.78359f4f.chunk.js","sourcesContent":["import axios from 'axios.js';\r\nimport { API } from 'app/constant';\r\n\r\nconst API_PATH = API + '/api/payment-salarys';\r\nconst API_PATH2 = API + '/api/employees';\r\n\r\nexport const getListSalary = (searchObject, employeeId) => {\r\n  return axios.post(API_PATH + '/searchByDto', searchObject);\r\n};\r\n\r\nexport const getListEmployee = () => {\r\n  return axios.get(API_PATH2);\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport MaterialTable from 'material-table';\r\nimport { getListSalary } from './PaymentSalaryService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { toast } from 'react-toastify';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { months } from 'app/constant';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { Span } from 'app/components/Typography';\r\nimport { colorTable } from 'app/constant';\r\n\r\nexport default function PaymentSalary(props) {\r\n  const { open, handleClose, item } = props;\r\n  const [listPaymentSalary, setListPaymentSalary] = useState([]);\r\n  const [shouldOpenDialog, setShouldOpenDialog] = useState(false);\r\n  // const [paymentSalary, setPaymentSalary] = useState({});\r\n  const [month, setMonth] = useState('');\r\n  const [year, setYear] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '5%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Mã chấm công',\r\n      field: 'code',\r\n      render: (rowData) => rowData?.timeKeeping?.code,\r\n      cellStyle: {\r\n        width: '7%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '7%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Năm',\r\n      field: 'year',\r\n      render: (rowData) => rowData?.year,\r\n      cellStyle: {\r\n        width: '4%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '4%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tháng',\r\n      field: 'month',\r\n      render: (rowData) => rowData?.month,\r\n      cellStyle: {\r\n        width: '4%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '4%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tiền chuyên cần',\r\n      field: 'fullTimeSalary',\r\n      render: (rowData) =>\r\n        rowData?.fullTimeSalary.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ','),\r\n      cellStyle: {\r\n        width: '8%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '8%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tiền trợ cấp',\r\n      field: 'numberDayOff',\r\n      render: (rowData) =>\r\n        rowData?.transportationAndLunchAllowance\r\n          .toString()\r\n          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ','),\r\n      cellStyle: {\r\n        width: '8%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '8%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tiền BHXH(8%)',\r\n      field: 'socialInsuranceCosts',\r\n      render: (rowData) =>\r\n        Math.round(rowData?.socialInsuranceCosts)\r\n          .toString()\r\n          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ','),\r\n      cellStyle: {\r\n        width: '11%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '11%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tiền BHYT(1.5%)',\r\n      field: 'healthInsurancePremium',\r\n      render: (rowData) =>\r\n        Math.round(rowData?.healthInsurancePremium)\r\n          .toString()\r\n          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ','),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Tiền thuế TNCN',\r\n      field: 'personalIncomeTax',\r\n      render: (rowData) =>\r\n        Math.round(rowData?.personalIncomeTax)\r\n          .toString()\r\n          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ','),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Giá trị gia tăng(TNCN)',\r\n      field: 'valueAddedWithEachSalary',\r\n      render: (rowData) => <span>{rowData?.valueAddedWithEachSalary * 100}%</span>,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Lương thực lĩnh',\r\n      field: 'netWage',\r\n      render: (rowData) =>\r\n        Math.round(rowData?.netWage)\r\n          .toString()\r\n          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ','),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n      headerStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, []);\r\n\r\n  const updatePageData = () => {\r\n    let searchObject = {};\r\n    searchObject.pageIndex = 1;\r\n    searchObject.pageSize = 1000;\r\n    searchObject.employeeId = item?.id;\r\n    if (month) {\r\n      searchObject.month = month?.value;\r\n    }\r\n\r\n    if (year) {\r\n      searchObject.year = Number(year);\r\n    }\r\n    getListSalary(searchObject)\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          setListPaymentSalary(res.data.data.content);\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} fullWidth maxWidth={'xl'}>\r\n        <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n          Danh sách lương của nhân viên {item?.fullName}\r\n          <Box className=\"icon-close\" onClick={handleClose}>\r\n            <IconButton color=\"error\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box style={{ margin: 20 }}>\r\n            <Grid container spacing={1} style={{ margin: '20px 0' }}>\r\n              <Grid item xs={7}></Grid>\r\n              <Grid item xs={2}>\r\n                <Autocomplete\r\n                  options={months}\r\n                  getOptionLabel={(option) => option?.name || ''}\r\n                  value={month}\r\n                  onChange={(event, newValue) => setMonth(newValue)}\r\n                  componentsProps={{ paper: { elevation: 8 } }}\r\n                  fullWidth\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      label=\"Tháng\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <TextField\r\n                  label=\"Năm\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"address\"\r\n                  value={year}\r\n                  onChange={(event) => setYear(event.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"medium\"\r\n                  style={{ padding: '5px 20px' }}\r\n                  onClick={updatePageData}\r\n                >\r\n                  Lọc\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <div style={{ width: '100%' }}>\r\n              <MaterialTable\r\n                title=\"Danh sách lương\"\r\n                columns={columns}\r\n                data={listPaymentSalary}\r\n                options={{\r\n                  sorting: false,\r\n                  maxBodyHeight: '40vh',\r\n                  pageSize: 10,\r\n                  pageSizeOptions: [10, 20, 50],\r\n                  draggable: false,\r\n                  headerStyle: {\r\n                    textAlign: 'center',\r\n                    backgroundColor: colorTable.HEADER,\r\n                    color: colorTable.TEXTHEADER,\r\n                  },\r\n                  rowStyle: {\r\n                    backgroundColor: colorTable.ROW,\r\n                    color: colorTable.TEXTROW,\r\n                  },\r\n                }}\r\n                isLoading={loading}\r\n                localization={{\r\n                  toolbar: {\r\n                    searchTooltip: 'Tìm kiếm',\r\n                    searchPlaceholder: 'Tìm kiếm',\r\n                  },\r\n                  pagination: {\r\n                    labelDisplayedRows: '{from}-{to} của {count}',\r\n                    labelRowsSelect: 'hàng',\r\n                    labelRowsPerPage: 'Số hàng mỗi trang:',\r\n                    firstAriaLabel: 'Trang đầu',\r\n                    firstTooltip: 'Trang đầu',\r\n                    previousAriaLabel: 'Trang trước',\r\n                    previousTooltip: 'Trang trước',\r\n                    nextAriaLabel: 'Trang sau',\r\n                    nextTooltip: 'Trang sau',\r\n                    lastAriaLabel: 'Trang cuối',\r\n                    lastTooltip: 'Trang cuối',\r\n                  },\r\n                  body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n                }}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n            Đóng\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport { Breadcrumb } from 'app/components';\r\nimport MaterialTable from 'material-table';\r\nimport { getListEmployee } from './PaymentSalaryService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { toast } from 'react-toastify';\r\nimport PaymentSalaryTable from './PaymentSalaryTable';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\nimport { colorTable } from 'app/constant';\r\n\r\nexport default function PaymentSalary() {\r\n  const [listEmployee, setListEmployee] = useState([]);\r\n  const [shouldOpenPaymentSalaryTable, setShouldOpenPaymentSalaryTable] = useState(false);\r\n  const [item, setItem] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '1.5%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      field: 'action',\r\n      render: (rowData) => (\r\n        <>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setShouldOpenPaymentSalaryTable(true);\r\n              setItem(rowData);\r\n            }}\r\n          >\r\n            <RemoveRedEyeIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n      cellStyle: {\r\n        width: '1.5%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Mã nhân viên',\r\n      field: 'code',\r\n      render: (rowData) => rowData?.code,\r\n      cellStyle: {\r\n        width: '3%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Họ và tên',\r\n      field: 'name',\r\n      render: (rowData) => rowData?.fullName,\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Email',\r\n      field: 'email',\r\n      render: (rowData) => rowData?.email,\r\n      cellStyle: {\r\n        width: '7%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Số điện thoại',\r\n      field: 'phone',\r\n      render: (rowData) => rowData?.phone,\r\n      cellStyle: {\r\n        width: '5%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, []);\r\n\r\n  const updatePageData = () => {\r\n    getListEmployee()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          setListEmployee(res.data.data.filter((item) => item.status === 12 || item.status === 14));\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShouldOpenPaymentSalaryTable(false);\r\n    setItem({});\r\n    updatePageData();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box style={{ margin: 20 }}>\r\n        <Breadcrumb\r\n          routeSegments={[{ name: 'Quản lý', path: '/manage' }, { name: 'Tính lương' }]}\r\n        />\r\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              updatePageData();\r\n            }}\r\n          >\r\n            <LoopIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div>\r\n          <MaterialTable\r\n            title=\"Danh sách nhân viên\"\r\n            columns={columns}\r\n            data={listEmployee}\r\n            options={{\r\n              sorting: false,\r\n              maxBodyHeight: '60vh',\r\n              pageSize: 10,\r\n              pageSizeOptions: [10, 20, 50],\r\n              draggable: false,\r\n              headerStyle: {\r\n                textAlign: 'center',\r\n                backgroundColor: colorTable.HEADER,\r\n                color: colorTable.TEXTHEADER,\r\n              },\r\n              rowStyle: {\r\n                backgroundColor: colorTable.ROW,\r\n                color: colorTable.TEXTROW,\r\n              },\r\n            }}\r\n            isLoading={loading}\r\n            localization={{\r\n              toolbar: {\r\n                searchTooltip: 'Tìm kiếm',\r\n                searchPlaceholder: 'Tìm kiếm',\r\n              },\r\n              pagination: {\r\n                labelDisplayedRows: '{from}-{to} của {count}',\r\n                labelRowsSelect: 'hàng',\r\n                labelRowsPerPage: 'Số hàng mỗi trang:',\r\n                firstAriaLabel: 'Trang đầu',\r\n                firstTooltip: 'Trang đầu',\r\n                previousAriaLabel: 'Trang trước',\r\n                previousTooltip: 'Trang trước',\r\n                nextAriaLabel: 'Trang sau',\r\n                nextTooltip: 'Trang sau',\r\n                lastAriaLabel: 'Trang cuối',\r\n                lastTooltip: 'Trang cuối',\r\n              },\r\n              body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n            }}\r\n          />\r\n        </div>\r\n      </Box>\r\n      {shouldOpenPaymentSalaryTable && (\r\n        <PaymentSalaryTable\r\n          open={shouldOpenPaymentSalaryTable}\r\n          item={item}\r\n          handleClose={handleClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Loop');\n\nexports.default = _default;"],"sourceRoot":""}