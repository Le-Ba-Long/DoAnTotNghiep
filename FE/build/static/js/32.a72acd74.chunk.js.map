{"version":3,"sources":["app/views/ProfileUser/ProfileUserService.js","app/views/ProfileUser/ChangePassword.jsx","app/views/ProfileUser/ProfileUser.jsx"],"names":["API_PATH","API","API_PATH2","ChangePassword","props","open","handleClose","item","logout","useAuth","useState","pass","setPass","useEffect","userName","id","handleSave","obj","axios","post","then","res","data","statusCode","toast","success","warning","message","catch","err","error","Dialog","fullWidth","maxWidth","DialogTitle","style","marginBlockEnd","padding","Box","className","onClick","IconButton","color","onSubmit","onError","errors","console","log","DialogContent","Grid","container","spacing","marginTop","xs","md","label","variant","value","passWord","onChange","event","target","validators","errorMessages","newPassword","DialogActions","Button","type","ProfileUser","profile","setProfile","shouldOpenDialog","setShouldOpenDialog","get","getProfileUser","JSON","parse","localStorage","getItem","username","formik","useFormik","initialValues","fullName","sex","dateOfBirth","email","phone","address","avatar","roles","enableReinitialize","validateOnChange","validateOnBlur","validationSchema","Yup","nullable","typeError","matches","values","put","margin","routeSegments","name","path","handleSubmit","justifyContent","Card","sx","width","height","marginBottom","TextField","handleChange","touched","helperText","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","inputFormat","setFieldValue","Date","renderInput","params","format","CardContent","display","src","alt","CardActions","for","class","uploadImage","currentTarget","files","fileDownloadUri","size"],"mappings":"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","file":"static/js/32.a72acd74.chunk.js","sourcesContent":["import axios from 'axios.js';\r\nimport { API } from 'app/constant';\r\n\r\nconst API_PATH = API + '/api/users/';\r\nconst API_PATH2 = API + '/api/auth/change-password/';\r\n\r\nexport const getProfileUser = (userName) => {\r\n  return axios.get(API_PATH + userName);\r\n};\r\n\r\nexport const editUser = (obj) => {\r\n  return axios.put(API_PATH + obj.id, obj);\r\n};\r\n\r\nexport const changePass = (obj, id) => {\r\n  return axios.post(API_PATH2, obj);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\nimport { changePass } from './ProfileUserService';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { toast } from 'react-toastify';\r\nimport useAuth from 'app/hooks/useAuth';\r\n\r\nexport default function ChangePassword(props) {\r\n  const { open, handleClose, item } = props;\r\n  const { logout } = useAuth();\r\n  const [pass, setPass] = useState({});\r\n\r\n  useEffect(() => {\r\n    setPass({ ...pass, userName: item?.userName, id: item?.id });\r\n  }, []);\r\n\r\n  const handleSave = () => {\r\n    changePass(pass)\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          toast.success('Đổi mật khẩu thành công');\r\n          handleClose();\r\n          logout();\r\n        } else {\r\n          toast.warning(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'md'}>\r\n      <DialogTitle style={{ marginBlockEnd: 0, padding: '16px 24px 0' }}>\r\n        Đổi mật khẩu\r\n        <Box className=\"icon-close\" onClick={handleClose}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <ValidatorForm onSubmit={() => handleSave()} onError={(errors) => console.log(errors)}>\r\n        <DialogContent style={{ padding: '20px' }}>\r\n          <Grid container spacing={2} style={{ marginTop: 5 }}>\r\n            <Grid container item xs={12} md={12} spacing={2}>\r\n              <Grid item xs={6} md={6}>\r\n                <TextValidator\r\n                  label=\"Mật khẩu cũ\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={pass?.passWord}\r\n                  onChange={(event) => setPass({ ...pass, passWord: event.target.value })}\r\n                  validators={['required']}\r\n                  errorMessages={['Vui lòng nhập trường này']}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={6}>\r\n                <TextValidator\r\n                  label=\"Mật khẩu mới\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={pass?.newPassword}\r\n                  onChange={(event) => setPass({ ...pass, newPassword: event.target.value })}\r\n                  validators={['required']}\r\n                  errorMessages={['Vui lòng nhập trường này']}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n              Hủy\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Đổi\r\n            </Button>\r\n          </>\r\n        </DialogActions>\r\n      </ValidatorForm>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { getProfileUser, editUser } from './ProfileUserService';\r\nimport { toast } from 'react-toastify';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { Breadcrumb } from 'app/components';\r\nimport { Box, Button } from '@mui/material';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport './ProfileUser.scss';\r\nimport { IconButton } from '@mui/material';\r\nimport { uploadImage } from 'app/constant';\r\nimport ChangePassword from './ChangePassword';\r\n\r\nexport default function ProfileUser() {\r\n  const [profile, setProfile] = useState({});\r\n  const [shouldOpenDialog, setShouldOpenDialog] = useState(false);\r\n  useEffect(() => {\r\n    let userName = JSON.parse(localStorage.getItem('account')).username;\r\n    getProfileUser(userName)\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setProfile(res.data?.data);\r\n        } else {\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n      });\r\n  }, []);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      fullName: profile?.id ? profile?.fullName : '',\r\n      sex: profile?.id ? profile?.sex : '',\r\n      dateOfBirth: profile?.id ? profile?.dateOfBirth : null,\r\n      email: profile?.id ? profile?.email : '',\r\n      phone: profile?.id ? profile?.phone : '',\r\n      address: profile?.id ? profile?.address : '',\r\n      avatar: profile?.id ? profile?.avatar : '',\r\n      roles: profile?.id ? profile?.roles : null,\r\n      userName: profile?.id ? profile?.userName : '',\r\n    },\r\n    enableReinitialize: true,\r\n    validateOnChange: false,\r\n    validateOnBlur: false,\r\n    validationSchema: Yup.object({\r\n      fullName: Yup.string(),\r\n      sex: Yup.string(),\r\n      dateOfBirth: Yup.date().nullable().typeError('Sai định dạng ngày!'),\r\n      email: Yup.string().matches(\r\n        /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\r\n        'Đây không phải là email!'\r\n      ),\r\n      phone: Yup.string().matches(/(84|0[3|5|7|8|9])+([0-9]{8})\\b/, 'Số điện thoại không hợp lệ'),\r\n      address: Yup.string(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      values.id = profile?.id;\r\n      handleSave(values);\r\n    },\r\n  });\r\n\r\n  const handleSave = (values) => {\r\n    editUser(values)\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          toast.success('Lưu thông tin cá nhân thành công');\r\n        } else {\r\n          toast.warning(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => toast.error('Có lỗi xảy ra!'));\r\n  };\r\n\r\n  return (\r\n    <Box style={{ margin: 20 }}>\r\n      <Breadcrumb\r\n        routeSegments={[{ name: 'Người dùng', path: '/user' }, { name: 'Thông tin cá nhân' }]}\r\n      />\r\n      <form onSubmit={formik.handleSubmit} onError={(errors) => console.log(errors)}>\r\n        <Grid container style={{ marginTop: 100 }} justifyContent=\"space-between\">\r\n          <Card sx={{ width: '60%', padding: '50px 20px 20px', height: '445px' }}>\r\n            <Grid container item xs={12} md={12} spacing={2} justifyContent=\"center\">\r\n              <Grid item xs={5} md={5} style={{ marginBottom: 50 }}>\r\n                <TextField\r\n                  label=\"Họ và tên\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"fullName\"\r\n                  value={formik.values?.fullName}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.fullName && formik.touched.fullName}\r\n                  helperText={formik.errors.fullName}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3} md={3}>\r\n                <TextField\r\n                  label=\"Giới tính\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"sex\"\r\n                  value={formik.values?.sex}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.sex && formik.touched.sex}\r\n                  helperText={formik.errors.sex}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} md={4}>\r\n                <LocalizationProvider dateAdapter={AdapterDayjs} fullWidth>\r\n                  <DatePicker\r\n                    label=\"Ngày sinh\"\r\n                    name=\"dateOfBirth\"\r\n                    inputFormat=\"DD/MM/YYYY\"\r\n                    value={formik.values?.dateOfBirth}\r\n                    onChange={(value) => {\r\n                      if (value) {\r\n                        formik.setFieldValue('dateOfBirth', new Date(value));\r\n                      }\r\n                    }}\r\n                    renderInput={(params) => {\r\n                      return (\r\n                        <TextField\r\n                          {...params}\r\n                          format=\"DD/MM/YYYY\"\r\n                          type=\"date\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          error={formik.errors.dateOfBirth && formik.touched.dateOfBirth}\r\n                          helperText={formik.errors.dateOfBirth}\r\n                        />\r\n                      );\r\n                    }}\r\n                  />\r\n                </LocalizationProvider>\r\n              </Grid>\r\n              <Grid item xs={6} md={6} style={{ marginBottom: 50 }}>\r\n                <TextField\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"email\"\r\n                  value={formik.values?.email}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.email && formik.touched.email}\r\n                  helperText={formik.errors.email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={6}>\r\n                <TextField\r\n                  label=\"Số điện thoại\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"phone\"\r\n                  value={formik.values?.phone}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.phone && formik.touched.phone}\r\n                  helperText={formik.errors.phone}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={12}>\r\n                <TextField\r\n                  label=\"Địa chỉ\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"address\"\r\n                  value={formik.values?.address}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.errors.address && formik.touched.address}\r\n                  helperText={formik.errors.address}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n          <Card sx={{ width: '35%', padding: '10px 10px 0' }}>\r\n            <CardContent style={{ display: 'flex', justifyContent: 'center' }}>\r\n              {profile?.avatar ? (\r\n                <img\r\n                  src={formik.values?.avatar || profile?.avatar}\r\n                  alt=\"\"\r\n                  style={{ width: '80%', height: '80%' }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"https://static.vecteezy.com/system/resources/previews/008/442/086/original/illustration-of-human-icon-user-symbol-icon-modern-design-on-blank-background-free-vector.jpg\"\r\n                  alt=\"\"\r\n                  style={{ width: '80%', height: '80%' }}\r\n                />\r\n              )}\r\n            </CardContent>\r\n            <CardActions style={{ justifyContent: 'center' }} className=\"icon\">\r\n              <IconButton>\r\n                <label for=\"file-upload\" class=\"custom-file-upload\">\r\n                  <AddCircleIcon />\r\n                </label>\r\n                <input\r\n                  style={{ display: 'none' }}\r\n                  type=\"file\"\r\n                  id=\"file-upload\"\r\n                  name=\"filename\"\r\n                  onChange={(event) => {\r\n                    uploadImage(event.currentTarget.files[0]).then((res) => {\r\n                      formik.setFieldValue('avatar', res?.data?.fileDownloadUri);\r\n                    });\r\n                  }}\r\n                ></input>\r\n              </IconButton>\r\n            </CardActions>\r\n          </Card>\r\n          <Grid item xs={7.4} md={7.4} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"medium\"\r\n                style={{ margin: '20px', padding: '10px 30px' }}\r\n                onClick={() => setShouldOpenDialog(true)}\r\n              >\r\n                Đổi mật khẩu\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"medium\"\r\n                type=\"submit\"\r\n                style={{ margin: '20px', padding: '10px 30px' }}\r\n              >\r\n                Lưu\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {shouldOpenDialog && (\r\n        <ChangePassword\r\n          open={shouldOpenDialog}\r\n          handleClose={() => setShouldOpenDialog(false)}\r\n          item={profile}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"],"sourceRoot":""}