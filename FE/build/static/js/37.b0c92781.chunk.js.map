{"version":3,"sources":["app/views/Employee/EmployeeService.js","app/views/Employee/EmployeeDialog.jsx","app/views/Employee/Employee.jsx"],"names":["API_PATH","API","EmployeeDialog","props","open","handleClose","handleCloseDialog","item","Dialog","fullWidth","maxWidth","DialogTitle","Box","className","onClick","IconButton","color","DialogContent","Collapse","in","Typography","DialogActions","Button","variant","Employee","useState","listEmployee","setListEmployee","setShouldOpenConfirmDialog","setShouldOpenCandidateTable","setItem","shouldOpenDialog","setShouldOpenDialog","setShouldOpenViewDialog","setShouldOpenRequestDialog","loading","setLoading","columns","title","field","render","rowData","tableData","id","cellStyle","width","textAlign","code","fullName","headerStyle","email","phone","message","checkStatus","status","useEffect","updatePageData","axios","get","then","res","data","statusCode","filter","toast","warning","catch","err","error","style","margin","routeSegments","name","path","display","justifyContent","marginTop","options","sorting","draggable","maxBodyHeight","pageSize","pageSizeOptions","isLoading","localization","toolbar","searchTooltip","searchPlaceholder","pagination","labelDisplayedRows","labelRowsSelect","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","body","emptyDataSourceMessage"],"mappings":"yOAGMA,EAAWC,IAAM,iB,8HCQR,SAASC,EAAeC,GACrC,IAAQC,EAA+CD,EAA/CC,KAAMC,EAAyCF,EAAzCE,YAAyCF,EAA5BG,kBAA4BH,EAATI,KAC9C,OACE,eAACC,EAAA,EAAD,CAAQJ,KAAMA,EAAMK,WAAS,EAACC,SAAU,KAAxC,UACE,eAACC,EAAA,EAAD,0CAEE,cAACC,EAAA,EAAD,CAAKC,UAAU,aAAaC,QAAST,EAArC,SACE,cAACU,EAAA,EAAD,CAAYC,MAAM,QAAlB,SACE,cAAC,IAAD,WAIN,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAUC,IAAI,EAAd,SACE,cAACC,EAAA,EAAD,iGAKJ,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYP,MAAM,YAAYF,QAAST,EAAvD,2B,sBClBO,SAASmB,IACtB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8DF,oBAAS,GAAvE,mBAAgCG,GAAhC,WACA,EAAgEH,oBAAS,GAAzE,mBAAiCI,GAAjC,WACA,EAAwBJ,mBAAS,IAAjC,mBAAOlB,EAAP,KAAauB,EAAb,KACA,EAAgDL,oBAAS,GAAzD,mBAAOM,EAAP,KAAyBC,EAAzB,KACA,EAAwDP,oBAAS,GAAjE,mBAA6BQ,GAA7B,WACA,EAA8DR,oBAAS,GAAvE,mBAAgCS,GAAhC,WACA,EAA8BT,oBAAS,GAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KAEMC,EAAU,CACd,CACEC,MAAO,MACPC,MAAO,MACPC,OAAQ,SAACC,GAAD,OAAaA,EAAQC,UAAUC,GAAK,GAC5CC,UAAW,CACTC,MAAO,KACPC,UAAW,WAGf,CACER,MAAO,cACPC,MAAO,SACPC,OAAQ,SAACC,GAAD,OACN,mCACE,cAAC1B,EAAA,EAAD,CACEC,MAAM,UACNF,QAAS,WACPkB,GAAoB,GACpBF,EAAQW,IAJZ,SAOE,cAAC,IAAD,SAING,UAAW,CACTC,MAAO,MACPC,UAAW,WAGf,CACER,MAAO,wBACPC,MAAO,OACPC,OAAQ,SAACC,GAAD,cAAaA,QAAb,IAAaA,OAAb,EAAaA,EAASM,MAC9BH,UAAW,CACTC,MAAO,MACPC,UAAW,WAGf,CACER,MAAO,uBACPC,MAAO,WACPC,OAAQ,SAACC,GAAD,cAAaA,QAAb,IAAaA,OAAb,EAAaA,EAASO,UAC9BJ,UAAW,CACTC,MAAO,MACPC,UAAW,QAEbG,YAAa,CACXH,UAAW,SAGf,CACER,MAAO,QACPC,MAAO,QACPC,OAAQ,SAACC,GAAD,cAAaA,QAAb,IAAaA,OAAb,EAAaA,EAASS,OAC9BN,UAAW,CACTC,MAAO,MACPC,UAAW,QAEbG,YAAa,CACXH,UAAW,SAGf,CACER,MAAO,WACPC,MAAO,QACPC,OAAQ,SAACC,GAAD,cAAaA,QAAb,IAAaA,OAAb,EAAaA,EAASU,OAC9BP,UAAW,CACTC,MAAO,MACPC,UAAW,QAEbG,YAAa,CACXH,UAAW,SAGf,CACER,MAAO,qBACPC,MAAO,SACPC,OAAQ,SAACC,GACP,IAAIW,EAAUC,YAAYZ,EAAQa,QAAQF,QACtCpC,EAAQqC,YAAYZ,EAAQa,QAAQtC,MACxC,OAAO,qBAAKH,UAAWG,EAAhB,SAAwBoC,KAEjCR,UAAW,CACTC,MAAO,MACPC,UAAW,QAEbG,YAAa,CACXH,UAAW,UAKjBS,qBAAU,WACRnB,GAAW,GACXoB,MACC,IAEH,IAAMA,EAAiB,WFpHhBC,IAAMC,IAAI1D,GEsHZ2D,MAAK,SAACC,GACuB,MAAxBA,EAAIC,KAAKC,YACX1B,GAAW,GACXT,EAAgBiC,EAAIC,KAAKA,KAAKE,QAAO,SAACxD,GAAD,OAA0B,IAAhBA,EAAK+C,aAEpDlB,GAAW,GACX4B,IAAMC,QAAQ,kCAGjBC,OAAM,SAACC,GACNH,IAAMI,MAAM,+BACZhC,GAAW,OAcjB,OACE,qCACE,eAACxB,EAAA,EAAD,CAAKyD,MAAO,CAAEC,OAAQ,IAAtB,UACE,cAAC,IAAD,CACEC,cAAe,CAAC,CAAEC,KAAM,mBAAYC,KAAM,WAAa,CAAED,KAAM,6CAEjE,qBAAKH,MAAO,CAAEK,QAAS,OAAQC,eAAgB,YAA/C,SACE,cAAC5D,EAAA,EAAD,CACEC,MAAM,UACNF,QAAS,WACP0C,KAHJ,SAME,cAAC,IAAD,QAGJ,qBAAKa,MAAO,CAAEO,UAAW,IAAzB,SACE,cAAC,IAAD,CACEtC,MAAM,+CACND,QAASA,EACTwB,KAAMnC,EACNmD,QAAS,CACPC,SAAS,EACTC,WAAW,EACXC,cAAe,OACfC,SAAU,GACVC,gBAAiB,CAAC,GAAI,GAAI,IAC1BjC,YAAa,CACXH,UAAW,WAGfqC,UAAWhD,EACXiD,aAAc,CACZC,QAAS,CACPC,cAAe,mBACfC,kBAAmB,oBAErBC,WAAY,CACVC,mBAAoB,+BACpBC,gBAAiB,UACjBC,iBAAkB,kCAClBC,eAAgB,sBAChBC,aAAc,sBACdC,kBAAmB,wBACnBC,gBAAiB,wBACjBC,cAAe,YACfC,YAAa,YACbC,cAAe,kBACfC,YAAa,mBAEfC,KAAM,CAAEC,uBAAwB,8CAKvCtE,GACC,cAAC7B,EAAD,CAAgBE,KAAM2B,EAAkB1B,YAlE1B,WAClBuB,GAA2B,GAC3BC,GAA4B,GAC5BG,GAAoB,GACpBC,GAAwB,GACxBC,GAA2B,GAC3BsB,IACA1B,EAAQ,KA2D8DvB,KAAMA","file":"static/js/37.b0c92781.chunk.js","sourcesContent":["import axios from 'axios.js';\r\nimport { API } from 'app/constant';\r\n\r\nconst API_PATH = API + '/api/employees';\r\n\r\nexport const getListEmployee = () => {\r\n  return axios.get(API_PATH);\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { Collapse, Typography } from '@material-ui/core';\r\n\r\nexport default function EmployeeDialog(props) {\r\n  const { open, handleClose, handleCloseDialog, item } = props;\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth={'lg'}>\r\n      <DialogTitle>\r\n        Thông tin nhân viên\r\n        <Box className=\"icon-close\" onClick={handleClose}>\r\n          <IconButton color=\"error\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Collapse in={true}>\r\n          <Typography>\r\n            This is some content that can be shown or hidden by clicking the button above.\r\n          </Typography>\r\n        </Collapse>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n          Hủy\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport { Breadcrumb } from 'app/components';\r\nimport MaterialTable from 'material-table';\r\nimport { getListEmployee } from './EmployeeService';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { toast } from 'react-toastify';\r\nimport { checkStatus } from 'app/constant';\r\n// import ConfirmationDialog from '../../components/ConfirmationDialog';\r\nimport EmployeeDialog from './EmployeeDialog';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\n\r\nexport default function Employee() {\r\n  const [listEmployee, setListEmployee] = useState([]);\r\n  const [shouldOpenConfirmDialog, setShouldOpenConfirmDialog] = useState(false);\r\n  const [shouldOpenCandidateTable, setShouldOpenCandidateTable] = useState(false);\r\n  const [item, setItem] = useState({});\r\n  const [shouldOpenDialog, setShouldOpenDialog] = useState(false);\r\n  const [shouldOpenViewDialog, setShouldOpenViewDialog] = useState(false);\r\n  const [shouldOpenRequestDialog, setShouldOpenRequestDialog] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      field: 'STT',\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      cellStyle: {\r\n        width: '3%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      field: 'action',\r\n      render: (rowData) => (\r\n        <>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setShouldOpenDialog(true);\r\n              setItem(rowData);\r\n            }}\r\n          >\r\n            <RemoveRedEyeIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Mã hồ sơ',\r\n      field: 'code',\r\n      render: (rowData) => rowData?.code,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    {\r\n      title: 'Họ và tên',\r\n      field: 'fullName',\r\n      render: (rowData) => rowData?.fullName,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Email',\r\n      field: 'email',\r\n      render: (rowData) => rowData?.email,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'SĐT',\r\n      field: 'phone',\r\n      render: (rowData) => rowData?.phone,\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      field: 'status',\r\n      render: (rowData) => {\r\n        let message = checkStatus(rowData.status).message;\r\n        let color = checkStatus(rowData.status).color;\r\n        return <div className={color}>{message}</div>;\r\n      },\r\n      cellStyle: {\r\n        width: '10%',\r\n        textAlign: 'left',\r\n      },\r\n      headerStyle: {\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    updatePageData();\r\n  }, []);\r\n\r\n  const updatePageData = () => {\r\n    getListEmployee()\r\n      .then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          setListEmployee(res.data.data.filter((item) => item.status === 3));\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning('Lỗi xác thực!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Có lỗi xảy ra!');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShouldOpenConfirmDialog(false);\r\n    setShouldOpenCandidateTable(false);\r\n    setShouldOpenDialog(false);\r\n    setShouldOpenViewDialog(false);\r\n    setShouldOpenRequestDialog(false);\r\n    updatePageData();\r\n    setItem({});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box style={{ margin: 20 }}>\r\n        <Breadcrumb\r\n          routeSegments={[{ name: 'Quản lý ', path: '/manage' }, { name: 'Cập nhật diễn biến' }]}\r\n        />\r\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              updatePageData();\r\n            }}\r\n          >\r\n            <LoopIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div style={{ marginTop: 10 }}>\r\n          <MaterialTable\r\n            title=\"Danh sách hồ sơ nhân viên\"\r\n            columns={columns}\r\n            data={listEmployee}\r\n            options={{\r\n              sorting: false,\r\n              draggable: false,\r\n              maxBodyHeight: '60vh',\r\n              pageSize: 10,\r\n              pageSizeOptions: [10, 20, 50],\r\n              headerStyle: {\r\n                textAlign: 'center',\r\n              },\r\n            }}\r\n            isLoading={loading}\r\n            localization={{\r\n              toolbar: {\r\n                searchTooltip: 'Tìm kiếm',\r\n                searchPlaceholder: 'Tìm kiếm',\r\n              },\r\n              pagination: {\r\n                labelDisplayedRows: '{from}-{to} của {count}',\r\n                labelRowsSelect: 'hàng',\r\n                labelRowsPerPage: 'Số hàng mỗi trang:',\r\n                firstAriaLabel: 'Trang đầu',\r\n                firstTooltip: 'Trang đầu',\r\n                previousAriaLabel: 'Trang trước',\r\n                previousTooltip: 'Trang trước',\r\n                nextAriaLabel: 'Trang sau',\r\n                nextTooltip: 'Trang sau',\r\n                lastAriaLabel: 'Trang cuối',\r\n                lastTooltip: 'Trang cuối',\r\n              },\r\n              body: { emptyDataSourceMessage: 'Không có bản ghi nào' },\r\n            }}\r\n          />\r\n        </div>\r\n      </Box>\r\n      {shouldOpenDialog && (\r\n        <EmployeeDialog open={shouldOpenDialog} handleClose={handleClose} item={item} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}